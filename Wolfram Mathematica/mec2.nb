(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    717450,      14216]
NotebookOptionsPosition[    714712,      14165]
NotebookOutlinePosition[    715083,      14181]
CellTagsIndexPosition[    715040,      14178]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<D:\\OneDrive\\Documents\\POLI\\IC\\mecanismo e \
entradas\\dataVz.txt\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<D:\\OneDrive\\Documents\\POLI\\IC\\mecanismo e \
entradas\\data_Pitch_Angle.txt\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Close", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Deslocamento", " ", "de", " ", "dados", " ", "da", " ", "velocidade", " ",
     "para", " ", "que", " ", "a", " ", "integral", " ", 
    RowBox[{"(", "deslocamento", ")"}], " ", "seja", " ", "mais", " ", 
    "coerente"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data2", " ", "=", 
    RowBox[{"Subtract", "[", 
     RowBox[{"data1", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"data4", " ", "=", " ", 
    RowBox[{"Times", "[", 
     RowBox[{"data3", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"velocidade1", "=", " ", 
   RowBox[{"Interpolation", "[", "data1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vz", "=", " ", 
   RowBox[{"Interpolation", "[", "data2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z1", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"velocidade1", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dz", "[", "t", "]"}], " ", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"vz", "[", "t", "]"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"angle", " ", "=", " ", 
    RowBox[{"Interpolation", "[", "data4", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"omega", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"angle", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"dz", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", "7"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<yb( t )  [m]\>\""}], ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t [s]\>\"", ",", "\"\<(m)\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"angle", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", "7"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]b( t ) [rad]\>\""}], ",", " ", 
   RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t [s]\>\"", ",", "\"\<(rad)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8071385513603373`*^9, 3.807138551871023*^9}, 
   3.807138581973284*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"52964637-faad-4e6c-a112-758a0a446c36"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
jJYMrRL/B2rDs+U=
       "]]},
     Annotation[#, "Charting`Private`Tag$2436#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t [s]\"", TraditionalForm], 
    FormBox["\"(m)\"", TraditionalForm]},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.28, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.26, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.24, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.22, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.18, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.18, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.22, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.24, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.26, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.28, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->"Subsubsection",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"yb( t )  [m]\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8071387750921025`*^9, 3.80713966960073*^9, 
  3.807220236860284*^9, 3.8072642625742607`*^9, 3.8072665484034386`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"bcdc9e92-0683-4c31-8481-5c93e6d8b5cc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yf4P7Kkz2A==
       "]]},
     Annotation[#, "Charting`Private`Tag$2636#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t [s]\"", TraditionalForm], 
    FormBox["\"(rad)\"", TraditionalForm]},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
     Automatic, {{-0.025, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.025, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.075, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.045, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.035, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.03, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.015, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.01, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.005, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.005, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.01, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.015, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.03, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.035, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.045, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.065, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.07, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.085, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.095, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->"Subsubsection",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\[Theta]b( t ) [rad]\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8071387750921025`*^9, 3.80713966960073*^9, 
  3.807220236860284*^9, 3.8072642625742607`*^9, 3.8072665486896725`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e4b29421-5921-4268-9385-ec7d9622feee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xC1", " ", "=", " ", 
   RowBox[{
    FractionBox["lot", "2"], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xB1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zC1", " ", "=", " ", 
   RowBox[{
    RowBox[{"zot", "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zB1", " ", "=", " ", 
   RowBox[{
    RowBox[{"zb", "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xC2", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "lot"}], "2"], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xB2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", "lb"}], "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zC2", " ", "=", " ", 
   RowBox[{
    RowBox[{"zot", "[", "t", "]"}], " ", "-", " ", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zB2", " ", "=", " ", 
    RowBox[{
     RowBox[{"zb", "[", "t", "]"}], " ", "-", " ", 
     RowBox[{
      FractionBox["lb", "2"], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"li", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", " ", "=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"xB1", " ", "-", " ", "xC1"}], ")"}], "2"], "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zC1", " ", "-", " ", "zB1"}], ")"}], "2"], " ", "-", " ", 
    SuperscriptBox["ls", "2"]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", " ", "=", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xC2", " ", "-", " ", "xB2"}], ")"}], "2"], "+", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"zC2", " ", "-", " ", "zB2"}], ")"}], "2"], " ", "-", " ", 
     SuperscriptBox["ls", "2"]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1expaux", "=", 
   RowBox[{"Expand", "[", "h1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2expaux", "=", 
    RowBox[{"Expand", "[", "h2", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1dot", " ", "=", " ", 
   RowBox[{"Expand", "[", 
    RowBox[{"D", "[", 
     RowBox[{"h1", ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2dot", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"D", "[", 
      RowBox[{"h2", ",", "t"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1dot2", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"D", "[", 
     RowBox[{"h1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2dot2", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"D", "[", 
      RowBox[{"h2", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"zot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "]"}]},
      {
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"zot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"At", " ", "=", " ", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "At", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"\[Lambda]1", "[", "t", "]"}]},
      {
       RowBox[{"\[Lambda]2", "[", "t", "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qdot", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"zot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qdot", ".", "At", ".", "\[Lambda]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7961500148839192`*^9, 3.796150237310034*^9}, 
   3.7970109658837156`*^9, {3.797012751850441*^9, 3.7970127580700893`*^9}, {
   3.797012957969314*^9, 3.7970129817186265`*^9}, {3.7970130153486032`*^9, 
   3.797013322187457*^9}, {3.7970136067248955`*^9, 3.7970136090573673`*^9}, {
   3.797024682533675*^9, 3.7970248479569836`*^9}, {3.7970249945322046`*^9, 
   3.797025000152942*^9}, {3.7970251611791534`*^9, 3.797025168033781*^9}, {
   3.797026013098591*^9, 3.797026052538904*^9}, {3.7970370337253857`*^9, 
   3.7970370814833307`*^9}, {3.7970373949546824`*^9, 
   3.7970374166822095`*^9}, {3.797079266176948*^9, 3.797079439248556*^9}, {
   3.7970795579365315`*^9, 3.7970796995065804`*^9}, {3.7970803830964203`*^9, 
   3.797080448321601*^9}, {3.797085100731135*^9, 3.7970851483473597`*^9}, {
   3.797085214256007*^9, 3.797085231866709*^9}, {3.7970852635164757`*^9, 
   3.797085267567282*^9}, {3.797085314790662*^9, 3.797085501042686*^9}, {
   3.797085540889643*^9, 3.797085577354436*^9}, {3.797086056757043*^9, 
   3.7970861063511887`*^9}, {3.7970865975658884`*^9, 3.79708676475274*^9}, 
   3.797086808562425*^9, {3.797087626567214*^9, 3.7970876671528807`*^9}, {
   3.7970877114310274`*^9, 3.797087769957935*^9}, {3.797087849970097*^9, 
   3.797087919271596*^9}, {3.797096723830722*^9, 3.797096743600049*^9}, {
   3.797096775378889*^9, 3.7970967758034782`*^9}, {3.797097091231843*^9, 
   3.7970971544207373`*^9}, 3.7970986739787846`*^9, {3.797098908869074*^9, 
   3.7970989927624464`*^9}, {3.7970990508709807`*^9, 
   3.7970990928969975`*^9}, {3.7971053609901295`*^9, 
   3.7971053914225307`*^9}, {3.7971054949090323`*^9, 3.797105501194956*^9}, {
   3.7977920016607475`*^9, 3.7977920085499697`*^9}, {3.797849096670327*^9, 
   3.7978492936785927`*^9}, {3.797849331575965*^9, 3.7978493495653367`*^9}, {
   3.797850394033223*^9, 3.797850409812121*^9}, {3.7978509331310654`*^9, 
   3.797850975089986*^9}, {3.7978541671151247`*^9, 3.7978541708743715`*^9}, {
   3.7986515694531236`*^9, 3.798651628928774*^9}, {3.7986517274809084`*^9, 
   3.798651812834546*^9}, {3.7986518653489027`*^9, 3.798651867181385*^9}, {
   3.7986529535913963`*^9, 3.7986529563906517`*^9}, {3.798653160234*^9, 
   3.7986532415705633`*^9}, {3.7986532865133195`*^9, 3.798653369541637*^9}, {
   3.7986534058624907`*^9, 3.7986534067073193`*^9}, {3.798653449794532*^9, 
   3.798653565389599*^9}, {3.798655687645901*^9, 3.7986557335853767`*^9}, {
   3.798655790529843*^9, 3.798655892164824*^9}, {3.798656184658167*^9, 
   3.7986562800695877`*^9}, {3.798656325777157*^9, 3.798656505489358*^9}, {
   3.798656540062578*^9, 3.7986566527088284`*^9}, {3.7986567005359707`*^9, 
   3.7986567013964405`*^9}, {3.800179611001259*^9, 3.8001796127727604`*^9}, {
   3.8013381458654175`*^9, 3.8013381481707935`*^9}, {3.8021161343688455`*^9, 
   3.802116141459276*^9}, {3.802118641938096*^9, 3.8021186424572515`*^9}, {
   3.8021186806777334`*^9, 3.80211890948668*^9}, {3.8021189828106365`*^9, 
   3.8021190855173225`*^9}, {3.8021191602361617`*^9, 
   3.8021192712005568`*^9}, {3.8021193223967695`*^9, 3.802119324401766*^9}, {
   3.802119414053112*^9, 3.802119540886101*^9}, {3.802120148615127*^9, 
   3.8021202071178513`*^9}, {3.8045452232491817`*^9, 3.804545241844062*^9}, {
   3.804546307049661*^9, 3.8045463164717703`*^9}, {3.8045810790789423`*^9, 
   3.8045810821303215`*^9}, {3.8045812825324955`*^9, 
   3.8045812833971806`*^9}, {3.8071396864038253`*^9, 3.807139696650474*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"46531b23-8898-4625-8c24-005ead5ef8e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lb", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "li"}], " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "+", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "lb"}], " ", "li", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lb", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lb", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], "0", 
      RowBox[{
       RowBox[{"lb", " ", "li", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lb", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.797080458173938*^9, 3.797085287979849*^9, {3.7970855506750064`*^9, 
   3.797085578540344*^9}, 3.7970867656131353`*^9, 3.797086809767062*^9, 
   3.797087670677091*^9, {3.7970877290001698`*^9, 3.7970877413163195`*^9}, {
   3.7970878460916843`*^9, 3.7970878711484237`*^9}, 3.7970879205697937`*^9, {
   3.7970967255416393`*^9, 3.797096744421607*^9}, 3.797096777409843*^9, {
   3.797097094063751*^9, 3.797097108079729*^9}, 3.7970989426814327`*^9, {
   3.7970989795984917`*^9, 3.797098994055687*^9}, {3.7970990839876347`*^9, 
   3.797099093322978*^9}, 3.797105397661894*^9, 3.7971055026926165`*^9, 
   3.79711881283247*^9, 3.797791579996448*^9, 3.797792009408452*^9, 
   3.7978492970908813`*^9, {3.7978493384340277`*^9, 3.797849351927079*^9}, 
   3.797850432158806*^9, {3.7978504695204744`*^9, 3.7978504807493167`*^9}, {
   3.7978509365684032`*^9, 3.7978509454820375`*^9}, 3.7978509756305437`*^9, 
   3.7978541719002733`*^9, 3.7986516371751003`*^9, 3.798651784057747*^9, 
   3.798651814075802*^9, 3.798651868227702*^9, 3.7986529575637894`*^9, 
   3.798653332370397*^9, 3.7986533705270023`*^9, 3.798653408282752*^9, {
   3.7986534674730806`*^9, 3.7986534843767385`*^9}, 3.7986535332241216`*^9, 
   3.7986535663592615`*^9, 3.798656704564125*^9, 3.7987476505610003`*^9, 
   3.800179615509265*^9, 3.800785945733678*^9, 3.80099939435713*^9, 
   3.801320209129786*^9, 3.801333060837427*^9, 3.801338148841133*^9, 
   3.8016065079255123`*^9, 3.8020332874965487`*^9, 3.8020825985094843`*^9, 
   3.8021161817819443`*^9, 3.8021164704140573`*^9, 3.8021193251976194`*^9, 
   3.802119542927644*^9, {3.8021201989684887`*^9, 3.8021202081231613`*^9}, 
   3.8045452466551266`*^9, 3.8045455744546995`*^9, 3.804546319611904*^9, 
   3.804581088283208*^9, 3.80458129465049*^9, 3.8067821750725718`*^9, 
   3.807138777700135*^9, {3.8071396916139345`*^9, 3.8071396996643867`*^9}, 
   3.8072202399687967`*^9, 3.807264267716303*^9, 3.807266551767477*^9},
 CellLabel->
  "Out[34]//MatrixForm=",ExpressionUUID->"e5c40ac5-7999-45d1-a024-\
4227c3f87b61"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7970374095603204`*^9},ExpressionUUID->"1dcee5cb-537d-40d6-a9d6-\
cd562d630c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Para", " ", "o", " ", "lado", " ", "direito", " ", "da", " ", "maca", " ", 
    RowBox[{"\[Theta]1", "[", "t", "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"h1expaux", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h1exp", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["ls", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lb", "2"]}], " ", "+", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      SuperscriptBox["li", "2"], " ", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lot", "2"]}], " ", "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"zb", "[", "t", "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zot", "[", "t", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"E1", " ", "Cos", 
       RowBox[{"(", "\[Theta]1", ")"}]}], " ", "+", " ", 
      RowBox[{"F1", " ", "Sin", 
       RowBox[{"(", "\[Theta]1", ")"}]}], " ", "+", " ", "G1"}], " ", "=", 
     " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E1", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"h1exp", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F1", " ", "=", 
     RowBox[{"D", "[", 
      RowBox[{"h1exp", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G1", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "h1exp", "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"E1", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"F1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F1"}], "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F1", "2"], "-", 
         SuperscriptBox["G1", "2"], "+", 
         SuperscriptBox["E1", "2"]}], "]"}]}], 
      RowBox[{"G1", "-", "E1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F1"}], "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F1", "2"], "-", 
         SuperscriptBox["G1", "2"], "+", 
         SuperscriptBox["E1", "2"]}], "]"}]}], 
      RowBox[{"G1", "-", "E1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta11", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["u1", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u1", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B1", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "interna"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta12", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["u2", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u2", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B1", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "externa"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"theta11", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lb", "\[Rule]", "2"}], ",", 
        RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.2"}]}], "}"}]}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"theta12", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "\[Rule]", "2"}], ",", 
       RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
       RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
       RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.38"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zb", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Para", " ", "o", " ", "lado", " ", "esquerdo", " ", "da", " ", "maca", 
     " ", 
     RowBox[{"\[Theta]2", "[", "t", "]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"h2expaux", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2exp", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["ls", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lb", "2"]}], " ", "-", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      SuperscriptBox["li", "2"], " ", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lot", "2"]}], " ", "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"zb", "[", "t", "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zot", "[", "t", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"E2", " ", "Cos", 
       RowBox[{"(", "\[Theta]2", ")"}]}], " ", "+", " ", 
      RowBox[{"F2", " ", "Sin", 
       RowBox[{"(", "\[Theta]2", ")"}]}], " ", "+", " ", "G2"}], " ", "=", 
     " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E2", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"h2exp", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F2", " ", "=", 
     RowBox[{"D", "[", 
      RowBox[{"h2exp", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G2", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "h2exp", "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"E2", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"F1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F2"}], "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F2", "2"], "-", 
         SuperscriptBox["G2", "2"], "+", 
         SuperscriptBox["E2", "2"]}], "]"}]}], 
      RowBox[{"G2", "-", "E2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F2"}], "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F2", "2"], "-", 
         SuperscriptBox["G2", "2"], "+", 
         SuperscriptBox["E2", "2"]}], "]"}]}], 
      RowBox[{"G2", "-", "E2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta21", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["v1", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["v1", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B2", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "externa"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta22", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["v2", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["v2", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B2", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "interna"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"theta21", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "\[Rule]", "2"}], ",", 
       RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
       RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
       RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.38"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zb", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"theta22", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lb", "\[Rule]", "2"}], ",", 
        RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"zb", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7987472771833405`*^9, 3.7987473587904406`*^9}, {
   3.7987474082213583`*^9, 3.7987474611587763`*^9}, {3.7987474987232275`*^9, 
   3.798747637254788*^9}, {3.7987476688807435`*^9, 3.7987476786099987`*^9}, {
   3.798747759050618*^9, 3.7987477778051147`*^9}, 3.798748002717452*^9, {
   3.7987512595453496`*^9, 3.7987512836727257`*^9}, {3.7987517640025597`*^9, 
   3.7987518879428906`*^9}, {3.7987519520156784`*^9, 
   3.7987519819396534`*^9}, {3.7987520532350435`*^9, 
   3.7987520773164797`*^9}, {3.7987521647215786`*^9, 3.798752171812319*^9}, {
   3.798752320686392*^9, 3.798752324694767*^9}, {3.798752368219489*^9, 
   3.7987523939088435`*^9}, {3.7987526053419466`*^9, 
   3.7987526119682474`*^9}, {3.798752985779747*^9, 3.7987529913730125`*^9}, {
   3.798753064459014*^9, 3.7987530658345017`*^9}, {3.7987531447774887`*^9, 
   3.7987531517039404`*^9}, {3.7987531993062944`*^9, 3.798753234780369*^9}, {
   3.7987532674551964`*^9, 3.798753281516276*^9}, {3.798756543940822*^9, 
   3.7987565461815968`*^9}, {3.7987575119828615`*^9, 3.798757594390726*^9}, {
   3.8001797246904917`*^9, 3.800179755884306*^9}, {3.800179940859518*^9, 
   3.800179942216119*^9}, {3.800180095710779*^9, 3.800180149444025*^9}, {
   3.8001802621873984`*^9, 3.800180362081149*^9}, {3.800180399833151*^9, 
   3.800180471938245*^9}, {3.8001806597916746`*^9, 3.8001807645693593`*^9}, {
   3.800180816818575*^9, 3.8001808992400703`*^9}, {3.800181273215073*^9, 
   3.800181308640296*^9}, {3.8001813739964666`*^9, 3.8001814272041183`*^9}, {
   3.8001818461323457`*^9, 3.800181964998339*^9}, {3.8001819965299816`*^9, 
   3.8001820030425587`*^9}, {3.800182573214054*^9, 3.800182593042007*^9}, {
   3.800182634523034*^9, 3.800182714578855*^9}, {3.80018319144109*^9, 
   3.8001832651608667`*^9}, 3.8001834303535748`*^9, {3.8001834981561813`*^9, 
   3.800183508955289*^9}, {3.800183705290534*^9, 3.8001837416382923`*^9}, {
   3.800183999602153*^9, 3.800184040711172*^9}, {3.8001845940034504`*^9, 
   3.8001846016639543`*^9}, {3.800785951904145*^9, 3.800785975133509*^9}, {
   3.800786406417*^9, 3.8007864178127837`*^9}, 3.8007894529647107`*^9, {
   3.800789578982834*^9, 3.8007896099360476`*^9}, {3.800789671680832*^9, 
   3.8007896782612066`*^9}, {3.800789711191165*^9, 3.800789764958418*^9}, {
   3.800789832320367*^9, 3.80078983916407*^9}, {3.800789905086034*^9, 
   3.8007899258185673`*^9}, {3.80078997955394*^9, 3.800789993146569*^9}, {
   3.80079002650937*^9, 3.8007900871312976`*^9}, {3.8007901404767323`*^9, 
   3.8007901549559684`*^9}, {3.8007902737956696`*^9, 3.800790352394539*^9}, {
   3.800794883647307*^9, 3.800794897783482*^9}, {3.8010009889138317`*^9, 
   3.801000998874222*^9}, {3.801003978475292*^9, 3.801003985318049*^9}, 
   3.801004241334572*^9, {3.801004298360117*^9, 3.801004337792693*^9}, {
   3.801008758418641*^9, 3.8010087625765305`*^9}, {3.8013392491953983`*^9, 
   3.801339328960471*^9}, {3.801339366863848*^9, 3.8013393774883127`*^9}, {
   3.8013396544910884`*^9, 3.8013396746689186`*^9}, {3.801339767836833*^9, 
   3.8013398132019567`*^9}, 3.801339936438534*^9, {3.801351562118303*^9, 
   3.801351594111581*^9}, {3.802042146293869*^9, 3.802042153549081*^9}, {
   3.8020422595551577`*^9, 3.8020422670037127`*^9}, {3.8020430437857265`*^9, 
   3.8020430478968725`*^9}, {3.802043114523828*^9, 3.802043122370268*^9}, {
   3.8021202484965277`*^9, 3.8021204063235607`*^9}, {3.802122197986263*^9, 
   3.8021222215308194`*^9}, {3.8021228621118107`*^9, 3.802122907546113*^9}, 
   3.802123020853615*^9, 3.802123166536572*^9, 3.802124350087191*^9, {
   3.8021248015508175`*^9, 3.8021248064825935`*^9}, {3.802124845888503*^9, 
   3.8021248481285114`*^9}, {3.8045452725290737`*^9, 
   3.8045452962354045`*^9}, {3.8045453352315006`*^9, 3.804545336328273*^9}, {
   3.8045453752906165`*^9, 3.8045454048266697`*^9}, 3.8045454395332727`*^9, {
   3.804545618397917*^9, 3.804545623731288*^9}, {3.8045456831474624`*^9, 
   3.8045456966687446`*^9}, {3.804545819761959*^9, 3.8045458233401947`*^9}, {
   3.8045458775120707`*^9, 3.804545964996994*^9}, 3.804546042241974*^9, {
   3.8045461036693482`*^9, 3.804546105373272*^9}, 3.8045461748404474`*^9, {
   3.8045462415244493`*^9, 3.8045462562301817`*^9}, {3.8045463271458006`*^9, 
   3.8045463361696196`*^9}, {3.8045463984005933`*^9, 3.804546400050576*^9}, {
   3.804546461131978*^9, 3.8045465016996355`*^9}, {3.8045465410922065`*^9, 
   3.8045465695704126`*^9}, {3.8045466804017115`*^9, 3.804546683924264*^9}, {
   3.804581132722577*^9, 3.804581544575041*^9}, {3.8045820112824144`*^9, 
   3.8045820406490583`*^9}, 3.8045821413353376`*^9, {3.804583049828171*^9, 
   3.8045830773434024`*^9}, {3.8072202864534817`*^9, 3.807220296910515*^9}, {
   3.807220363735834*^9, 3.807220368919938*^9}, {3.807220425116682*^9, 
   3.8072204333307266`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"58440a08-1239-47e6-86c3-bbe4465df837"],

Cell[BoxData["0.983783670101104`"], "Output",
 CellChangeTimes->{
  3.8045830319568367`*^9, {3.804583069316467*^9, 3.804583078127534*^9}, 
   3.806782178868428*^9, 3.8071387830667915`*^9, 3.8071397415305324`*^9, 
   3.8072203016298943`*^9, 3.8072203698055706`*^9, 3.807220434178413*^9, 
   3.807264293246107*^9, 3.80726655753622*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"002fd183-525b-40d9-9057-9ffd5ed05675"],

Cell[BoxData["2.1578089834886907`"], "Output",
 CellChangeTimes->{
  3.8045830319568367`*^9, {3.804583069316467*^9, 3.804583078127534*^9}, 
   3.806782178868428*^9, 3.8071387830667915`*^9, 3.8071397415305324`*^9, 
   3.8072203016298943`*^9, 3.8072203698055706`*^9, 3.807220434178413*^9, 
   3.807264293246107*^9, 3.8072665575402074`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"9880b691-5361-4e77-8ad6-e30ec2cba7e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Termos", " ", "de", " ", "Energia"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", "=", " ", 
     RowBox[{
      FractionBox["1", "2"], " ", "Mot", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"zot", "[", "t", "]"}], ",", "t"}], "]"}], "2"], "+", " ", 
        RowBox[{
         FractionBox["1", "12"], 
         SuperscriptBox["lot", "2"], " ", 
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]ot", "[", "t", "]"}], ",", "t"}], "]"}], 
          "2"]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", " ", "=", " ", 
     RowBox[{
      RowBox[{"Mot", "*", "g", " ", "*", 
       RowBox[{"(", 
        RowBox[{"zot", "[", "t", "]"}], ")"}]}], "  ", "+", " ", 
      RowBox[{
       FractionBox["1", "2"], "k", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.0471975511965903`", "-", 
          RowBox[{"\[Theta]1", "[", "t", "]"}]}], ")"}], "2"]}], " ", "+", 
      " ", 
      RowBox[{
       FractionBox["1", "2"], "k", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", "2.0943951023932046`"}], 
         ")"}], "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R", " ", "=", "  ", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "c", " ", 
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", "2"], "c", " ", 
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"qdot", ".", "At", ".", "\[Lambda]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "First"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7710708339960613`*^9, 3.77107083780488*^9}, {
   3.7710709098058157`*^9, 3.7710710436231127`*^9}, {3.7710711048923817`*^9, 
   3.771071139011381*^9}, {3.771071348419466*^9, 3.771071406987405*^9}, {
   3.7710715579164705`*^9, 3.7710715821435604`*^9}, {3.7710722942201223`*^9, 
   3.7710723204598265`*^9}, {3.7710723598204527`*^9, 
   3.7710724395573545`*^9}, {3.771072588753183*^9, 3.771072620344256*^9}, {
   3.771072669992793*^9, 3.7710727274043074`*^9}, {3.7710727966898427`*^9, 
   3.771072872479864*^9}, {3.771072913757844*^9, 3.771073033524934*^9}, {
   3.7710735013545737`*^9, 3.771073589662245*^9}, {3.7710736209745283`*^9, 
   3.7710736307451878`*^9}, {3.771074106757812*^9, 3.771074159438382*^9}, {
   3.771074637159964*^9, 3.771074708722269*^9}, {3.7710754519761086`*^9, 
   3.771075470627987*^9}, {3.771086689274866*^9, 3.7710866907859383`*^9}, {
   3.7710869105856*^9, 3.7710870500617266`*^9}, {3.771087147374815*^9, 
   3.7710871509765944`*^9}, {3.771253391677907*^9, 3.771253405677308*^9}, {
   3.777228238217062*^9, 3.7772282799553485`*^9}, {3.7772283162190056`*^9, 
   3.777228340214219*^9}, {3.777228421549562*^9, 3.7772285042659826`*^9}, 
   3.7772917658571043`*^9, 3.777291897956624*^9, {3.7774024744665985`*^9, 
   3.7774025306599913`*^9}, {3.777402562085614*^9, 3.7774025652276754`*^9}, {
   3.7774026268796844`*^9, 3.7774026367605977`*^9}, {3.777402725927675*^9, 
   3.77740273086961*^9}, {3.777402791378333*^9, 3.777402803530838*^9}, {
   3.777402851632204*^9, 3.777402868513795*^9}, {3.777402918476009*^9, 
   3.7774029271626577`*^9}, {3.7774029815501595`*^9, 3.777403016538587*^9}, {
   3.777632214024818*^9, 3.777632231513698*^9}, {3.777722095346839*^9, 
   3.777722102019783*^9}, {3.7806905474852257`*^9, 3.7806905509546986`*^9}, {
   3.796150251792301*^9, 3.79615044106409*^9}, 3.797087018832646*^9, {
   3.797087477622899*^9, 3.797087507215741*^9}, {3.7971003054287844`*^9, 
   3.797100314299059*^9}, {3.7971028520466013`*^9, 3.797102858456749*^9}, {
   3.797102957314667*^9, 3.797102968667633*^9}, {3.797103118712126*^9, 
   3.797103120966442*^9}, {3.7971031588007593`*^9, 3.7971031951751757`*^9}, {
   3.7971032536591005`*^9, 3.7971032740377493`*^9}, {3.7971048525078*^9, 
   3.797104862548818*^9}, {3.7971049284386263`*^9, 3.7971049957248244`*^9}, {
   3.797118734941372*^9, 3.797118757816075*^9}, {3.7978504278170214`*^9, 
   3.797850429135762*^9}, {3.7978504617691813`*^9, 3.7978504623861637`*^9}, 
   3.800797378580963*^9, 3.8007978868917603`*^9, {3.8007979284494066`*^9, 
   3.800797948121763*^9}, 3.8007983451525154`*^9, 3.8007983793049273`*^9, {
   3.8007998273323345`*^9, 3.800799829461918*^9}, {3.801007803170352*^9, 
   3.8010078400138874`*^9}, {3.8010079190916348`*^9, 3.801007925273144*^9}, {
   3.801008815964772*^9, 3.801008826393865*^9}, {3.801008861556857*^9, 
   3.8010088623178215`*^9}, {3.801008919177868*^9, 3.801008919996661*^9}, {
   3.8013204280548773`*^9, 3.8013204290249395`*^9}, {3.8013354011588435`*^9, 
   3.8013354042834415`*^9}, {3.801335597970683*^9, 3.8013356053519545`*^9}, {
   3.8013358451010275`*^9, 3.8013358541801753`*^9}, {3.801338194412949*^9, 
   3.8013382009245367`*^9}, {3.801338363079425*^9, 3.801338363596286*^9}, {
   3.801338441706807*^9, 3.8013384462188416`*^9}, 3.8013389097398224`*^9, {
   3.801339113445095*^9, 3.801339128556987*^9}, {3.8013394138031282`*^9, 
   3.8013394156381116`*^9}, {3.8013399566451783`*^9, 3.801339969991335*^9}, {
   3.8013400138178854`*^9, 3.801340033373307*^9}, {3.8013501583668594`*^9, 
   3.801350158922138*^9}, {3.801350957355009*^9, 3.8013509912431746`*^9}, {
   3.801351513142573*^9, 3.801351513850819*^9}, {3.801351671472398*^9, 
   3.801351693755477*^9}, 3.804583583557273*^9, {3.807138620388587*^9, 
   3.8071386506985893`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"94c95cbb-ae66-48e1-bc2a-c1accdff1c6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Lagrange", " ", "com", " ", "seus", " ", "multiplicadores"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[DoubleStruckQ]", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zot", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]ot", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[DoubleStruckE]", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"T", ",", 
                 RowBox[{"D", "[", 
                  RowBox[{"#", ",", "t"}], "]"}]}], "]"}], ",", "t"}], "]"}], 
             "-", 
             RowBox[{"D", "[", 
              RowBox[{"T", ",", "#"}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{"V", ",", "#"}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{"R", ",", 
               RowBox[{"D", "[", 
                RowBox[{"#", ",", "t"}], "]"}]}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{"H", ",", 
               RowBox[{"D", "[", 
                RowBox[{"#", ",", "t"}], "]"}]}], "]"}]}], "\[Equal]", "0"}], 
           ")"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"h1dot2", "\[Equal]", "0"}], ")"}], " ", ",", " ", 
         RowBox[{"(", 
          RowBox[{"h2dot2", " ", "\[Equal]", "0"}], ")"}]}], "}"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckE]", "[", "t", "]"}], "//", 
    "TableForm"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797852586927451*^9, 3.7978525929291716`*^9}, {
  3.7978526302509017`*^9, 3.79785264723812*^9}, {3.7978538071023755`*^9, 
  3.797853826593302*^9}, {3.7978541472921305`*^9, 3.7978541504731894`*^9}, {
  3.801000812466301*^9, 3.801000866791662*^9}, {3.8067822777402773`*^9, 
  3.8067823279739747`*^9}, {3.8071386711648955`*^9, 3.8071386873157334`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"7b841b07-b8ce-4a4b-8b42-0c93944af92a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "Mot"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{"Mot", " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "li"}], " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "12"], " ", 
         SuperscriptBox["lot", "2"], " ", "Mot", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", 
         RowBox[{"(", 
          RowBox[{"1.0471975511965903`", "\[VeryThinSpace]", "-", 
           RowBox[{"\[Theta]1", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "lb"}], " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2.0943951023932046`"}], "+", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.797801772772564*^9, 3.7978017899882154`*^9}, 
   3.797805927379837*^9, 3.7978497239163756`*^9, 3.7978504549679937`*^9, 
   3.7978504856987658`*^9, 3.797852650372779*^9, {3.7978538153200636`*^9, 
   3.7978538275023513`*^9}, 3.797854068842256*^9, {3.7978541522848616`*^9, 
   3.79785418186302*^9}, 3.800794758107277*^9, 3.800796198257*^9, 
   3.800797880263479*^9, 3.8009994159124703`*^9, 3.8010008860372095`*^9, 
   3.8010078549072294`*^9, 3.801007933188945*^9, 3.801008078555448*^9, 
   3.8010088355384164`*^9, 3.80100886949367*^9, 3.801008928706335*^9, 
   3.8013202263883333`*^9, 3.8013204376312227`*^9, 3.8013330779636393`*^9, 
   3.8013354113689365`*^9, 3.801335610804299*^9, 3.8013358592773175`*^9, 
   3.8013382240795135`*^9, 3.8013394529730387`*^9, 3.801340118596836*^9, 
   3.801350164972628*^9, 3.8013510279816184`*^9, 3.801351520547223*^9, 
   3.801351701571916*^9, 3.801606525204318*^9, 3.802033301363752*^9, {
   3.8020825941799183`*^9, 3.8020826079880457`*^9}, 3.802116198130125*^9, 
   3.802116483941861*^9, 3.804583596118224*^9, 3.8067821923603697`*^9, 
   3.8067823311405487`*^9, 3.8071388101982374`*^9, 3.8071397762736483`*^9, {
   3.8071398451017075`*^9, 3.8071398546212673`*^9}, 3.8071401664928656`*^9, 
   3.807220482092276*^9, 3.8072643014148283`*^9, 3.8072665636418915`*^9},
 CellLabel->
  "Out[69]//TableForm=",ExpressionUUID->"aa9d9b19-3d9d-42da-8ce8-\
d4f476d12a13"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7772292748496075`*^9, 3.7772292749225607`*^9}, 
   3.7772293067719383`*^9},ExpressionUUID->"ab4ecf65-fcce-4c81-9ec7-\
4b3fb3ff7a87"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7772938017456107`*^9, 3.777293811185851*^9}, 
   3.7773948953008595`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"443439bd-c8bf-4bd7-b386-3ea6bcff8c02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[DoubleStruckE]", "[", "t", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Mot", "\[Rule]", "125"}], ",", 
        RowBox[{"g", "\[Rule]", "9.8"}], ",", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{"lb", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"li", " ", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"ls", "\[Rule]", " ", "0.3"}], ",", " ", 
        RowBox[{"k", "\[Rule]", "3000"}], ",", 
        RowBox[{"c", "\[Rule]", "200"}], ",", 
        RowBox[{
         RowBox[{"zb", "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"dz", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"zb", "'"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"vz", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"zb", "''"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"vz", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]b", "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"angle", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]b", "'"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"omega", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]b", "''"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"omega", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "}"}]}], 
     ")"}], "/.", 
    RowBox[{"Rule", "\[Rule]", "Equal"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", " ", 
      RowBox[{"ti", "=", "0"}], ",", " ", 
      RowBox[{"ts", "=", "7"}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"sol", "=", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"eqs", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"zot", "[", "0", "]"}], "\[Equal]", "0.38"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]ot", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
             "0.983783670101104`"}], ",", " ", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
             "2.1578089834886907`"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"zot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]ot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}],
             ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
            ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", 
             "0"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "zot", ",", "\[Theta]ot", ",", "\[Theta]1", ",", "\[Theta]2", ",", 
          " ", "\[Lambda]1", ",", "\[Lambda]2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "ts"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"zot", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<yot ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<yot [m]\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]1 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]1 [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]1", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Lambda]1 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Lambda]1\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ot", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]ot ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]ot [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]2 [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]2", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Lambda]2 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Lambda]2\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Pi", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], "/.", "sol"}],
            ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Pi - ( \[Theta]1 ( t ) + \[Theta]2 ( t ) )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[rad]\>\""}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["2", "2"], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                RowBox[{"0.2", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1.8", "2"], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], ")"}], 
              "2"], " ", "+", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dz", "[", "t", "]"}], " ", "+", " ", 
                RowBox[{
                 FractionBox["2", "2"], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                RowBox[{"0.2", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}]}]}], ")"}]}], " ",
                 "-", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"zot", "[", "t", "]"}], " ", "+", " ", 
                  RowBox[{
                   FractionBox["1.8", "2"], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], ")"}]}],
                ")"}], "2"]}], ")"}], "/.", "sol"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<h1 ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[m]\>\""}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"-", "1.8"}], "2"], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox[
                    RowBox[{"-", "2"}], "2"], "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                  RowBox[{"0.2", "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"], " ", "+", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"zot", "[", "t", "]"}], " ", "-", " ", 
                RowBox[{
                 FractionBox["1.8", "2"], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], " ", "-", 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"dz", "[", "t", "]"}], " ", "-", " ", 
                  RowBox[{
                   FractionBox["2", "2"], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                  RowBox[{"0.2", "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"]}], ")"}], "/.", "sol"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<h2 ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[m]\>\""}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7711032597452345`*^9, {3.777229137668547*^9, 3.7772292092240295`*^9}, {
   3.7772292438387227`*^9, 3.7772292703563766`*^9}, {3.777229312618336*^9, 
   3.777229686930296*^9}, {3.777229745465228*^9, 3.77722982820563*^9}, {
   3.777229864603204*^9, 3.7772298686527147`*^9}, {3.7772299210404334`*^9, 
   3.7772299975902653`*^9}, {3.7772301438135242`*^9, 3.777230154139162*^9}, {
   3.77723024666118*^9, 3.7772304010754623`*^9}, {3.77723047872213*^9, 
   3.7772305094062233`*^9}, {3.7772305411312065`*^9, 3.777230643216278*^9}, {
   3.7772307153638163`*^9, 3.777230716332221*^9}, {3.7772307558058977`*^9, 
   3.7772307646124716`*^9}, {3.7772308003224735`*^9, 3.777230821619346*^9}, {
   3.7772308704162755`*^9, 3.7772308875976925`*^9}, {3.777231358028452*^9, 
   3.777231390965167*^9}, {3.7772900529132905`*^9, 3.777290086647379*^9}, {
   3.777290708134918*^9, 3.7772907098071547`*^9}, {3.7772907528432145`*^9, 
   3.7772907592042656`*^9}, {3.7772908171195836`*^9, 3.777290826802956*^9}, {
   3.7772913639494123`*^9, 3.7772914223539467`*^9}, {3.777291454533947*^9, 
   3.777291600986794*^9}, 3.7772916743515005`*^9, {3.777291829230736*^9, 
   3.7772918428614864`*^9}, {3.777291928055847*^9, 3.777292014180521*^9}, {
   3.7772937717388315`*^9, 3.7772937975730057`*^9}, {3.777294049431409*^9, 
   3.7772940542768993`*^9}, {3.777294085020687*^9, 3.7772941374166865`*^9}, {
   3.777294239660467*^9, 3.777294245412338*^9}, 3.7773960028736773`*^9, {
   3.777396034995957*^9, 3.777396039573142*^9}, {3.7773960909105706`*^9, 
   3.7773961363085947`*^9}, {3.777396167472395*^9, 3.777396193784176*^9}, {
   3.777396492880782*^9, 3.7773965348928995`*^9}, {3.7773972534609175`*^9, 
   3.7773973605025277`*^9}, {3.777397465365197*^9, 3.77739757360781*^9}, {
   3.7773980025445104`*^9, 3.7773980583940973`*^9}, {3.7773981423034086`*^9, 
   3.777398157272171*^9}, {3.777398238597056*^9, 3.777398246849975*^9}, {
   3.7773983618261433`*^9, 3.7773984015446544`*^9}, {3.7773984664486604`*^9, 
   3.7773985724753327`*^9}, {3.7773986067492275`*^9, 3.777398609653426*^9}, {
   3.7773986910822506`*^9, 3.7773987376785393`*^9}, {3.77739880095455*^9, 
   3.7773988079232564`*^9}, {3.7773989267223706`*^9, 
   3.7773989314754457`*^9}, {3.777399098337624*^9, 3.777399119784937*^9}, {
   3.7773991505789423`*^9, 3.777399313286698*^9}, 3.777399755568903*^9, {
   3.7773998144949546`*^9, 3.777399842005004*^9}, {3.777399942856861*^9, 
   3.777399979672177*^9}, {3.7774001318460655`*^9, 3.7774001685134745`*^9}, {
   3.777400251941069*^9, 3.7774002779160676`*^9}, {3.777400460608494*^9, 
   3.777400463400776*^9}, {3.777400554626306*^9, 3.7774005903942685`*^9}, {
   3.7774006376611395`*^9, 3.7774007360951233`*^9}, {3.7774007955924635`*^9, 
   3.777400798097912*^9}, {3.777400841366256*^9, 3.7774010210345645`*^9}, {
   3.77740106471863*^9, 3.777401157349557*^9}, {3.77740122341485*^9, 
   3.777401223869565*^9}, {3.7774013896214323`*^9, 3.777401399463372*^9}, {
   3.777401446638316*^9, 3.777401453178274*^9}, {3.777401485068638*^9, 
   3.777401527161455*^9}, {3.7774015635920057`*^9, 3.7774015701909404`*^9}, {
   3.7774016074919543`*^9, 3.7774016077098255`*^9}, {3.777403266661922*^9, 
   3.7774032795669713`*^9}, {3.7774033930380545`*^9, 3.777403452566428*^9}, {
   3.777470690173753*^9, 3.7774706904706163`*^9}, {3.777470757011529*^9, 
   3.777470813980076*^9}, {3.777471058987892*^9, 3.7774710612073655`*^9}, {
   3.779204999136982*^9, 3.7792050032674475`*^9}, {3.7792062765348816`*^9, 
   3.779206282990938*^9}, {3.7806904113014555`*^9, 3.7806904242096233`*^9}, {
   3.796150657210005*^9, 3.796150674235469*^9}, {3.7961507132461348`*^9, 
   3.7961507156177936`*^9}, {3.796150746934743*^9, 3.796150788376909*^9}, {
   3.79615092855001*^9, 3.79615097163681*^9}, {3.796151029800264*^9, 
   3.7961510311885014`*^9}, {3.796151098771779*^9, 3.7961511341092377`*^9}, {
   3.7978527616068277`*^9, 3.7978528475655923`*^9}, {3.7978528806527166`*^9, 
   3.79785298382959*^9}, {3.797853222149555*^9, 3.7978533021191654`*^9}, {
   3.797853412408317*^9, 3.797853432340622*^9}, 3.797853657681137*^9, {
   3.797853693472251*^9, 3.797853713475763*^9}, {3.797854210297761*^9, 
   3.797854274055241*^9}, 3.7978543175254116`*^9, {3.8007948659057074`*^9, 
   3.800794871906663*^9}, {3.8007949125629687`*^9, 3.800794938324152*^9}, {
   3.8007961390189056`*^9, 3.8007961392203803`*^9}, {3.8007962186614523`*^9, 
   3.800796256441477*^9}, 3.8007966475289087`*^9, {3.800796723806085*^9, 
   3.800796727056574*^9}, {3.801000663236514*^9, 3.80100066413511*^9}, {
   3.801001410903571*^9, 3.801001413966439*^9}, {3.801001494254734*^9, 
   3.8010015530106487`*^9}, {3.8010063988629627`*^9, 3.8010064280010614`*^9}, 
   3.801007711094735*^9, {3.8010080024148664`*^9, 3.801008013903206*^9}, {
   3.80100839455367*^9, 3.8010084446935773`*^9}, {3.8010088458947296`*^9, 
   3.80100889654731*^9}, {3.8010089489721546`*^9, 3.801009002587813*^9}, {
   3.8013201993689585`*^9, 3.801320202445305*^9}, {3.801320256095974*^9, 
   3.801320259586964*^9}, {3.8013204499460382`*^9, 3.8013204550735397`*^9}, {
   3.801321880995309*^9, 3.801321937162984*^9}, {3.8013327897803326`*^9, 
   3.801332796675138*^9}, {3.8013346297296915`*^9, 3.8013346458367667`*^9}, {
   3.8013356454424496`*^9, 3.801335692567593*^9}, {3.8013357369066763`*^9, 
   3.8013358140009065`*^9}, {3.8013358878209343`*^9, 3.801336000518237*^9}, {
   3.8013360319644575`*^9, 3.801336039666568*^9}, {3.8013360770769076`*^9, 
   3.8013360833293095`*^9}, {3.8013368925897427`*^9, 3.801337012767351*^9}, 
   3.8013383988688107`*^9, {3.8013388786775665`*^9, 3.80133889369818*^9}, 
   3.801339461392099*^9, {3.8013395014693775`*^9, 3.8013395107551727`*^9}, 
   3.8013401248326344`*^9, {3.80134017345061*^9, 3.801340177206092*^9}, {
   3.801340256523858*^9, 3.8013402631709075`*^9}, 3.801349658501953*^9, {
   3.8013503046565866`*^9, 3.8013503082676086`*^9}, {3.801350343599225*^9, 
   3.8013503683222036`*^9}, {3.801350406155237*^9, 3.8013505474454556`*^9}, {
   3.801351059113801*^9, 3.801351080396869*^9}, {3.8013511719691725`*^9, 
   3.8013511777999325`*^9}, {3.8013512275151277`*^9, 
   3.8013512449597626`*^9}, {3.801351275465909*^9, 3.801351275967569*^9}, {
   3.801351343013339*^9, 3.8013513726011305`*^9}, {3.8013514301857843`*^9, 
   3.8013514487607636`*^9}, {3.8013516226790977`*^9, 
   3.8013516231133575`*^9}, {3.801351749726103*^9, 3.801351795268758*^9}, {
   3.801351886309238*^9, 3.801351904970434*^9}, {3.8013519644369807`*^9, 
   3.8013520197534676`*^9}, {3.8016064478015585`*^9, 3.801606496759121*^9}, {
   3.8016067652249413`*^9, 3.8016067727444167`*^9}, 3.8020332047573605`*^9, {
   3.802033235092001*^9, 3.80203327833521*^9}, {3.8020333669307437`*^9, 
   3.8020334094058247`*^9}, {3.802033460231169*^9, 3.8020335262493763`*^9}, {
   3.802034359261326*^9, 3.8020344343314605`*^9}, {3.802042006245019*^9, 
   3.8020420389646206`*^9}, {3.8020420828438187`*^9, 
   3.8020420989946995`*^9}, {3.8020421665445814`*^9, 
   3.8020421818335447`*^9}, {3.8020422757927475`*^9, 
   3.8020422891185207`*^9}, {3.8020430151182404`*^9, 3.802043015806149*^9}, {
   3.80204306717737*^9, 3.802043091881366*^9}, {3.8020431325315523`*^9, 
   3.8020431741897*^9}, {3.8045838369499817`*^9, 3.8045838621898813`*^9}, {
   3.80458390084377*^9, 3.8045839639178505`*^9}, {3.804584603896513*^9, 
   3.804584610289295*^9}, {3.804584652970418*^9, 3.8045846881606755`*^9}, {
   3.8045848058405128`*^9, 3.8045848265317698`*^9}, {3.8045848635818563`*^9, 
   3.804584875512005*^9}, {3.8045850699892726`*^9, 3.804585073442424*^9}, {
   3.8045854965227118`*^9, 3.804585498857544*^9}, {3.804585774220763*^9, 
   3.8045857793436155`*^9}, {3.8045858191435003`*^9, 3.804585838830865*^9}, 
   3.804586110157668*^9, {3.806782164991398*^9, 3.8067821657024975`*^9}, {
   3.8071391182679005`*^9, 3.807139163729438*^9}, {3.807139208291351*^9, 
   3.807139289632963*^9}, {3.8071395718799253`*^9, 3.8071396079046125`*^9}, 
   3.8071402465150175`*^9, {3.8072204466081715`*^9, 3.8072204621296625`*^9}, {
   3.807266568089034*^9, 3.8072665686086426`*^9}, {3.8072667250242996`*^9, 
   3.807266725944871*^9}, {3.807266761423984*^9, 3.807266762586875*^9}, {
   3.8072667976296144`*^9, 3.807266803811083*^9}, {3.807267050805566*^9, 
   3.807267077701641*^9}, {3.807267121673046*^9, 3.8072671809106145`*^9}, {
   3.807267675344532*^9, 3.807267838727621*^9}, {3.8072683148878784`*^9, 
   3.807268378793965*^9}, {3.8072684262720013`*^9, 3.807268470806865*^9}, 
   3.8072685128244953`*^9, {3.807268596734125*^9, 3.807268723183916*^9}, {
   3.8072688030981627`*^9, 3.8072688302904425`*^9}, {3.8072688833784666`*^9, 
   3.8072689172069955`*^9}, {3.807268979004759*^9, 3.8072690552607927`*^9}, 
   3.8072691427558002`*^9, {3.807269216762883*^9, 3.8072692308921313`*^9}, {
   3.8072693181597414`*^9, 3.8072693434421296`*^9}, {3.8072693799853992`*^9, 
   3.807269505804921*^9}, {3.8072695390439906`*^9, 3.8072695393790936`*^9}, {
   3.8072695780497084`*^9, 3.8072695784267044`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"87574f49-9512-4c1b-9dd6-3e489fe520e5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","pdord",
   "\"Some of the functions have zero differential order, so the equations \
will be solved as a system of differential-algebraic equations.\"",2,105,31,
   23614063559816306042,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8072685136941714`*^9, 3.807268728646309*^9, 
  3.807268832423735*^9, 3.8072689260623155`*^9, 3.807269057566659*^9, 
  3.807269146444935*^9, 3.807269422823805*^9, 3.8072694779234467`*^9, 
  3.807269511768965*^9, 3.8072695524531307`*^9, 3.8072695824648685`*^9},
 CellLabel->
  "During evaluation of \
In[104]:=",ExpressionUUID->"04cd5ed2-c8f1-4695-b266-1f00bf408539"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
ybuyH+vlWZ3NC7IkJLjL4Zsu9gOmaoUyX+VJSOK8ReOEKe5XYbkdd3eR0OSL
/QvpeJ6c/MOtzKNOQqV52q/3Yf+RqFmuJaJHQuxJ8ewz2L9MrlPTaTEioVtq
X14KYn+jM52qF2NCQmHtcvcLw7FeZwWabL5AQlJ8UusaEvB+sFnbTsGVhBRH
QqUaivB8WMi/OuJOQsMOVyVKv7Kgt1XWJfcWCT0Z8nvw8CcLnj7j9Np/n4Q2
RKA90bUsYDu5+c4HkdCsuJkHDfv//bpdd0pCSeiF6onjY+3Y33P8DD4SRUKb
xJkyt9ksUGaoPOGOIyEtu3Unp3rx+/+UEl6VSELHq98b7x3C+0ikSNTjVBIy
fv07WG0Mz/ObAbFG70jo5Rg9eAXvC3eNJhOEc0joQdUersdY35oVbF4355GQ
8Ae5VgqeN/K8jW+ji0jI1dyfMIjnjV+XVta5EhJKJrnmfl5lQX3ph9xNZSSk
O12hqo/nzbZ46Y+d5ST0vbyHN+7/+4Z3+KfXf0goorb0zzusx9WmhG/2dSSU
+o6g44X1euveGz92NpOQfrfcDU6s5+6CrIrhdsx36I7rRnj+VA2c/PueQULp
T0aDLLD+b6j4XneTjc8T198hg+eDS4pys1ofCW2RMqdnYvzDP6l9boiEuPYN
WfzDWMJyLePLOAmVu0jeIOL54qh+l+U/g/PnyZRqwN9/Ex3v0VogobjT1s6X
MRYZtx7kWiUh75C2V5/xffbVdaOVnPzou/NT/nYcz+d0mArh40c8T8uOfcXx
Cj14P2soyI8GTbt4nfH8tLm0ZWmtCD/KZW+V7sXztfC/ZxzNEvxo4P5nr104
f36pVa7oDfzowoePPNqYH6t/LqRzW/mRYVc+XRHzl9fIFNy0nR9Z/h2R6sP8
nn38TeL1bn4kq5uW1YnnUZbD7g32+/jRnbnmaNk53O/aCVt2avCjilWG9FHs
F9KXbsu/1+JHEbp+N2Rwveeu/Xfwiyk/Gt3B6Z7FYsGOcoNLu87yo9PfgxUt
mXjf3Xg+OPECP+IQIPkuU1lQ8Men9b49P3KOOJC5vRnPqx3FNw28+dEh533T
RypYkORf+fKbHz/K7GujVf/A9W9p/a58jx/JyU0eOI/90+7AGSHxEH7E0NXt
eoHn12CnSiYjjh9d/n5hWxKeX+s1jjQaJ2Gs0WD0DO8Pus9OzZel8iOli0pD
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
slEy5+hwkTiWcAydc7fJ3eI8HR5N68Yno8VH3C2iUuhwLzhkdRb6grSQdlka
/p6t8+UitIh1iczHdDqEZ1szKtEn4syERC7RYV7QqeUW+l/tjzGdK3SIWOQ4
dRsdPHr+g2cWHUrV8178758y6o3pOXRwco6P///zXjYdJU9z6eATqeLx/+9x
4kNTp67TQcOAd/0G2v4eO3JVIfYD+Xd4Hvr993o362I6XFapXX0ZbS7raB5b
QofFTzy459F/Drae+VxGh+IXh0Ti0QU3dVs3V9Kh2qimOBw9b8DaMXuLDpb9
QkGu6NIzcaf23KEDf1naxj1ou47JF3dq6VCiolZkjuaTdhFm1NMhdIuPsCG6
0uPttsAHdKiUDyjV+//+KonEtgY6OPoVdWqghWbKnqk00iF5orRdBX17i6Tg
uSd0yB3aOqiEdk5KMh5txnkQs9n6fy9rn47b/oIOXTFH7ZXRdRIeT4tb6PBT
tmuLOtrd9f0SwdeYn+sC+v9fj1q21dD9LR2k7tdeMkY3TFWdaGqnw56XtxNs
0d6bZZpkO+jQ+eWKoReaFX92cUwXHYS2KQlGo5te/9X/9AHnh6oi3//x82cd
it3USwfa3d0H69DLD3Q/uvwJ46vj4dmHflFsvPBPPx3kJ6YUBAIwn+M1YMej
w7Wu2HZ1tKzuqujbg3SQeLrojAf61fELD2nDdGBXtwRlo8NaFswHfMPrXdAt
+4heTffb/HYU43v3h7n0ES7xzqE3UvknHQ54bzjigY4u2H7/zDgdgu6Nrq9B
d2kp6Jn+xu+/9Ko4EIj1Fn0xvGiGDmscFp1pQKs857vH/xfnj8z9DXJBXCJx
b79O4wIGGBavHJ5Ha+ZZHF2xmAEZu9Ing4Kxvr7dv3tsCQOgNfzxGHpj5CUt
PWEG+IRohfwJ4RKDTwRDLi1lgJ9VLBEfivvCspDb08sYMCmldkb8KJcYybbW
qKEyIMd/aJ95GJe4+njphvXLGcAIg6ypCC5hKhIecFqagft7YkhJJJf4ZT1c
9XUFA/TqM1rcorBeB56oFMozwHzuoPLQMZwngsfWy6gwwDPuiyPzONaH2dga
ylYGbErk5/ubiM9P64o/xoYMqD3k+OdNEu7be3xeRhoz4NyCtOqCU5gft2Hv
4e0MeFWoeNH6DJdQi+qvaLBhQEFbp21ZMpdYWPFWw8+dAVn3JULU0nH+1Zzj
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
aCXT
         "]]},
       Annotation[#, "Charting`Private`Tag$29656#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"yot [m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"yot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
emDRMJwSEcgBj+j9DyrRJYGD6iWnObBMOtb1AVp5+c+C7yEcaL9rEX4LfaF3
YK1sOAfWxoVJXEZPXfnWZB7BAVMd5cmzXGK93Ls7KArfr8B4WzC6UehL74Nz
HHixdQvXD+36PPs5LZoD5fKBTd5o8TifrCOxHMjcdm35YfTt3WuiX8dzwCzl
8wYX9FolKW/dSxgPhUbkQ+iP319bXkrEeJKzCHFC++en6E8mcWAFd00O8Xee
vzPP5hoHSkJvpbmii9ZpzxZd50Dd70oH4v9dWJFnurmpHNjld7T7GHrkTc1T
vzQOxPWwqUQ/j7kefftdOgfyDS/+PINe4rwrwuguB/zWJrjGE5+/aim5Xcvk
QPWjeP8baOfpH1v+ZuPrO4jNJ663z31aoGV3H/PxsKNhBTo1KohemYfn88Gg
+RVasMNsQv4RBx7I9nQR8/Gez+g4XcgBq8Q+tyk0O/tOinEZB/oUTEtUcP7y
j/13Oq2cA2mTw1ar0dtXGzrOfcKB74tcFtqgz71sWlRXw4GEob3zo9GLEhNJ
as848I/ZLpuFrrV3GIyo50BRzVIScb1VeGQ83+wlB860OJ4QJ673M2Sh6S3O
v7HSwgvEfvpDr+LSdxy4w/rQdx99//b9uTEf8O9aIfNeE58H6pm82NbDgYV7
Wsh8jH/7XW7Wbd85MG/qsc499KyCroHeLw6cD9RvbkQnDfzlXx7Cvz8P0R5G
t52M+2QzjvF+8Mq4HrFeSyl2f/+XA+tm+kLL0H1OIVtXCXPBXWds/XuiXyzd
op0yhwu7XB8I/qArKj9O2olz4Vd7X5QesX6OvNdZKcmFpnrLp9uJ6xPbjj5W
kObCs4ZPY8T1bZ3P80I+U7lQeqxL9iZRrzKbD5owuGCwk/uPqFeeR69uuM3i
wnaNz/dfokmrDmqIcbmgL9S9iKjf9+YuJR/ic2GLVM3uafT6pqmhOlkuDJub
aZKw3n659LRVTZ4LOvEqKbJEPbY7VxCpiO//LCB9CXqBmvWVAWUubJg5ZWKE
Vs/xlFZS5YL4G+rNDWgdncjTexZx4abXo/IdaEFJ6ni8Bheezz+eTHweYQZl
Lg1LuBC39KaBE9qqtu2DqBYX5F4UXzyMtt88uG2VNhdqbbzuH0G7tYjXHtPh
wq3H4mG+xOcJNoorc/S4UMawFzmFPt1lmNO7gguSfubqAehzjlaKCwy5EKbo
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
WqaT
         "]]},
       Annotation[#, "Charting`Private`Tag$29704#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]1 [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwUWHc81d8bv649UknIV0sU0SAVrXOiIqtSUkKKSEQ22SN73eG6VvZOCVmJ
B0UDpeyQnSR7z9/9/eX1fjnnPOd5P5/zft7P3XvfSusBkUAgCHISCP//m3Qr
pzhA2udca6lQo7p1NKQuC3in0O4hptO9E2unokEjmFXSjWaNHjv3W9zhjAaV
6I2IzHtPUUIoyyezLjok/3BdNaN5oWYdvaodhXRI7HTO21h5hkrB20Ajgg7x
fQ7GkfeC0FdJrm8/n9AhZsRWSKouDE3mnvamatOh3lHexJBGQmVNnxzOn6OD
2soJLPWJgnIXEg9kHaTDZ/fjwvMrkUjPse5fuDAdVIhys3CYjlxnPoiVbqJD
3TPZxuB7MehAZTVxhJkOlzhlMm9S49Cq/5Jy72oUvA854r237jmKsFDPN1mM
AlEOwcPzronIuvGs8fn5KOi7LBB7h5aEEiaIh+UZODF4O0fVq2S02J0D/Iz1
hg389vs/pSCdnzbfkleiYPdm/v7g/lRUn2Qkk0egQ8/VbVemVtKQ2k9KLw87
HZ6T+cpvbs9AILy8KZiXDvrNWyXLD2ei6/e8dmwI0EFEYCttr0oWkieWRaA9
dOjS2cLsfy8bnRlEFmcY+cZFb34y9jQHXfQx1nktR4c7P3m7r1FfoBvXb04+
QXToNNhULFL3Ev1Q1PfRYvAXncgj5t37Ci1v6T6nYEgH6alnH2dc81D7h5Hz
s4/oMCb77Pht2mtkJvRxu5cHg+8fLGPc+/JRqKxf1L5AOryw802ueJWP2G+d
LThNpkPIdpbb1mcKUEWz566CGDqYF/lsFvtUgOTjRKuuJNNBVYe5tlW7EJ15
N1gpmEWHg4veroH9hchMJKaC8IoOXNHEY2es3qCMmkl/AuN7GFXw/jO+8gad
CWSX2FTCqGcnU2JSQBFy0HTcsvMtHbJcvG7e2F6MQt817T/wjg4BIkyb2JOL
kbr/5a+iFXR4+M6zpvRwCZo+eY+Vg4FVDAhPLd6WIKKOh+rXcjpIbHgc3a1S
ioLSCkuty+jAkbgx3NRciiJWBwVyiujwG3vE+94rQ9FRTmTt13So7Vu/fnK8
DB2fNbtZm02HdG93rtGnb9GYTWc6MYUOfvvWIY69HMlFuPXwMvI3ee/meIVa
jtqEmSvHwxnf14O1Q8S979Dq0e6INF86iLO5DRbmvkOZEsvnTzjRgSVjNcb0
VAX6yy3qnsLgf1DZ9ZpwXQXKS1mDiTt0eD+ywt5wvRJtF9lnvFOdDqmBLhUe
vZXoY3JT+uHTdMh/8C5y2hWQj0fP44f8dBA9sTapVgNoyy398AcbUUBmO6ue
xlmFQg796X7yJwqsM8qJt2hVyKLszKPesii4sMvjZFx/FdqwGzTDiVEgFHne
ovdwNaKVOI0V+UYBeNe2PKyrRrckdtptU4sCXoNvmc6LNYj7ooMhcz0NXvAP
asbq1qITNocMuksjwTM43edXei2i3bZMMaJFwnWiWcm+mVp04IiCHbttJCxP
/Nv7IrgOtVztsjY5FAmXvyzMlpd/RNUC71L2ZlJBRLFMkonzExqibrUwCKDC
ZImrwUXtT2iPcgyLlhkV6OlMHxv+fUIjqU54SpoKFjvfr2499Rm57+M8PruZ
CojqJ3PT7zOqPHOviHWWAsNe3LE9u74gmnkOl20lBcoWG76KmjMwWnXrSadA
mFUEi2nxF8QqtBM7hlPg/rCWQg5zPXL3S7O/4EyB4/rbLSeu1KPtpkV16sYU
4GhuSz4WV4+Slg1v0K5SoEs1ps1xpB45iPH5iZ6jQF6VHk+5XAOKJnoU8h6i
gK/87vMErwa0R1zJ12InBW696rO/0NCABgeFBuQ3U0Bqf2p2wI5GtOKpNmNN
pMB6nMmv+geNKNyuo0BggQzft0nyb81vRKf13z/f/48M6UF/VbTXG5EK5Y5H
0iAZnjK9dItW/YrOdHSc8+8mg6bTk/xu2lf0Y+bP17Y2MuydkP29d+ArMmhv
4qf8IMNy/vKmAsFvKLCdtoO7iQzG43ckWs5+QzUZKcxS38jQKPlOccHoGwq7
ljRQzMDyD3bp7wj6hmZFGlTTv5MhOdHD8XTeN2S5fPrSWAsZeLp6Sfqt31BR
iO5ur04yOAgqvvBY/YZyXQb49HvJ8EsrpTZJtAm17Hq41/k3GVTCWPpqVJqQ
puLhkcYJMuR/erAyZNmEjKfb/G8tkUGEtW47R2QTchVODN7CQgE/LHH04Nsm
tFDxJbdkCwUmXQJV1fuaUPgDw23kXRTQLR41tmT/jjp+dfVYMfg+fDg3Ov/6
d3SikLBvRYMCNpjrk4bjd7Sh61ykZ0CBIi3TxZGY7+iySh+7jRUFzjnu1dnd
/x39Gd7aQaVQQBMi+UOe/EBfTV7FPRqkAPn7tNIB6g+kq2boj5cp0Dp4xba6
+Afqsk1KMt5CBQNOru+L6z/QntiHV0zPUuGxlnv4g9Bm9OfQqb0y0VTIM/5Z
QXjdjDoMrM9r5FFh1kF+PLa5GRndbSiLrqOCa+y0+vf/WpDH/h/TmxaoEDJo
woWyW5Dc6NKeF1qR8G2+RqGzoQUJar15nvcwEvg595rZT7UghSx+BVX3SIg7
9LMuR74VsT7Ler8nMxJeOFx5JlTXim6TbO8GzUfCZMCLwoLRViT5+3R5BAcN
5GI5BzV525Ai4eNk+w4alFfWKD7TbkMJpeGvd56iAeH7Hps9zm3I5V7T662X
aXBh0C3pbVwbGqlMyDihQ4N6DnnC9EAb6vA4S2KxpsGW/yKPhLK3o5HlDxM5
rjS4cWjaQEKqHW10dkvb+9OAjq6E1Wi2oz9VfEbnSTTouvbinYFNO/K4l56x
LYYGe4w5/y1FtqOTcyb//iXRwNjBRCSytB2liXrpN2XSIDOgRu1odzuaTdcO
qXhJg7GYPS5fCB2IWppT8qaABkdz3bJNxDqQr7vaUFExDewqOzuYVDoQh2Ta
alUZDUqaTnLGm3cgv46fba3lNFgdoMrLh3egNpt9WnPvaIDnp0x/5Hcg5qq6
pi4G9uW4EmXZ2oG8Apkl0xnrPwq/qOVc7kC3mN80WzPO4znEOZ+6sxMNJju7
KTPiXUUm4vh8J/LmWc84xLgP9VrNjZ/GnUhy8/lRScZ92432+DoEdKKp2vid
5xn5iDi4FWx90Ymsd1UEOTLyNQzo7H/xtRM1jn1jboqmQWrMST6VmU5Ujijr
Vxl8jbygnh8Q+IlcLMjJyww+pSqnnrif+ola8++s57rRwMQ15LuJ/k/UofVI
WMWGBskKB+SueP5E04FWw/tMaCBUqLewu/YnGmoKZf+ixqiP9cItjj8/0evo
mI7MszQIP0wum+TuQikGQa//HaYBW1adW9W1LnQ3tLHm42YanDe5/yvLrgsp
10zlmm9Eguu+NUyO6kLnoxqEw8cjYSZelsWouwtxla268H6JhF5yfBCLWTcq
OjCy2dEtEkSuyo+NBXcjTlOqvK1ZJOhs+qHR8rIbqRz5756idiQ0+nNsTZ/t
RpRwOtFZOhLeutpGKXv2oOTYOXXvDirQTC6nBkX9QjcfCHD7HafC932DrLZl
v9AdB9GAq6JU2NTnbnqn+xdiL6R+dWLof/Uh3e20rb3oVvC94NBRChiGHLjE
ta8XpR7WC0ttp8Da6KyDu1wvSsrTPKpWRwH5zPB2Ex3G/9VNlW8y+kErmz7n
z4e9aPdWtbhqGgXsHhw8deVpL4r2ViM2+lPgleiH2JPxvej1HtOab+YUUPci
1+e87EUb3pfGGxn6Mvrr7tpu6EUXlJdKnbUosD9+2YBjoBeJTBZqtZymwPuV
unDX2V5EW5yIypRh9Btdxhtl7UNzjnHyFyUoQCi9P2Us2If29Lh2Z+2mQLzg
UdEOiT6U7mFe0yJIgVMOa1oap/pQ3XHl4I8MPWxv/uxTpdaHSL+ubPfmooDD
MXrhcf0+xB7G94DISgF+8oOhLMs+RM+ZCrtMoED+pKzALs8+pNP2OktnlQxX
rhCUyaQ+FEQ5+EGaob9juQ2ObCl9qJzHTmlqngxBPLGZTwv7EPOW+6pZc2SQ
MH/YMf6hD3F8MyIcYeDaT8e5jNr6kIYQ7bMLAxtLMJ9uG+lDZxU6BYIY+5n8
v5mrLfehBfshUe1FRj8JX9c6takfDV++8VpwhQyWUdKnJPf0o3/rnh9frpMh
LUF3r9CxfqTacUdZgJnRXzMCONgv9aPJzr12qhwU4Msrmpi71Y82hHzGlHkp
cLlksHXQvB/9/MwlrLCdAp7AV/HDvR+ZeZiu6zL6bdFHnFZN6kdzZ/eKH9tP
gbFvliGvU/tRB3lr4psjFNjXEWebWNyPPsiFs7crUCDiz+J59+5+1G2Y+6D9
CgXqpvZLPp7sR6UmcuT0O4z+vHRjix7zAOptjv0+a0oBc67XPQqSA2gl+2vk
khcFkvl+fZA4M4BmxQLE1xl+ol14U67glQEk1hL0Dp5T4JKUmcuc3QAa36i5
9N87CuxR3yv0GgZQ6p1oCeZVCrSEkq5J3BpE+x9sa3rvRgUeWqW8oPkgikyk
djmHUkHx+b/dbO6D6M+F3eEDcYz+8vLy+EDKILL7VXXobRkVhoscW74XDSKV
Z45ROz9RYWdlWnnVp0H06HBB/M42KgR9ZQpOmBhEzz3+m/OYpgK0HbEJIw6h
FN+01AcbVFj4pX/bbfsQWtPKyCrhjoTDI8HYQmIIGek0brMXjATjydIDd04P
oWv5on9oopEQu/ibV1VzCNU2a6gIM/zcd4LAvPy9Icb7svJeOREJaKvNewH/
IXTZaWXPZ5VIcNiRmMMaM4SU9x/nyb/K6Fd7G8mzL4aQ6oe7ISs6kTAgueo8
UDmEpDSUH7kaRIKw7MF7378PoZ068YsnjCPh6qlbKlVDQ4irg+IuzdATf0W/
I3mLQ2iL+Hey/uNIqFAtFEjgHkYbYlm6n59EwqxW/1rormH0ydH2jQ3Dfx68
s2XIVWYY/fOKNbhpHwn3jM7Vm18YRofuTLPaO0QC3dyiQFdnGAk8JOg3MnCj
bUzM5UfDCEsqxWozMKvrRy95t2EUiBy5e+wi4Yzv/MMDEcPIJ4uXk24TCTYh
YlcFUoZRU/9T6yCrSMiiap1kLRpGF/oSusrMI0E9YD0zr24Yvc546+Blynj7
LtnCeh3DaHB30s30+5FAtboZwv53GD2S2awqrR8J8kbE9fzVYeSUqlq3ncFP
182XVga8v9H5fkuWBwz+PFR1+zj3/EbmnLIsIpcjQfQc2/U3Mr/RTXfRxDPn
I6FWJv+9odJvdNnKZ7OufCQ8Ejc4waP9G2UE3uvqPhwJvDu4MotNfqP96Lv7
T7FI0CbcD+YN+o0GlyWNDDdHwmDjVq3yb79Rhw9h7vAvKgRUv6sx7f+Nrpru
S9j/nQrSRWbHt83+RvHXDolUvaeCbXyV0CPBEVRrrJB1iOHniRbWvwQNRpDb
6e1nTc2psIezycL27wjKyEow1PzL0MNV155dayNoW0nS8Z5OCjyclLj6mfcP
GnyTYhL6maG3bZ7H9sr+QUbv4l8ZZjP8WvrR5UanP+jtge6bZhYU6I/uMn8a
9AfxX9560lefAs9CA7rF4/4gWgf1vxZNCtTb9YJr5R+0NAce3Qy9vaMU4X+Q
bRSNc3vw/WTo3/qJM0stgqNoAcU9zp9k+NuDI4+8JEdRd8905AbDX49uxZrt
6qPoZ3F5LOtXMoSxjlX6GIyip36r/9W8J4PMUpTMkSejaHRmfOtUGRmceif4
/SijKOrNgNa/TIafbY71k0kbRSlPm9w+JZIB6pQXu4pGkQnv3Rfy0Qy9fDtj
FvBxFPk5Jb06RSYD+6uEn8c6R5Fa7YfYr8FkyE5W0/j1d5ThxyuyF54x/D1t
oSJobRQZmQpLFHiSYTow5eiJzX8Rh1P9PaIrGWhuV5L79vxFdtU5CUOOjPlB
WO8zuxwDWznvFLYjw+aSh9OHlP+im1kgdtSaDOra9sI3dP+ie2jFb8OSDAHT
XopPH/9FqRrHSrwek+FDeNijRM+/SOfOgYDXFmQgHool11L+IgMbvoIgBj73
OaNsLP0v8nO8+JKTsd7FtLCfr+wvGm1itZdinFfCUsWl0PAXXSNvPPhnRYbZ
pAbZu71/UYB2+mENGwZ/qFP32cxflO20NV/FntEPuoa9c9jGUDLrxU2szoz8
nWeym3aMobXCYtVkNzL8FiD8WJAeQ+Z/Qr80epNBrJBnZSceQ51igS1eAWQw
vLZj34XrY+it1fBCQRgZ4sbF1R6ZjKEEgfF0g0gydATL2kY4jyEL1mc7XePI
oFWrVtOVMIYqZbc+WskhQ7jRrb/EgjFUy+4dcqOQDPWEB9ska8dQI+uz37zv
yHDxtLuR/dgY8jjY8t6DMR95twcFx26MoaDefs8ixvxTYR9VUMX3D909rr5F
bIjR7/LymHkV/qHY6L/Nz5bJcFB8ICX92T8kEyMiWMToRybVE1/q6f9Q/uoT
5UnG95lyd3VmOucfInrJTb0+SwGRmO0X0Pd/6PfBk4szNyiwebPKYNuucbTH
zXxXKqPfqL+4wbMuM46SR/WYr4ZQIODyPTmxi+MMP9bqXMnwL0Tfp75PzMfR
28BCqcn/v5+9/i9o7uNov8L7kdZCCrhUUJrLSeMow2ZC7lYFBWYXX4hxloyj
wW0lhH3fKCBDK1U/8mUcHRSQSjJl+CfLY7V22j3j6NqhI5FneymQ/e17nMvU
OGKr3n8h+TcFfj/+9T6JZQKdeLTpBGWcAmLcY2N1ghMIhe/exzvH8GOZi/zj
BycQyBYtbllh+JuLrGf5z02gg7ec7yQSqNDZv/XBqWsTiEVaOC6HlQoCnrtC
DY0nkOFwdZEUFxWu75R64+c4gZRShQ6I8lIhouxk94ugCSSn7FYSvpUK9ToX
WH/ET6DS5we/2vFTgXPu6qGlvAnUdleZ1CRAhUtkfe3d7ycQtWJuNU2ICt5H
HrldbJtA7a4EtukdVKisd0gzH51Al3b+i3sjTAUnlGwivzaBHnG1tE8ysFDH
MIXIMYlmVapuejOwHdl19uHWSbSHu9PHj7H/mxqf9lfhSVQrGtXMzjhfmjXz
zXGxSbSIV9o4GfEDKs4KxB2aROJRaq7h26gw6PjDgXhyEp0NOXM5ljFPnpcx
a3uIJ5HBvzt2RzZR4fno+smvlydRh4DZhAYnFZZTqPTj1yfR2vx2j0UWKtzU
P7gUqzeJHlG93x5l8JcvALeJJpOoXnhadJExr/J+0y57aDWJboy2za/MUuBR
4F/hr06TyFVu/TONUR/RVYGu2OBJJMSSczyfUU/3Ny/OECMn0d7L2ufOdFCg
01Ix/uHzSXRvZZbZrokClL7HBsdfTzLmB7rwClCApe59b2PrJCJm7lDVjGPU
11P3/PHeSXSGd71LhUyBcoXJpNg/k6hge5aiSADDT7/4z+jh6iR6lb9Z454t
BYZINkNMolNIk9XVukuFAopqHJceSk2hVT4ldqFzFHjO8jy9UW4K9YjQnygc
o8BNx0+mscpTKFeMtGNchAK1entG5R5PoSxhGaPoKTKIChSpxjpMoVaTf+I7
f5PB/ataDpPnFFp6O3n9SxcZTio6WjSSp5ClelB8/kcyZB5oHDctmUJXll8I
1ieTgaXP6Epj1RR6v5X9v2GGPhvGLL2S+zKFZMvKuTGJDDs2iVsz9UyhnTXZ
JqUM/XWoLWsy/T2F/rQGn/7pxNBbj6uyjZNTyGBkpfU8Q1+Dpl1mYpin0afQ
D7nMRmQYztl6g2nTNGotlSU465FB8UFGoanANCpx6PDkuUmG5bbv9nKS02j7
h6HQuMtkMH8nudigOY3ONu077SzLyMdiPZ6sM42EvDXvmBwiQ8R/P5R0DKeR
rlllxhMJMhQ5u4b3Wk+j30q+P07uIgPhxNf9M9RpdLPEqiGUiwzbhlLqi+On
0RFD28BNbGTYT3WycU2fRldc7ixUMDH0SklD6PyraZRnxe2fukYCtem9Fawl
08hAPkkelkhgkDRv9BmmGe99c+62eRI8ufqFM/zTNCr/LnU6cZoEPhsJr65/
n0any5pOKo6RgPbSTlvo5zQalFMZJQyRIEv/8krXwDTqMiJQZ3tIUM6zKylp
bBolTPhule8kQePb6Usmc9MMPyqwNNxKgr5HdWMH16cR09l770VaSDC7I448
wTaDQvluKMw2k4Dt0xP5ws0zaKqGsM2fsX6H08UeJ6EZ9LV/IP9fBwmkDwj7
nt07g4yt9NjQLxKg1nFJ4sEZtK6z5VHEMAm0ntV8rZWdQRoj/6LmJkhgLEe3
Dz49gxbgjdnCFjI4Dlj8d/XCDPJW+r2l4wijnuTzVfwaM8i1fqhTRY3RX84L
mHZoz6CB6JGczYz6vpoc5XluMIPKrjgpDjiQoTqhMv++6Qz6k53sYOlHhhZN
6q0DT2bQw8DzUzcZ39PI2sP1v04ziLNz++nzUYz6vzibmuc1g+Q8jTR+MPAm
PT5V+6AZpDveRS1i+IM93L8nFCgz6D9y5xLdnwyyZW8j12MZ52+/cbTWltGf
zCJO16TOIM95gvvkVTLcEnrQ5587gxJSwirFxcnwqE7BX71oBt1B6xpXpkjg
5sB7aGvlDBKQsFAULiJBhPjA95a6GeR12cSD3Y4Eyc3FTjHfZtDFbQceO0qR
4I1PyK67HTPoOJdQbH5XBHyUvfd+Xz9jfyKfwKR/BHT2HX80MjqDnm6Qtuoe
ioB/EVxbcmdm0H3jy69EY8KBgH+9sV6dQZ/UXDLuNoYB30TBnROss2ir773d
fF9CQfx5ANPKplm0mLVHdCY3BOQ19DMqBWbRj69amreig0F1VUbDd/csMpM+
nVsdGgT6OWwzKhKz6Pi31/G8IYHgzZl37rvCLMLZIdfKs/0hssR3kKY4i74J
EMfJDX6QaXo76I7aLKpJ1l4V2HgGZQKHj+65MYtCONnYfPEzaPhAbB3Um0UZ
ES+KOCi+0GvX5pL1gHE/QVaLmgUfmN73Yq+l5Swy1ZDIT6b5AOsPzzpZx1mU
90ZvU6y2Dwh5az9e8JhFzqsqnOmHfGDhma6lc+AsevlK/Mqx/3ygNfCu1Qp5
FtXK3MS9u32gKNT4iVvcLKo2VUwIVvCBSJKZ9UbaLKor+JIZbeIDdpGWNl6v
ZtEndr6KxjQfuBFta8tcOov4ytN65eZ94Fi8k92z6lnEcVaqgEPHF/iS3OzZ
62eR+abhPzl1vjCV6u0Q2DKL3EeVy/mtnsG3TH9H7l+zSGWp+hSTkB+E5ZGc
N0/PIrsxM3kpY394XEh7SlqZRU4cZXYH2ANAvSTWZRvrHJrneaGtlREA3JDm
Jig0hwplisWmfgbCaE22e/TeOeR5/HJRgmUQfK575fGf1Bw6clz/FedKEGR9
KfSMl5tDnfavqCauwRDwtdRr97k5RCmpmYjrDQbTHxXeScqM/Qq6p26jELjU
VuOz79ocWhE2KNgXHQIsvxqeHTCeQ2/h+WUaCoWB/u9+WY/nkFcuZ8lkSChU
D7f5SznOocjY8e0fWkPBa7wv8EjQHFJzjZhoMQyD9bW50JN5c+h6Bv8/YdNw
6GZaCSstnUPflzjVfmSHQzkrgfFg5lDek7rEln/h8HQTFxm1ziGOndTc4ZMR
sCCyi6a8Oocy7mUM+r2MgNY9+6I+sc6jzpd7LrnUR0CRmARdbfM8UgzwcSX8
jYBIiUPRDULzSKrqHa2XnQR20rIxV0TnkfkUc9dPURJcP3oytklqHsWMP58o
P00CWbkzcdePzyO3L/3km1ok2Cp/Pr7l3Dw6yR/G7W1CgsnTl57rqMyj2DSr
yZ1OJPiK1BI6rs2jBvajZzb5k+Cl0tXEO3fmUfpfx+ATFBKEKWsndRvPowCu
pSyfOBI8VtNNvms5j0YkdPKPppBA/crdlD7HebT9OlXMIJ2hj9eNU4285hE2
tHq3lkYCbh2ztKGgeWQZMjYhkEyCUV3LdFPqPJrb/P5ETgwJPhnYZvyJn0cv
uz8olISTIPO+U6Z5xjxK+bOhp+BFAn8Tt6x/efNogkOmRsKKBCaPvLOtyuaR
2snPKx63SXDR0j9nqmYefVsPdpLHJBCzCXlh2zCPJh8ufVTYRwIWB1LuXOs8
0vsQaHOQiQQDzrSXjr3zaJecfu3Xzghwsu2c1fkzj9LM/8XeLIgA3se7TstP
z6ObH3b6OwZEQKrJfS+hlXl0/EGelIZuBJwyTK9bZF5AvgfOJv+ViIBvt0c3
dfAsoHiRY5HvR8LhwfXDN0q3LyDVsQKZp87hEHGpqNf5wAKKKWLR8wsIg/14
eb/u0QX0QzlufJEtjOFnzj0+pbCArPlPk2MdQ+G3dO3SsuoC+nZuL68VDoFz
21r5XC0XkGlDT7lyYiA08wjf1nNcQH0kG433kwHwiM0g4YznAjrgfjOaiAIg
cmlIao20gJ5LD5HGW/xg7NfcBfc3C8j+LosSpdEHvDsUgg0qFlAZr7tS5SaG
vvxwazpXt4Acbn2XX73iDUq1rAYb7Quo/kzTub5fnhDzYruj5+oCkrztyxtp
5wpH02+/M2RdRO7o5CMjGReoTYhnPs+7iPRU0uNezjqDXnTf5b2Ci4iXI/3I
0EcnmCKLRzDtWUQEjbMPFF85gl+IWWufxCJSMjD0Hsp0ABG/XJFqmUX0n9mv
0u9F9pDvMXU/+dQiqmJv1ZvtsAMV5+NZ3kqLSEXo4n8i2+ygx8Z54r76IroH
oqYsRrZga/HuuJI2I/7b9m/XPtsAhwmT6z6DRZTF1KxPvWwDz+9erGY2XUSZ
R8WeaPVZg9ztQI5Bq0W09MmpyJ5kDZ+1GjTfOy2iI/uKkq/ftgZD9a2RqV6L
6FAIdxFZwRrmLmr/9A1aROR7/wh5stYQhKL3PqAsogJ3dx2Oi9awR6Hb9GIc
I584YYFfT6yhSHbvS/G0RfQz3e+QUZE1qEs/mGV9uYgK81In87fbQL941qnh
okX0q6NlvSfMBhx3//OsrVxEMHo0aGyvLfDskKlL/7iIVqvV97c12kIyn/0m
/6ZFVATNEx8z7UCep/S6aeciqnOpuPw5yx4aWdeilQcW0RfOBqu4CgdYWvTd
zzG3iKyCuPkFdzlD2PRHi5G1RZSx9gWOmTwFsTGego9sS2hajn6E9Z0LXP1F
RYFCSyhOT+pPCtkdUpUefj+zdwk13IvfvMzsCQsZpx9MSi6hec3/7AZqPEGV
Z/NiiuwSehvd0P8ywAueP+kP0jm9hHijbhTcFvaC6eY3O7kvLKEK0RPJF6o9
4aJCYF6F+hIq3/LhYVyqJ9Dj9ZRstJfQuaDEsegGTxhjOtoqbrCEuMf85f9T
8QJswmzWYbKE/m3LVf680xson1tXQqyW0K7WPMHTOj4wfDg7DDstIfFdQ/eY
V33hFMVt76znEmo5LCbQyOcPYQtXCzMCl9AFcZ4u86RA6L8jpnyHvIQaSca0
vhchcAIWOnhjl1DBJfGmcJkICBT7YlGdsoRu7NgWyV1Mhq6A5xv2L5ZQto10
HuVpJBz9Z02WfLOEQh9tpnrZ06H9jVBJRO0SWsosUAxZfQ7SwmOqF74y+PCY
0BDBSeDhXtm90LaE6OnvS7i3p8B+ZRPmu3+WkGSgadOP6XR4mqNA45teQs7Z
ZtwuS5nQsHmTZO3yEsKU5T0NvDlg116geYhnGbG903mrN/MKqs2YYlYOL6PQ
KmfJx4uFINDYLP3q5DKafnVNhixeBGaymZX38TLqqHNu3lAphi0rmkOfri2j
x4Hf+NysSsH4rqiTm+4yOnb0sjO2LoPimjkuGaNl5GWTOJ9h8hYMQuKO0u2W
0YZ9tU6x/DvIn7SqUXNbRkcK5bcMcFQAq7bSzY1ny+jBlF3Xj9oKuFUq8Cc/
bBltcvCoN7KphBc7R11MopbRhagzwpmsAATvd7zCicuoR6H8RYIKwPXhiKSG
zGX0SknoUL8XQLqqsZzXa0b8MxH8Mq8Bll+erJMrW0aaxqkcyq0Amtu4dUeq
l1FSrQZfxyRAkmPPWOwXxnkrqQNRhCqY/fna40rzMvoja8LdPAGggp/xMXcv
o2XbD3NTTQBxqbfSioaW0WfFoylyOQATHNLyj8aXUWR6pIeqK4Di443POxeW
0bPTB3U+XwSgNX3Xb9pYRgcnhZkUOABGj6dP+nKsIPnZvsf/BVTC2RhnH/mt
K0jmbFDlo5kKGLy/JytBdAVZZZ7hEsp8B/J1M6evS62g8my3D3+myyFEqq6R
TW4FqW+S8leXK4djs49nH19cQVqsBdkOCWVwI9e6v0dzBeWLm8Rrl5SCnYn9
tyu3VhD39Zebej6VQGG76wsZc0Y8aVKvcUcRyL0LNp6LWEH7xMT06t7mww2H
cC2TmBUUmtCqVZX9GuyOUHBbygqqlQs0ekLOg8KkGJHSohX09rLVsMP7FyDn
l9Xs2rWCDq/UqC6Jp8INlFv9b2gFhW1s+lbBnQx2i3l5BhOM/W+OaRROJUDh
o5IQTFxFk9pea0UdUSB3pe4Ci8QqOkbYEe1s6AU3OL7I2susovwggyfxfnZg
V9W4Z/jUKuIxbSPf+aQLhcdaV+s0VtGJCJ9Fq1JbLCc0VBhsu4qusQpa3vwX
gW80jSSvuq4iak7Ub+4sCrYLGot47LeKWjQ1+SIVaZiqNOneE76KdL4aNNaV
0nHh6ozFlehV9C03ds2eNxY3v1nQheRVJKdaW2+L4/Gs5YqKzItVNNe72yPu
SgKW6yOKb6tcRZ/L9KcDvZPwjRi2bb4fV1GRZuHjF9rJ2O46F9Nc0yoqPFQi
sEMwBVN5eCce/FxFu7r63gm+T8GFH7Z2tw6uIsF7aeqb9FNxs/v2L8rjq4j1
+eey6f5UPHtyR2nJwiqqOHl9mHIzDfNPiWRIMq0hkrbyUGxJGpbL3hMZw7WG
ovi/0p9zpuMbRmI+3Pxr6M0W9e7dqunYTkTC2nXnGgpM7JyiP03H1Bapu//2
r6EESuBT19h0XBh2RMPg6BpyJEfdUshNx83Kx05/VVhDP0yKOA5kpeNZwklJ
rLSGuOzk378hp2P+slOCr9XX0J4PWa3ylulYzvYcq+jNNeQgtGLNdJYRX1px
hnx3DcXzFvofIDDiD13sYzZbQ1+ntvPTGfelPr/81c5mDf0ZU7iz2zQNF+po
vBtyWUPv0jJuPOFJw81bruXcfLaGdL+zVklmMfL/dCO6LmwNFdOSKzvOpmJ+
n1v+8vQ1VKQzjAlfUvDxM3r2WUlryJPzjC5cSME8f59nOmWvIR7OcK7OqmTc
H933U7lgDXXzGdwnnknGEQsmisPv11D4IbfBHZJJeDTfevO+kTW0rnXcTbc3
Hj+X9M+KO7yOQoQ/0lqjqNiu/VOX+cl1pBMrP+ZiRcFq/jxbTuN1ZCLjoryq
QsaLgySHjmvrCB+8WpXIFIG1EuOUBOzX0T6DiBbJDT/MLpjfHf52HQWdnZ7P
uP8A93yY3XL3/TryYtnXcdf7Ni60O3nhcMM6uno+alDaEuP738uz63vWUbtd
stU/HX0oD61z5CRuoM8ndrHUUZyAfIYrp51rA32x0G6pi3QFs7/qPRnbNtCO
CSFDhTOeIHD5+4VL4htI5qJMgeCED4wt8DttP7yBTpYd33ku7xnUpOvkDJ7Y
QOB6o3VbsD/EaMf0FKANdMwhWK/FJRCesHRv9VHZQOPLz277KAbDpYLdF7Wu
baCxirNfoDcEdt6/77RXdwMlvzR59Z9OGMxuScuZvL+BXvH76LmlhcPnyt89
leYbqF2Yw7LkQQQkWh7kC7fbQNmnnI8cGIwAx52PLxq4bSCOpl8N2Rok0Kx/
5XTIbwPlnWou7kli+GmX6ZzVsA0kaMqtZdBLgmXJ47++RG0g7/u7ztVxkKGp
3ZEvNnEDqd31WzaVIkOmf9nFR1kMfjRq3Rv+//vSiTUnhfwNNFMgXD4qTAbt
IfSC4+0GKrj+5MjjQca8QPX+1VazgUTyf9GDGf6fqPSBL6N+A9W8PHFPRoQE
HVPslxxaNpAS69dC4aAIcJ172kz8tYGYFbZUHiaFw56lf/fDRzaQ9aVtf/tr
QqFm1XDqv+kNlF6vtW9rTjCYEJo9Mlc2kHn1ngPmFwOBxXuffwyRgIVKeAIk
FPyglVm/0ZCdgGWGrIQWk7zBmf2b3r8tBGymy//DOMYeVAM5Uwu2E/BLEtz+
pfcIRLiV/joLE7BodtZoJu0ajIe4yuLdBMx1dBddfUwLV/IWObOJEXBpuqeU
6F0LHBExAfUSBHzTO9+SZ9YR3+eT5KAcImADZ73QQKIXlqPev3JbloDLKybv
Fh7xw6wCcbTdJwk4h/+wY3NjKG6NaukeOk3AmQUlqtc+knHmjs3iLzABf2rv
f33hMQ0/jVWxsLlIwN11N1crGqKx2k7vAnlVAvY5/TY6pTcOiyS8XV7XJOD3
qubLuXEJeHzP3PkP1wk4eDPbM8PVRAzJhwODbxFw71wdM998EiaJPfx2TZ+A
+63Um28XJ+P76UmCQvcJ2EUprvzZmRQsJ/HToMeEgHHUVKKdbQpmy+ZPTzUn
YPnmPtY3Q8m4TUrz36MnBOwQXKz9RiwZZ+b6y8nYE7B2lff+bSeS8NMjVS4L
zgQ8XBMgHLcrEau/Xq5+507A+3f3KXB8iMc7j8lx+foQsPT6lXZe7lg8Xvj4
mmoAASPty2nr2+kYTmTQt4QS8LHsjIvdf6mYXNL7q5XE4EvtUstWMgkbnxI+
EE8jYF/2+KVO4RB8ovy6pVEsAf8UaPN8qOSL2c+FvpFMJODfp7s8ExcdcPZ5
woWiLAJmy+kysskxBdcahWDXlwQ8vrQwqzXsChoXbb8rFhBwWL9xV1STH0yq
DBt+LWfw/faC1aanFKj+vDszsoqAnwbS7327GQUU9dsTd2oJWNNv/46BbbFw
4mq928hXApYylq4b5UwCju+sH142E7DeXpLKw9Rk6LiOeOw7CNiPvcR84nAq
uOrkxzANEPBZpYd8ukIZoNnxt6/uNwHL/VbcXeKUCbvviEuGjRGwZZ/oRVyf
BdUG9GLheUa+YvToR5ovgNrbtN67zLjPtphn+W658OA+96WMDQI23txea5/0
Ek4MXgh9zMKER5sMnWa+vmLMS+7NxziZMK+I/vAZxzzo/F383/ImJvxBsViW
vJYHOWZT94GPCfsfOjUw+vQ1uP49mO0nyITDjQqeS0y8Bs3HxlPqIky4IT7x
9D7dfHBPHepZ3cOEhdJf2S6V5sOrnyb1L8SZcKqY47jvlgLo5Rsp1TvIhBPN
CF9I+gWwRdUsg+cIEybVnHD6k1gA2GuUWn6MCbOOfV+61V4A1iXm3hbyTLhe
6pJNwHwBJE+MWYmcZcJ1Va+1QrgL4ft+S/3680xYkfym+KBQIRANJlRdLzHh
mPletzmRQjgW+UReWo0J//hxMuK2cCEY10+Jd11hwmfsOGlZWwqBymy7LeQG
E34rd50uTiiE96dmCWduM2HNLY/CCH8KYNbafvyvPhOOdNhwM/5SAGJZ8z9j
7zNhlQfJsfYZBaDd6/hJzZQJ7yV4NPi4FYCf4FLRijlj/emL4n0aBVCk+TQ1
5wkTJgRrPsoQLIDhZyukO/ZMmDzcJb3QmQ8C71w9uJ8y4Q3X/v0jUflwaXbN
4q07E76dbT8erJkPjlIeuuY+jPPw3eGJ9dfQHu11/EsIE768JLy8R+M1cDQR
97mQmPDXu72966N5oMDhu0WKxoQzr4YzgXcexDj4/Q1KYMIU8vs7z4+8gs+5
7B2nUpkwW82rTMUjL2FlMKB2NJMJ85P2714TywW968FJqvlMuHAxxMt3LhtC
gnjCl4uY8JcuB83Ipix4VxXqmv2WCXtmppy8nJ4Ju45G6HB9YMIBVO7ZwtPp
0MsTuelzGxPuQFFFd9iSYMsFgRXnLiYc9+FEaNftBDjvEjUi2ceEm14p7fVM
j4PkP9E1gaNMOFu58KD6xSgwqn3ufHmNCYtvTRxUDAoE6tpu0yUmIh7xK122
MPGF93JJN7LYiPjlL6/WRYo7iKWkHOHcQsSrU88Ero48gBudYjtL+YnYscRZ
6rOLAjzbms5ltoOI2+BMgk6NPh72yBz6KErEey01/1ywdcICxZI/nA4Q8c1s
MzNpWU+sPJ4NEtJErP/hhSn3og92Epd+2X6UiNlvptX7B/rjTL3c2IDjRPz5
l5+ywFgQbqccDpQ/RcQDuyXanATDMOeXVw4j54iYtqOzR94rAp8iyhjTlYh4
vCC3KryVhB8p5F9TUSFi6lckVspNwQ5/v9/LUCfimQMyLBu8VOwdP2PNdo2I
G1XrIw7PU3HYFX7vB9pEXMlef1qpKhJHMx0nv79NxENGepuUntBwaoF28j4D
In67K3wZM0fhvAcO+d73iVgiMVfF4GkULheMqu4zIeIw3oYGoeYo/PFT8Xds
TsTx4mVn65npuNmlvT/Bioi3i3wSahWk41+HlqbXbYlYICP328+tdDz6awez
gRMRX7B+80x9JgrPk05te+dKxBYs3CTLd1GYeOHOPhEvIv7u4CJgZh2Feedd
jrk8I2LONm5Q3RKFhTPjlDoDifid7ZWrvLE0LK777rpCGBGft3+XFs9Hw0d5
eozoZCKGTwfe/XCMxGcq1m0XaES8aKnE4/6FilWe7Pa9GUvEu47/ky/lpOIb
opj6JoGIbxVbuSUcpWDDZsNU/lQiFg3ITwth+D9zP69C20wiPmZ4O79Xi4S9
R6ubZV4TcRXfQTZTvzAcFjcwGPGGiKNZYsN4bobgGE2WuYlSIibPv3n7d2sQ
fp1/cfvLaiJ2FSUril1/hnufftQ+2EzEDbqflQeC7fGY9J8Hge1EfP3D7etl
r6zwYg+nw0gXEdepDak6HTPGm5XUaOlDRPwzyW3LDqWTcI67sVV0gYiDe1zv
8sY7QVzsD53/hJnxIeHJa6EfSZCpMWv6dBczFrFeYgs4RIHCDX6nDlFmzJ5c
7WAZSoUvRjfpUVLMODzvrWLV2ShYlupo33aWGdO3DXnMuMQBW8/SiM15Zuy5
rP9SoCIetkYILzVdZMZT3uV/bBaeg8TsnR0RmsyY41/B4/cZiaBT3nObx5AZ
HzvisPToUzJ8pEcJfjZmxty/N/QTrqbAKfurLf5mzPiZ4XnKjpYUeHGNk3LR
khlHH9pdynYjFXYdrr7KbMuMuSIlFVu+pEIElwtvlSMz3tN1wiDuTBoQfx+r
d3dlxqazfa/up6fBcEKa8vIzZpwgmN3eYZwOt1wNWEuCmHEtG8te+9J0+HxL
sMY+nBl7mDQmjbBlwJnj3zyPUZlxSo6qq7hGBrzcGnhuis6MTxtd9BAJyYA9
4+dXX8Yz4zLjd84Z1RlA/rxcapHMjIt+ClLmJjOAJaPA8WAGMy7IcS8zEswE
Bx+L4yM5zPjgoM0P4ROZMHJXfCYtjxm/vqynckwjE3TP9OQZvWHGmhyvH5bp
ZUK9UJTl3jJmfCbmF1ORcSacm7si/auCGat9+vxl/4NMyGviGI2rYcbHJfAm
LoNMEH1ZlaH7kRlf1t1drnslE6hBTx8INTDjjxpVoo3ymcBmemxfaxPjvgc5
77oLZIKT0lgvpZXBj/4xw7CxDBjdnfb82k9mrBh8xVPtbQborerrbe5lxrZ5
/cMT3hnQ2C4g3DDIjFnU5pYylDIAv/naFvSHGXeKrv5HW0uHfFJApMo4M76e
vFmvJS8daKrLW94vMONC1v+Ko5nTgeNAQaPXKjNOTWpjRSlp8JTZIgQxseCs
eZ1Kt1NpYFDezf6WiwXvZW/QClJPhW902genzSzYuufh4/qGFFC0v+Jzgp8F
cy4KjV9TTYH9h6vWX+9kwXIftyedPZEMdK6n5VaiLNjuivIFkfQk4Pot+/TQ
ARa8Y7I0R4YvCcYTUucyj7LgL1Xv5CwrE+DN1oCxBCUWLJUtQfnjEwP7x3G2
vgoL/rPD7MJd6Wigf14y/U+DBd9XPWxo8yMKXH3MB2g3WfAmB33TtN2RcGFO
szPUjAVvf57cHvcwHIqa2Olqliz4unnxX47MEJB4Cdqctiw49YtIRfJ0IPCY
yjb5ujL2B2TuIuf6QnP79o8u4Sx43dZN7cwre9h71DJzhMKC9/lfFdQ1tQZL
/9oAbToL9qOBrLHnI+A84Xj5SBILdppInsO1N+Bm6FfJuDQWTCg7UnyXfAJS
Bw9wcWYzcO6mkhPh5/E5Svvn/nwWzEtBh+lv7+Hg0aM5V4pZcP/WlpG6TlPc
fj4wuPwtC/5wcLTxacxjvD+6z1wSWPAR+UPsH1ytse2kgjrtPQveI1A55rxi
i0GZLM38iQUrXeTnnFJxwLwJozxPGliw5YG/9s7GTvjOvOK/riYWLOvZz35Y
5SnO1IhtuNzKgsccJSI7Z13wXOpMblEnC74xdGNJ3sINK66qhe37xYItnuQy
UV+544jrqZYRA4x6H2wx+lfpgbuzVzXXfjPyafYc4L7iiQ8StY88GmPBpwe/
GhuneWKn27mb2yZZ8Mrv325aA574Qx7rpNIcC3522GpyH6cX5uMw+Ja3xIJD
CGO+YoJe+O7doryd6yz4sJYKJWGTF35RxEsKIrJiZbWgsdJhT7y0ydR6gY0V
z8o2RsWleOJLDyqvGXOz4jfqdju7L3tiSrmgbNNmVtz/7a+KwhsP3LvtCd85
flY8zut9gpTrjg+bf5zOFmLFPUdOR1xzd8Mu1Xt+CO5kxVRt6eYmCVf8cYdz
ge9eVsw7aNh67uVTLGDdRJkSZ8Vqt6WIqZudsdFHSTuDg6x4R3lxypSGI87b
7X3jy2FWHLZRcI/pkT1ec+iUkz/GilMakjbfMbbFqo2y29NOsuJuf2JBMKc1
HnQdaHHHrDhI/YA1ie8hlmk+XfT3AisuHbkV4tt0H7tLUWm3LrPi2A+DVada
dPGOzgs6slqsmHC7bmi1QgZrnkxvHzJixSGSZLKw5wOIDVsv0XrIiisIqVdr
m8xhZOhmdKUFK862LfngcNQafKjsutH2rNgXToe8ee8IJVMPf6r7s+LPPq9T
A228QfSFVE9BNiumu3rVnLUOh9ZDIhYer1jxdi/v+raICAh8xbOsWsiKSbqB
v24Yk2Ay/9/2/nesOG7hXEr4KhlS5XpScqtZcdbCwZatVRTQKWqUca5jxU0c
n9nve1KhovSVxpYmVmz8JEji0lwk2JxO/PmzhRXjJGFpYhYNxN9FmGV0smIP
7vdnR29EQQhYPzs3yIoHLwTG2kXSASne38b1hxUfEev04zoYDdM1Wkkt/1ix
xf2rWtVF0XC77tg7iwVW/IP/3L2rJTHAc1lMTX6VFStKez5kORQL8Jm/g5mJ
DR97HvdzKToWbNVZTb+ysuEPldoZs+uxsL9xbjaGiw03XPqjtl03DjqvDHub
bGbDXRFqSQU5cRDa1LpFlp8N18kFOhFn4wBfr3u+JsSGqze5e+w8Fg+zzcXS
n3ay4bvOOlv4zOIh82ZmGVWUDR96ueX9YGQ83GmnqxgeYMMT8mlz1NJ44NUN
bJWSZsM5PEpru5rjofqns/HCUTZcL3ON5DYUDw76j6arj7PhJZd1D4G/8SD5
S9cz7BQb5jNway0cjIcuQzVeXcSGpaXqEiYZ+yP6T8eJX2DDk723z54qj4cL
xtIHp1TY8NzunB39MfGwMCRSUq7Bhjl19y6IWsdDtummSwFabFjq1dkWCRQP
Bn/WflzXYcNr08ZR21njgc98/N5uPTYsUZKxjaUmDj6M9UyMGrLhp/95yHI5
x4GT5Ve3ogdsePdq7t1TB+JAerKS2/sRG/4vrrVWsjYWeq3zojWs2PB5rZM2
JXqxQJlJPLDDjg23HNRPrhqLgeV5L6U8NzZs2nBYdetKNHxcU3LpiWDDeZtP
PHDrYOi3hxxndiQbrhE2t3Bh+PsjTOJR9jFs2CR7aZtODg1oLGwFPKlsWF5z
9huPfiQYc38cPVXMht8Tk+65vyDDhpC6blQ3G1a+fUsxSy8I+K76hqn3s2G2
X8XXLDYFgph/eTXTbzaMnrTkP/3gDypz0lIWk2zYvP4Gh5fGM9CVfnB37xwb
Tjs/qG24yxceG8VTWpfYsKT/nq+3Fr2B3LRpFTOz45ObeJ7fqPaEVI5LR+fZ
2bH73kTp3w88oBi5G+fwsOPU11tebbvvBp8diuiGW9lxU6H3sLKzC3Tljtdv
F2DH93uXaHU5zjA+uJ/pizA7LieRb48uOQJB5O5xz93sOOnj2T88xg4gHvQ1
flSCHYc+dHmeE2oL8lXs3xMOsePM/ukvZRo2oLqI2LRl2fEnxTWnvwetQe+I
0ymuk+y41envcLjYE7A0ybOsPM2Oe97O8Nh6WIJn/EiyHWbH1gl/qpMWLIDS
vKdN8iI7PmAn/GbglTmkc9/m/nWZHb/eOeC9kf4IShRJiKrJjtPtv41t6zKD
z86fbC9fZ8fH2uhv7TTNoDuPKXNdhx33Ua8PU9YewuRvha4CPXYsPcQiPjPy
EIi7bbaY3WPHzHcTJP/bYgb8N7Mv7DJhx8tHQ27SbMxgf2i/049H7Dgv9xfT
stQjkH8vnBtgxY7NPrHo3xIzB7UVrb6zduzYUyTymOxNCzCQDd4+48SO5T6t
r0ZXPIYnZjWXM93Y8e2ao1tU71iBd+KKm743O3a71fhGPvIJUNuO5fP5s2OX
4s46lUhrSOe1GK4LZscnFgKHjuXaQOnFVGG3CHYct292xbLLFupduzRlI9nx
QloY9hS1h54Cfp/f0ez4yaGTP4W8HGByVL047jk7Pt2S4XtsmxMwiz77ey2F
HWdVf2LxK3YGiYi56+Uv2LEs5qjWP+IG1hatYqRKdvx9M7XhlJ43+Kbw3r70
nh1D5hPCZ10foHVeCl35yMjvAi4SNvCFMpXiuQff2fGtlfA7FT5+wCJOrz01
xI53ndn5/NliEER13344yMWBxXzupPeNk8A3XKZSZTMHjnu7X+S9NRlsznMK
5G7jwEIs3mlC02TQTCupsRfhwGrK6reTRilwRidCuHMPB+45lZqWeJ8KkpwP
rc+Jc2Ba4URPZhsVWB4L7mY/zIF/3pfsDSqJhOldE/bmshz4ncR/vy+J0aD3
W2391xMceHXwEJtqBA3eyjk8pSMOfBaemBrqRUHmsEbTqhIHJi7HjqS9jQIa
XVzingoHDq0QbTISoIPNanOL5DUOfHuMILWvgg6GL19Ih2lz4G5hK1Ne7mjQ
MPT1mb7NgT2N3hUrX4+GU3x6nTcNOHDUyKbS97RokHh/TObtfUa8x5e6XFqi
QcCBO2C3KQeu0S2UJm+OARaJgR4fcw68rbgjT+xiDEx3lB0fseLAzY5nyzns
Y+BXMDlE3Y4DsxuG7XmYEAP1Zx8N5Dkx8rFwstV7HwNlE+dPbXfjwF0nj3TP
DsRAZtIOkrMXB049H/dNYT0GaNenfnc/Y+RDyQo+si0WfFk/nVMM4sA5sznF
baKxYF2cGJkexoH9nLC1LKP/GJg5jXFROLCRbc7aOdlYUP/vqpJVFAdu/Ug9
tSoTC6caDsT8iOXAQds85whSsXDAY2PyZCIHtuF8Ib1jZyzwy7Qpx6VyYNac
E7YNnLFAHHj5nJDFgQ+0Jk3fnIqBSarfnHEuBw4u1rnU+yMGei4ZqH96zYFf
O+XlB75m5Ld4POXQ/yi27ngq/y+eku26+16UjIooRBmRTmWlMkpSKqWhEJJv
RpGVO+wZKkmkMhKSUTooSlSUkYykyCihgcTv+f15Xs/zfD7nvM94n/d9vW6p
CPgL0fXd+GlYfldyJq5CBLRlXqRcOZSGtw58sf5dReRfkv1RWT0NE0mPc/bX
ikDo1TRruelUDMHEuap6EVgXuoLGf5KKnl5ue5QaRaBTSuypd3AqHlpunMd5
IwJxIk8HDTak4vY22UWj7wh8fT59Vf6egis3vCws6RaB7IfrN0hvT0H6aKaw
9CfC/xybI7E/L6NAuv+hgAERcPQyV/medhm7BFQlTMdEYJXl9OvvPcmY8ILr
3L5AFBqHhIKaTZIw6PzhKoPFovDOSO5G8dtEdF+jx8gQFYV1rz0XbDyciBZx
gzUnqaJQlFJbvPZcAi7YZyo3oyQKVDcZ89G0OLRdX6r4WEUU/KwSXM5IE3qa
slI5aI0oGGSfkp+5HIvWDYs1hXRFYeVGSQcBhRi8bvBsM9VCFF6+iK/Uk4jA
CdZ601ZLUZiTkcgpofLR9GeWRcpuUehsbGiJkuPh97yw3XIHReHOsCeEmXHQ
SM74uKqnKJx8mStX2RGK8TPFp755E/7uLeysI4XiQJuSe6GfKKgEp2dusAzB
DcUJXmcDRUHbftBL+3IwRscs8tEJFYVfgm+93w4F4SfXs+enOaIw/VzLcqNp
EOqY9198FCkKX5LPPFLcdxG7F9RytySLwgrWas2X6gGo2a0VtfiKKETmqIWz
dS9gWHlm3PProrC5ZZQtb3seO5KoyRFZoiD45e7RX1x/XO0VkmZ5RxT4zl9t
ut75YZDlRDqlQJTYF+QED+r64TtVp5vvikThgpKO8apCX1QRbsm5/FAUDtF7
/cQ3+eKF/s15+x+JwkzlqT8f+n3wzZP7hUurRaF5VFTaP90Hl19VePDxmSis
YQ3qP3f3QV/fuPKbDaJQH7Rq0x1bH2y0Fag68ZrAt/f0uQzCll97pmbVO1EY
sFtuvdDDB70l++pGOwh8e496LL3ug8+HrF/e6xYF8S6Tb33EfbJ1+Nrrkyho
mRQkhRn6onum5rv1g6Ige0Fy68nbvlgTmNExNSIKegJZu6SU/ZDpQO6u/CEK
1y1K+yhlfuiiG9QX+EsUwuXa0lkO/lhF+/Fl84woZD+6G/lW6jxSfzgOC86L
AsD6UwJt5/FE4+vv9YvEwKc2R+Na1QWsuL1pki8iBrcfuU8+rQhA0qV7f3ZK
ioHt1ZQFPk8D0enIslkyVQx67KY3xXdeRDGZecHLsmKg8KnLYAs9GPdFVDFv
qovBWn7+J+q1UMxzVpc9oS0GajfExastwnCBcfqyVXpiENaebdcqdAlvzwao
3NssBomKS0ojwsJx6vTGDZW2YiDyx/rQQAQPlZ/tOLJmnxhM71RtfriZj3ZL
DnCvHxSDf1PswLA/fCxp8G8LPSEGMnIn9b44Edu3cpnXDl8xuPLBnDppGYMZ
gfWpVRfEwDVz4YItArH4prUNNYPFIO/nQJHTvlhUD/tFYvDFgCxfr+QkGIfD
H7Vyu6+IwSIxpVfRJvEorbelxSpDDFaHGeorJcSjeYzNdHWWGHwIEmq82x2P
tzZ6mt3KF4MLJ7YqZp1KwNbEi+7sIjEQi6dYkXITUHA0OolfSpzfxNvjNJSA
R9Py+92fiEG0f7b1rQOJGD/+SKyvljh/j4BzeFwi1pg3rt39XAw8H24yW1ub
iOPXP9g/axQDEx2dlTfGE1H+z/BF3WYxuHhFOC9uaRJaWc7cutMqBpve917g
EPMlMFv0lWynGASpcFdln0rC/Fn2r6geMWjd35izgJ+EXbtVlizoF4N47SPP
bt1KQvFc3a1eg2KgUlqVnP4kCTcsNHP5PCIGBUUxD0beJeGpfXZxdj/E4F3L
/cKYgSRMKTxe9vwncX/JxDj/ZxLWC//Xu2FaDKw2y9l0zyXh70NhQvn/xODq
HXmP8MXJuLI0Yc2yheLwPHnKslQ4GfdI3rSNExIH/8mOhiXE87BjRecXiYtD
kOjDB2XE9yWV1Zn/SYnD1/ZT60qJ8/upzS8GaeJw4Ni5tesHk5Dq8vHHPrY4
xJTRtXa2JeHm6jFW4xJxSMgtFiDXJKEne97ISEEc5qkz7hF3k/C6B+lE4Qpx
KFBI92+IScJXdUujFFXFQUXhtFrbmST8t3RNSaK6OPQ2TlFKrZNw9X+GH4S0
xWExJyHXc3USHmjcvtBPVxxCF9pN+QkkYYSSw6oRA3HwuePJ5xHzu8Lfxfog
iMPNEkbAbGYiDjf7+bw2FofqFLfyOY9ENA9KeVa8Uxweqnyy1F+UiD7tOaMr
domDccr865wXCXhL/SEtxU4c9NhCF+jRRL10tx654CgOI7L1FA1KAlbr0+aM
z4iDlfIVV4epOLQ2dXmZ8Z84LHMMmNC7F4c9u6pTZv3EYcC2Zd3Z43E44+qh
XRIiDld87L6eexOLWukvTyolisOtYdXXOaYxiHcVdS6miMPH5197rt6LRsuH
fos+XBWHGwvN73lRo9HljXJ6fLY4XB8JPyz0PhIzF4a9FXhI3H9W/bhJMB81
pT5kHKwUB5hnVMyN87BKVsu9/Ik4CFqoHCo4zsPOdR9FzjwXhz0cVsopOy6e
3Kzb1tgoDjP6Etq333Lw987omyrN4mCeurlI04qDVGdDo4/vxSHimfVOsz3h
mHE2Qdywh4gvJErmXe8lVA8a7rj8SRxadLc5n/G4hBapKWetRoh8ZUbZK6aH
YUf2GOSOiYOtqorJvo1heKLIlCT8Uxymufktn/tCMfTlz9tVs+JQ36a8V8Mg
FKkd28/JCEiA08nEhMtjIZjxOXPrucUS0EyKbZa4E4Lq49PkFlEJ2HShX516
KgQf/bPuWUOSAL7t/VZvjRC0ELudy6NKQKKJ2XP6bDB2MOd9vzAlgBZ8+Ff3
q2A8oWRnullWAl6MasfX5gTjT4182rVlEmD6vVjucXgwhhgK9k0pSYD7okVn
nroGI3mbQ4GtigRs3N3Ge2cXjOl7is4XrpaAe28+PfpqFoyrnUS3SayVgCW/
Kh1mjYKxwv0w8+R6CWB8GZvbvDEYzc8/7K/VJ+JRFbkjvTUY2zik+8uMiHhC
T+9SsArGY4nHA89vkYCxxeOdpCPBOJHxaHu7qQR8XZZ7PNc3GIPyadLa2yWg
/tAD9aakYCRVuAxEW0nAyR3s07vLgvFqXXXx8G4JWCCwM1LpYzCqvmUHm9pL
QGlm8z5lyRAs6/WwzDwgAQe3bH+2fVMImo7Wyc4dloDcUL5Y0LkQfDe1dGjf
cQmweXpB8UFRCDot/q/0wSkJ2DHYb/ac0KM/KI2hFHcJYGUr/xk0DkUJNX+5
F+ckoNbzai5jKBRNDrbt1uNKwA8H7UVH91/CDYnPXk1ESgAnbPmTvjqiPl6W
bMuPk4C6Tt76HJ1wZOonbFK8IgF7Blbv1FXk4Fe6tZpEgQTskwzs5KjxkN/4
YuHHtxIgYJV+N/F4FAYuKg9I65CAiQwfh6IfUei14faUbbcEvP479F+JXzQ6
3A7//mJAApz3dqvWhMXg6rCtncXTEgB0CU7241iUr9Ta4z4nAfm1inf7pmKR
MaHwRmWRJNzIettwel0czjkuqLsmIQn3NQ+SL96Kw4nkMbCnSEKr8YOa+Q9x
ONDUU0llSsLf3Sp58lLx+Nrg8X3OMknYaz77crl7PD71ylu9ZbkkBHr+JzyV
Go9ld67kzKpIwjOJ71931MZj3ke+4sM1kkBuddBcOhyPGSz/a2e0JCHbov/q
UVICJlqeYq/WlYRJA+qxp5oJyLtknzBgIAleGXm2ytYJGPjIjHQDJGE5N7fo
vFsCek3q8BxMJOG78Ehwy6UEPKG6UpBpIQkzHd5/111NwP1HGBffWErCygOk
wpx7CWiZIjjD3y0Jd9ZsTl2NCbj19aS3ib0kLKa1bHvalIB6Qv1j8wck4YDu
tnz3jgRcvbHFpeKIJBSfn3NT+5iA8t7VX7xPSML44RHpP58TkJ5beFjDVRJO
u3rX5n5JQJFP1z8MeUhCdYJDGfQn4Cw7xi7LWxKkU1/Z9HYn4A+rwOZDfpKw
kBRJzWpNwC/hp3dIB0rCJ56a9s2GBOx8fKD+bYgkyDo1u448SsBXP7dvieZI
AqUysJeTl4A1agaPzSMlQcupc21wagKWOqnqLYqThBz5T249oQl4N1W6+HGS
JNTppB/Ldk3A629E1H3TJOGLZ9FzewK/ROGp21rXJeHt+GCdFYEv12hQ6dtN
SQgX7xMQIPC/8F9bes5tSSgPTXp2eSgePfOeSTvlS0Kh/46s9UT+9slkSbWX
Ev5VXi4Z9YxHlUatfKiUhB0a55jK5vE4FVBtcfcJkd894ot+LI3HlL6eSwHP
JeG6UFeA3bM4bLstPavUKQmJMuJ8x9lY3KUb89XznyRoSIWJ3k2ORsWhpeGd
AiQYS15W/GhFNI6n5SkZC5HgHH3F29f3ozB27sUhlhQJUPy4RVpTJL5+Jtj6
WJ4EnPPXtp9mRWC6T4KX8goS1D/vczhYwEf3VYrkuFUkSKfpCW0z4yMpatP2
Y1okOJsQUHDwIg932PpXixmToOruXpUvC7i4REjU0ducBPZqo2KP73Bw5OHl
2e4dJDDSKfZVsOMgX/aB7v09JPhWv/NxXXk47m/a2iqznwRXNpcaK5wJx1UX
W7zCDpGgJnZ5zobV4fj801j+XmcSaGb9J3w2/xKmJAZur3YlQe/SxU1jXpfQ
2VRySNWTBFsD+TflNl5Cnakr4YneJFh4PHOyU/wSCt1VXT7nS4JNL16TpHrD
sM2hvNo5gARvLM/bF5SG4S1Jc8fmYAKP5qyM+/FheO5J2+yGcBKU9hyvo58N
Q5Mzx9Oy+CQYPSts2Lo3DOlKP3VJMSRoOyCiMA5h+PldSKtPAgke7V96/4R6
GJaEU872XSZBKHPZpLZ8GIbpZZC3XyWBo+0fP01WGNoOqxeUZJBgTbD+iZO0
MFS6+ni7XDYJxJTXvFWlh+HEzh1DnDskoA/852IiHYY1853h4/kkoG64Npag
GIbx908tdygiQWWiU9BfjTA8cnSq+mkpCWZljwY5bw5DTQbHUb2SBJ/3HAmv
tyP273rGv8tPSPA20Vec5BmGb3yz0gSeEucNSvM1osLwuqq2nutzEtwdnv+q
UBCG7l3Vre8aSSCoc8/gc0sYGkVbnzVqJsGlrYmdtfNh6O3iUyXURoI/0z8i
9NZdwrum6aKvO0kwIHByzW63S8iYH7nu+JkE1f0t0cEDBH9/oI4oD5GAlHKi
Q08lHIMe6uv8+EaCi99MdrW5heOoB6cx6A8Jzgx2bt03F46KOwpY22ZJMP9o
5TPadg7aq7Q6UQSkwEeuPCn/CgefflScviEmBesdd+24tJ2LV2yqVtQulYJN
Wr0mdWU8fLPmi2eEohRM62zfOM3go5CYxKPdylIQm8VOLT7LR6+afbs+a0rB
/uIYe3fNCLTQ/hW42FgKypc92OlVGYlBUksamsylIOmv8brPslFYOrKFkbxT
Cg6Ezth98I9ChazY3JV7peDRGae5Se1onKKv7jBzkYIMm6eVSxJjiH1ilxLZ
Qwoij7ZI8oZi8FiTn3vHWSkIDjw227M0Fl9fqhc8FUB8/99AjY5rLAo6fbda
GyIFbq6Xu0/GxOIGI8aV6XApuPqm9uPI/Vi89dtpLT9WCppuhH9rHI/Frhbe
hV1JBB5XcyblpeKQeq+wXiZNCp4327e9VI1D84h2an+6FERYNh/dZBKHgc5z
B3NvSsGelhHpcwfjsGTrijtnb0tBo6lHd8hZQv8s2/HTIF8KrsnnPfLgxKH8
rNcmwSLCH3n1nM2pcbinI5XfWPp//GRzZm7HIb+EkDyVUpB3/OqWK6VxiLGD
8gdRCnbb3dqpVBOHv91IbiueEf4xerbHv4zD1dvWP/z2QgqeRF1tH2yJQ6cV
BxaWvpIC4byvJ760x2GKQOjOwLdSUPajuGrT///P2n0nxbRDClrdvxg7ErZg
xZt+UrcUcNvEVhzqiMMNyX/U2/ukoPkVmWX5Lg49veT8rw9IwaW7Vc4Gr+Lw
lqXJM+cRKXAvYc2q18XhB1U3suYPKVjOOh2s8SgOycIJDlM/pcAG7+ptKYxD
0/7yWzhNPM/f6uWaGYcXnnwc585JQYo+rbsgPg7fN4Wm3xYgQ5y/rkv1xTjM
YhpcFhAkg119QniPSxy6O07E7Bciwyj5j9MJ2zhcOH44WEKcDA2vIp7IKMVh
oz7b/7gkGSrIrzpcReLwcshrryopMmjsUpk4OxqLq+lGxzzpZFDbra7VUhiL
vw/8OvCCSSby6/1FLy4Wq7Pz9ihKk2HbIg8bX89YtNOVNXu3lAyGumLqscqx
eHH/1Co9ZTJcuabsKyYbgxY37ynGrSKDifS7tP6X0UgfPSE7rEaGgEtJddIX
ovF2QKvEVU0yPKqpWPe9MwpbMorG5vXJcPnPgM4qXiSuGHR7UL+DDBf+fSTv
FOfjD43lBfJWZHj9vcUwqYqHFb4fbvnZkCFaYvKTuzcPLcUsUtTsyNB8aL58
fJCL7N0CcWH2ZIiQ8Lqel83F/itlvO79ZJj3/le39AQXfdcon49xJEPexzvJ
u8Y4uOVcz9mvR8hgtffrUbUyDko+SXLbfIwMGx8rSn4O5WCH8M7jaSfI8HzB
1BrHXRzMtBY8NHmSDPUzo9PVxL7nllppt8OV8D+YVPb2dzjqfPKyyj5NBpVD
LzacexWOC9RUzec8yHBizTLF1Dvh+PJsH+z1Is53Dlq6jhuOyY9S9Au9yZC8
aMJsq0s4Hl5srSXqQ4bbE8K0Z1bhqGoprObkR4ZXST/Hy/TC8WdylVLleTIs
jq+9JbciHKt6/1tCDyRDo+dE5S96OPJU1jBOB5GJ/XWF60GRcLQ981myLoQM
K+TIVaQF4ShXcUVo2SUy/NxA3hHw9xJ+Xbh73odDBusXlGq/mUtYvF1s6g2P
DG08WZnPs5cwMLH6x6pIMvTtpY5kLwxH827foZBoIl77wC8F4uFIXan56UMs
UW97BtImWOHY5T7YuS7h//72LHNWDsdbD9PfRiWRwf/PrbWCG8LxzAK7xoHL
ZPCMFLlZQ8R3V+igHSuNDEo1V8yCncPxk8Sxj2ZXyaClrq6oERaOMjRXF990
oh5cy5Usb4bjLmmvn7czyCD11s3p/tNw5C/zC3yfSYZZM5MEna/hWLMiSEQs
mwyXPtx6XSPJQS2t6CWud8jAr3ASTj/EQRe9pFtXcslg2zSY1cgj8ml0VbMx
nwxz6za2Pikl9OH2u8ZrishAAqmbDQwuWtjcf3WwhAyy/A/f2rdxMWRvmX10
KRlWZwe/Hwvi4sTROrexCgLvL0nTYhNcVHVp+r3sMRl8i+jCzcT+7+T5Lsj6
CZHvqN6Ppid42HLhU+L9WjLYZJp5/O7iYVHS3KOzjWR4/9Ev8PNrgh/qdSSn
usmQ5L9MpeZlJN5t2nhZ5SPh/8SfP93CUfjprbHCvk9kMAjenii2NQp3fdy1
vmKADJ9czuj/LI1C/sC+J8NfybDG1lFrcjwKa0YPb5MdIQO5WOzPErVo1Jp2
P3hhjAzKSXM145cJ/T3/32DeOBl2fVttFk/0a+bigDPdk0R9+Gj82fEvGqnU
iEtGU2QQkju7cWI/0d/seCmPGTKseznf/yo8BkPkUlOvzxL1M00zvlsYgxOq
OfkLBChwRnqkZ2wuBlXXFuiuXUSBwiqDniZKLDrpPqg+spgC5ZGDc28VYzFt
46Pt8cIUsNzUPBSvFYstW2tba0QpcNS6bbnU5lgUs2hwnBSnwGhv2gsLy1jc
Yt08pESiQPbiY7Gm+2PR367jrC2ZAneeBPkuPB6LRQd6/4VRKfD7XNbqQPdY
HHYa4DygU6Bi2Yx2+blYVDz1jTLApEBI+B6F4oBY3O/x8wpTmrg/QibLNTQW
4//7u8JMlgIxHYfWZXFiseH8wkKfpRQI/nWz6zg/FheGiG64vYwC9srHOG8i
CL7kkp92KFDgHIdlMU7YXtEsS9HlFJhT8GY0E+933xlWP7WSArdTzi9ez41F
82ePpV6oUCDP82fq6rBYLP4Y+0NFjQKmW6MojwJjUW72aDN3DQUWa1aXDfjE
Io+lW/RVgwIzMhab73nE4k8tsQRzLQKf9zNTrBOxeNiy++ztdRQIyHcfdyDw
eHmq0FZElwK7REtS3+yIRZ1LoetP6lNAU6e5SsIoFjMz7JjPDSigmplut1w9
Fn3bZ9s5QIEo5QFVOfFY7J94XTa4hQJ7qGeoqj9i0JJ0M9XMhAJBlW3Jy5/H
4HKTbQ7CFhSY6M0YdfeKwZjDSwyddxB4jlSWNxvH4Mz5sSX1lhS4F7t/0p8a
g2+KknrCd1PAhPk+7tvtaAyQ/3RE6CAFeOtWLZ5piMK2v/4nF3sS9bHy4LY9
wxG4mWW57bgXBQQ2zY0k5EdgnpaC6jNvClzpPJ0VeiYCQ07Vj4T5UWDl046I
0r981GineQiGUmCpyJNdQSw+pk0MWB27ROC368jJRR95KESq0HzKoYBgYqO6
5V0edhkfngiNpMDYk8dx+4x5aHZY+21/NAVilStWrKET/XheqGRrHAUi7y2r
GvnCRW5R3n+LkinAWTDxZlsMFyebLtodTaHAPt6Gdb8JPjk0tEu3No0CpEcZ
zIXAxReCK9lK1yhQFfv964AMF9fJT0+FXCfuK6DNHpvi4HWDxvefblCgM2tE
w62Dg2J7r1dsySLyFX/uzs8KDp7z8rqSeYsCaZtrtvy9zsG+KJMLC+9Q4EvA
BY2LHA7uuMM+6JRLgbq/as+CznCw7OnIxpp8CnQXd6ctIOab0scqOcVCAt+d
X3fM7+Bg9N+4+eAi4r7M3ysDjDg4zTz+sa+EyMemGWnU4uAxLb3qzQ8pYP5A
OPbrKg6+3imeeaOcAltjC6qrlTi44VRPiMAjCnxUsj6rKc9B2haBX3pVFLgY
X/5OfhkHR2WWO3siBZruGt7SJZ4/nTR9n1NDAUVTNdfTxPfXGk9t731Kgb4l
L+weqRDxZUc+ZtYT/cSur1ymyUHLwHsali8o0ObHyUzQ56Dy3pYbl15S4Oy1
M+F0Ew4u0PxFe9xEgdQBCfVzuzn4XoQd/vM1cf7Jhb3/jnGwqG/DlFoLBa4O
jg47+RL6ruKgy9F3FND/6fjlUhQHjyYEdaW1UYBZVG5mlcVBQ7ebli0dFNi9
3mco7xEH6SZ1KPqBAtPla87FtnGw7rd4tm8v0S+v+j8/InHx+mt1VmEfYce/
WvNzNbE/3LbhDfYT/pXv3hm1g4ur9l8+bfeVAmtqLL3XxHNxoXZFb9QwcV9h
la5aGRc7xbttno0S+YuYM13Yy8XIx4o668YpkCPaOtKnzsPjySa3XSeJ+D1N
19Tv5aGRx0mZm78oEPiz22JjMA/H5AvmKDMUWBB/9WFhKw93henXjy2kwpCt
gl0Mh49qBw/oKy+mQkM3LtIs5aOgzsXcQ8JUMHL82sv5zMcHg09jmsSpkLRk
ap0SRCB7u7V9Lp0KKu1Lv1ePR+C40tmGT0wq3L96ceTlkkhsmE0ylJGmwpds
twsbzSLxfMEHed5SKqxWd64auRaJPRTnoRMrqfD3QrHn8Y1R+HCY55CuQgVL
j9aCRU6Evq/Na2pVpUJtxv0B80tRuPm/ifvGGlSYjaNHF9dHoYwlY/mFtYQ/
ieePvhmIwomVesnF2lTQuX+Y9VowGrM6AvwV9agwMF5W5rKRmBf3M0b3baCC
skzWnRG7aLTj1x6KM6SCCXtIIc09GjWODrx5bkTYxjV/fcOiUcRQdOuCzVQo
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
8K99zdH/Afjh1/c=
         "]]},
       Annotation[#, "Charting`Private`Tag$29752#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Lambda]1\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Lambda]1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
1hPr/AKcV9TvVhdCGVdXqm5evkegr+uT1R9/w7hsrmX9o/+i/r7f9Lz5JOOD
x3ruv19MQPhwYENjDO6XvreO4Q8JxIXtncuIY7zSc3qkvpSA/EPP+o3x+H++
+jPR8AmBVmfbSJ8kxq/Zr9aPLyNwXtRsFpTKeNITlZr+CgIBZfYnDMWMR5mp
MbtKAo9c7448yGBcdOdDwbUqAvHluhayTMa/pMZ5MgmBpZV9CiuXGLfLsLJ1
lyKfINWvucy4icLOjqI6gvnb0m1/LuPk9L4TKvXoj4uqX6RdYXzNjMvmYw0E
fpFPqk+/yvjckYMl0tcESiJ03wmvMd7fzVx1fiGwXGD1YRPi126hU7EtBIrN
ox3eu864cWKtVkkrgUsGfR4bEceXaboMv8F+I3qT+7G+bzz6jHonAdXQgncn
Edtsbbov7CbgNfPqQg/ed9nduPt8L+pdnBSzAfF04rm1T/sJ2Fo+a9mA73Mu
77IZHyCwTjn8Xl8O4/+esP5q6xCBWodRlTjsT047/arHMIHc1DtWs9h/oMfw
i+RRAuUNldHbsxgvS/ps8dk7Ar96uCW4XmR8U8VVw5kJAo1zzHx3OuPHJ2e9
9KfR7yFlPmvTGK/Xdk70mSUg1xaz8iAF92Xy34aqZQTKDr/4jxj566rw3iRb
JLh/DSoa/sn4tqniPSbLBOpCHFwmYxkf9wy+nSWgILFwVP4N9eGj++JQsBKF
cpnYuQr1ZFWZ2Sm/hYKBlqNyuJBx8cyY8g4NCmP62ff6nRgf0du742stCsdT
Dnj57mf8Xxdkua06FBS/jcoLtUd/VArrlPUpGA3NnlcEzAOz92R2hhTETEGz
xIbxtT5+ngWmFKr1nCbsrRk/klYa32lGwUvAg40t0T/P15Wut6Dw/LfrKsbm
6A+DKtUT1hQy/ropOoX7vMWH7i7cRuHxgGr3z/roB3FkRN+nFLZ2rdfcjXlm
cE6vycGOgrd2zWAG5p9dhrGCmF0UTiXY7AnTQD37vjEvtqfgaKinHY77e0Fs
ETi4h0JK32BnDkG9VqeIyecUBLoX64fVGC+cH3jmvJ/CB6FJB0SbUY9GO8fj
HCm4tB0sVsQ8JvK7rP7ImcJZoW5whyrjPH3ScdSFwi02zdrfRz1LHL7TdKWQ
3VycoIA4auHmD67uFFyvZQUwzAeNRkvtCZ4UVm0c9R7HvGfi765U7k0hsjH9
5wLECRn3t0/6UGhxi1fJRNwvUTiq409hoOetfyFiW1lgjlcgBc3NmwUyxDnG
T6WpQTjvopOWEXh+23Bk1qpgCkGWH4RY4/1qBWaHog9TmLdlEmt8r1fIiOn4
UQrjayrORGJ+ydW5s8i+olDZ4OUygf219wdI34RRiPA8c/YuzoPkk6wvjlP4
aMJUOxfndTCgJbAmgkLbT0W6tTjPK+rppjuiKDzU3xlignmpvWP/4oNoCtYg
e/z/PEWurJbqnaIwqqT2Lg/z1pVNpwLfi6XAzJ2MR5Df9uZPTBPjKOgYy1X7
4v9KMif/WD5HoWBVAhVYMH51XUjmcBIFDVlVaOt2xjtfaQUGpCIf2kGaq3cy
viW1w6QljYJZfRgmEOR7jbC2MhPn+/1xo9MHEAts/rh8HedbuJDvEMD4jZkN
AXuLKKwYutW8Tsa8XVRvXP4jBenAt/uOov80whNkH5eiPsyYQJDNeN7YUoZ6
GYWwXas+185H/f8+JJmV4Pt+PSd9W8p4762bGf+QUvArUY8wL2dcK8jPv7eO
witJAgQ9x/rupoWXDeg/cVTPiZeM57dWGN1qoxDaY/7Ntm7k91L0gloH+mnq
ZaO4n/GtbpaStC4KTXVbnCsHGb/5usDvZD/ytTEl+8441qcxo8kB9KNB/JjH
NNY7aSwED6F/F+1j2+ewvi4zXThGYTln6phwCesTnP2k4xSSxrwcdq1g/V5F
I9spCrdnnL9bEoh4kJxkvniGQrq7udNZORG/VRVTbTBP4UbOIbkGeREfiN2e
fkOG/4W/bKx3jYjr2M36qv5JITC7S/hYScRFy/cNk5cprGM5p7/8u4jfLjs6
v7KC/d6tf1q4VsT/B49IiVs=
         "]]},
       Annotation[#, "Charting`Private`Tag$29800#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]ot [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]ot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$29848#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]2 [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
LvhLzRJ6w9V0V5Y+COx37yKiliV0+opOxVWWINBg30Mq711Cqs7TOxVslPfO
xUlW+LeErsbVSFXvDQLefftCfswvIe+9/n42XEGwsv9g6JXNJeTEp2bZQ8Et
h4+G/aJbRuS0yBe0vEFQICAcrrxnGZku7a7i5QuCEOETEbW8y8jie0vm+r4g
sBSTiFQ9soyshj9URPEEgdrpc1GNosuI5GZ+Y4IjCCSkLkSrnVlGDz44QStz
ELBLX4r5K7eMDnrSNqoSgmD2/OXY+1eXEXhUir6dDIR6pPyu/fYyUneb6lKs
D4T3CrfiHj1aRnX1zK8hKxACrqjHd+sso6Jx3uE+90AwVn6Y8NRkGdE4Bc8J
aASCiurTxH6bZWR2MfwEq0ggiKnpJGm7LKON27xuswsBwHzfIHnYZxmpjG9X
WxYHwPhDkxR98jJawySjh3YB8EvTIvVfzDLyeRVANJMMgDQt2zTDVMr+7sii
0FF/8NRzSp/KXUZ9k0tlOSH+oPfSNeNVyTI6vcfRMP2iPyiZeGbOfaNgL5c5
q14/EDD3y7KoXUaBd9JvDtv7waBd6HubvmU0NW7q8/idL9hadCze/7eM5JuU
nQIlfIHV+OB56fll9FpMkvCo3Adkn6VUrtKsoPcyjDvCjd7QoDG+u51lBbHz
XN8g3PEGXbWTd4u5VlBz1362A3VeEHS5oM9OaAV9zz2ey1zkCcfw+rGHp1fQ
rftyJ4YFPSn9k5yxrMwKmnXIX+X0fAujYj/X1q+voN59U6/az3uA3N4WDkeT
FUR9LOE1F9EVmln4NB7brCBjseoQ3SEXeEmv+e7CmxXUvf/lmy9nXCBkbVh0
K3gF6doQm9SzXsNk75Ki86cV1FHxly+w1g5c22V8Nb+uoPmeOZXOh7bA+8ep
Ua5yBXnf+sWtOmMNCj/pNHfaVtCksMNfTnFLiMzisnmzuYK4mcs6HO6ZwOkU
jS/P6FbRmcM7jXmThvDzXQzNJdZVJE76TQr2NYDHEf3X+HlWEX9fSaXkdX2Y
IwoGUR9eRbPMB01jj+vCWz+Dln7hVRTstN0delIb9r/N3l8hvopi82R5Mu4/
h7zXc1oJsqvonHTBIb2bT+Gq3Zl0V4VV5EFqf1N24TH0mNvNaKmsIoeBzGeG
jhpgYfTljIL6KuryKEgV3XMfGPWoHY9qrqKe6lMtr5fvQuxTpQoa/VU0nP8y
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
52cyS+RZ0Rix/u+P/ncMsA/aPhggEY1W6QFS8z8woL9D7prpX+Kvx38p2o0w
YBWvmbZtVIADm8/oJHxmwLOdCjaf3gqwKOeHZctXBhyu4O5hE/yst508bTTJ
ABxf6bPmpgBdqj4/XjpN8PWC3dJH5ilNyrFBp38MMLt8TenofgH+dvs4lTmL
Cc/etPvqbxVgrPywsqwIE/ZY6KyxIHpREdTn91OaCQei+hau7OLjbJP2JQ8W
kvXXHutnGfIx4LSPzE9FJphYmT+7v4yP3wpZP5csZsJNzRxxSzYf31PtH4Sr
MkHQF6uTP8nD1r7Bo+tXMeFdmqPJlzIemtKjdrivYULizSt6l3N4WGumanhR
iwkbG1kCRjIPS4uPS//RY8K81hNHcn15uKxf5scyQ/L9jvyPXa48zGGU9e42
YoK2+Tjl1l4engv4fqNyIxMcYj7KcYleyNxIS39nwoQIj+b4IDLP8gb0Qhmb
mLDWY3+C+goeCrG6jxhvZsLmdZyoJMJn/puDt3ttYcK6COfjN+V5OBm4yODy
VibMRD546EcjfFh6X7nNmgmqc87V1Evw8N3gIamZbUz4s0GfVTWHh45s0e8r
bJkwqvKqwvEvmectrvXss2NC9pD57jqiLzbBW5qidzOh6Mh73cEJ4k/KvpRU
72VCr0zqu6avXDR+F5/2cR8TCp53dJ/4xMW7nNUhnP1MCM4Y+ND1gYvali/c
NjkzIbf4s4MY0aMbZ09tO3WQCf+eZa2bfsdF1Zsc/SuHmYB07rYKEl8erlZ6
4cqEsYUUkVPDRI/kHSTnHGXC3/F8ySnyfcrWmclVx5nAXFnrzCD+Szr0creT
OxOeJ5bue/qZ+KUK48Z4Tya8nBAbViP6MevDu+JaLyacaRG4qnzjot88XuoX
H4KHgSenG6a4OGGldnb+aSakTvfpCRG/cSys1XWLHxNWZ1uldpP6DP3nbuMf
wIS5VcaOO0n9HD5S9K4FMSF0xaq9R6k87Jh/U7HrLBMCXKrs5OV4aG2zU0I0
jAk/7b716RF/8iD854RWBBOOiTnrPFbn4Z0Rg4ZkHhMUdyYRlSH+U6G36L6A
Cbq/w8PrLXhYsi3k3HgME4QF+StbdxK/cqvBxTqRCVEfFHT6jvMwImqruGQm
E3yltf5KXuLh39uj43oXmJCxoHaFczEPT31JfO2WxST+8sHs1js8PGLbcb0p
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
         "]]},
       Annotation[#, "Charting`Private`Tag$29896#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Lambda]2\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Lambda]2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$29944#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox[
     "\"Pi - ( \[Theta]1 ( t ) + \[Theta]2 ( t ) )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVkXk4VO0bgM+MLUuRPUN8qChLi8oSzyvLh6JkL0sUWVK2lBJCIUJhhD6i
hbQQNT7bnJPdpBKy1Ecqa2kR2WaG3/n9ca5zPdd73fd7P+f85XX6kDcVw7Dn
5PP/d6Hzw6pEjTgj5pgNodHAgLtL0rF36J4weyTa6VITA6yT+dQv0oNBZDHn
x7sWBhR1R3L86JfA3KRbPvolAzrO6vocpV+HkjwU8baHAZ8spfOO0AshvFrp
15lxBkxtv7zThf4UbqenOjNEqiC4uI7qTH8B+oHylwcdq0BL63FOhV0X+Id5
LTosVMEWfDooSv8DSBYlxDmn/QuUhM6AfUufYE1jU9gj5Wp4kHloNx9jDCRj
dcsONVYD/eKBok9K36D7o+Bfic41gHeE3wv4+hOKMqcZvOwaCKhXX3hl8xsc
SpxGPufUgmysQ+B89CzMi66E8m6sgy8R9Cdnh+cgQJLAArrr4ODHTEiSXYQ1
MxrVr4LqYcds4GygGRsu3bqtWciuB/vHwZ+HbNhQVtPkOc+phzCfM50HnNng
+0NN2XK5Hp71Rz7aFsCGOitzi16MCT3XY3KLwtjgz4sri1OZMGsVnygRxYZK
05hHljxMkORNDI9PYENI9lGnGF4m6NQnH/+TzoZnO6c1a/iYYB+edsgnlzz/
u8qXV4AJYdoZqO8OG75+nz5auYoJzwpz5asZbPjdObMkKkLyVx70RP7Hhti6
iMnX4iQPjxu+j7KBp1BmOlqS5BfKy91/kv4RB2ybNMn7/5uCqBxQevPeNGcd
yR9oNeVV40CFsF79rBI5y44+Sw7lQLiCelm2Nul7O1HEieTA8tc8g3vbSN/V
qfTAKxxwtK+sqthB+jgzJw/kcMCT6sHt2E3u/3z+MFHEgclr2VUDeuT+p9gW
2x5xQETTfM+YAen/RN0ggXPg99Ms2RUg/bn8EvFtHIipe1EtvJf02wlR/rzl
wL648i4PU9LfvHawd4QDi4Yq34MtSb5UKStXiAv91o0Py+1I/phqnLAkF1pb
TcStHEleXi04UoELFplbBkacST5V29p9KxfWbE3dLOVO8qFGfMqOXBAzCzlM
+DFh5x7XMw8KuSB/6+Cn8UtMEPmWX3KulAttE05idfFM+Jzz6cPflVwYcLas
SUtgQvq8z96xJi7E598a07/GhK8VwaIqE1yQu9g9XXyTCfnqCQ9uaS2DxvUo
iU3lTBCQqRhMq12GV69O934cZsLAtIB5+LsVGLI8Trmqi0Pkn/M91I8rUPv0
3OlufRyUFr97pU2sgKSxRbSkIQ4+WE90CXsFVjKmjUuNceCNVUnIpWJoP7+W
CdUUh14et9dHBTAkkxCQ3GKOQ8llutQmEQxRGAtlNZY4RAh0un4Xw9AS6xo1
cT8OVkmCdyulMCT1xuYbxwYHeWGTbxFyGLoaqeshYIvDj5TI7UgRQ/0FnW5l
h3DA1zAi+FUxZHM/JXStPQ7p6T+JDjUM2bcMg4sDDl7i6qsyNDFEPTa4XOuI
g06m1wGX7Riy+hMvHeqMA5/0LbribgyVQL3B8mGyN/vd4KgBhsKHLpRauZG9
60Q3PEIYOm7568IJDxzO51mcDDHD0I/yy1IpnjjsU4it1LXC0KHQq24Tx8je
gtqlZRsMvcdu7y7wIXuV/hg322FIMaZ4jvDDgSjSSkp2xtBUSRjTLBCH66q+
nbZuGJJ2K+sSCCZ77xfKyHph6N9ax4H6MLJX7YP7kA+G6FpfNkicw6Fvi813
/yAMpWLFdjeicVDYoSMUH4chZc0Fh41p5H3PAm2tEjG0qs+sMSSDvG9X8U2x
axj6W/+lY082Dsf15Tb9Q8dQ5y5Phwu3cSg1xkwZDzD0zexHqHUZ+b8b9ZIj
n5Dfu9u4ZqICB2uz0K69lRiyHS+JOM/A4ZfF2NE3dRjSPRnUF1+Pw66DHRcn
3mAIcazy0UscVnXxNT/pwRCLR/uMzmscBuxA5MwA2Vct/kD5Lel3qsilfCH3
+etUG60Phwb3m1Vycxi6V0Q0ln/BIXP47fLwEoYCV9tNfRjDwdtL2Lx4hdzX
NUxxcZL0+0T17BCkIMNTPNW2P3GwCTw+vV+egqx8qvKIRRyi7o4OcZQoyDdx
9NZ6Dg5lH3w6Hm2goPFzKXuDl3EQs/IrFtGmoHKsMiiVQkDXxlNuHcYUxHdl
/bEMPgIchs+27ztBQR7zF6WbVhPgapdcaFVBQe4P98wFyxOQclUkbYlBQc+d
+WdsFQiof3EtsrSWgqTmcHGt9QSs35ruJNRMQb0NfTqfFQkYFslazeqjoITO
SJUsFQKOteRHWHIpSJI4MSOzhYBMruKJRQoVfVGpd5XWIKBJp9D+AT8VmWgV
7VbXJED1zh1tQTEqKkgyUD6oTcBYdMlomzIVjba7F9zYQYC/XoWthQUVvTPL
jmrZQ0D4ty7P4v3kvNn+zVdDAmL/mQnmt6Wi16oMTTEgIIey80aTC+lvdJB0
Nyagrb2qCwVQkV72unlZcwI2HK6300ulIqMnrunbD5L959scNvdQ0cVsZy9f
bwKmNCa9k/qpaE7sj3uDDwELQ4LhE/9Rke/7pjUKvgSImuyj3x+loufN7hv6
/QkwEn7dqzxPRY2rjLSOBRFwK6/biSbHg9TCoqj6FwhwqhtyETnKg0r3/tng
n05AT79U24U0XrT80VlPfYgA5UdbhipL+VDITd63fNtfwIrs/sPZg/zI++Tk
lHncC8gedPEdEVqFpu5leKf0vQDMxXz9koogepMrts9QpQEWAg31a+2F0Cp5
VyGZcw3wQk9i2TRYGL3/MOXK29IAZm69drqJIkhbWEZET7wRXOTuivYxViOb
zUcUud6NYJR6MNTo7Rok5hrj0lrRCAOv4vJLKGIIPD5/7RVogmDMsWMsWwwt
p7zdmuTSBCGpMjaCqmvR0uDNI37FTaDvNxRLqVuLmEXpp8WXmiCgIFN4yFIc
7S+q9nxn0QwRl4zdfvaIo838B8dTMpvhQPmMZ2+ABNLaO/tGeqIZruln1RQu
SKCbuaf2L+i0QMbaPS17r0uiXwzTJMOkFqCadm1oU5RCfB7ie8z7WsBG2cMm
9qEUini6IGSk2gpe1tPq4ibSqCLRySHkbCsMdYe4XOmURijjzr1dza2gXLxo
0Okng05mNbyIWNcGJhvPjttgskijpSN/08k2eIWNjD1NkUX39fZd8qhuA0U1
x5yvquvQ+5bdyr9F2mGgtKpAoHId2uPu46h6pB2CB0RPuxjJIdPaJ29yituh
0z5wOuadHPq2mBLUutQON7fUtKZ40ZCWQ9bD7RYs6J8My6R601BPbXh1iiUL
ZEu0Pc+doKHMmWOTY1YsyFG9t3TsJA35iErfzrNmQa5CuqZBOA39XIpcw2fH
gjxRn4zJJBrKe7npfr8bC/Jn1nqYP6WhuY0Xd8aFsmDoaceWukoaet+jOjQY
xoL1QQkL2xg0lD3dclY3nAUFU5zrCrU0xFNkUPD9HAtuj443zTbRUJnzGR3n
KBYU9tVvvtNPQ9iI9l2NJBZ8zjo3L/uBhoRWtcsnXGWBsv2OptRBGvLscsr6
lMyCos4St/OfaSjVSSiRnkrO7RnptlM0pOd7OQDLJPkEG7fWHzTkqKE5cjiL
5M0FNxtOk33WN1yf01lwpyGqUW2OhhbFva39c1gwEqOXnr9AQ8Nzfc1NuSxQ
hVlXSTYNPa5BRoq3WHCc+0T9KpeG1O6NP4/4hwV3a/3mVlZoaCznp2ZPPgv+
B1fwUIE=
         "]]},
       Annotation[#, "Charting`Private`Tag$29992#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"h1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
0wIBA0fOltmEeHPhf4DbDwM=
         "]]},
       Annotation[#, "Charting`Private`Tag$30040#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"h2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8072685186310015`*^9, 3.8072687336539145`*^9, 3.807268844003798*^9, 
   3.8072689381320357`*^9, 3.807269068902342*^9, 3.8072691580928173`*^9, 
   3.807269434666134*^9, 3.8072694902245502`*^9, 3.8072695238057737`*^9, {
   3.8072695649227805`*^9, 3.807269594428873*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"adad7917-d91a-4b2d-bc27-2969d40c1461"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7710867066191854`*^9, 3.7772288293818207`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"c3d83383-619d-4ecf-aac2-6865b65dc574"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7710725992712674`*^9, 
  3.7710726003413196`*^9}},ExpressionUUID->"d18719c4-d349-4464-adba-\
825a9bd27657"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771070730731642*^9, 
  3.7710707353328114`*^9}},ExpressionUUID->"4a4449b2-631f-4b14-b93e-\
bd36b894e421"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7710708120046005`*^9, 
  3.771070819359078*^9}},ExpressionUUID->"2d47d9e6-d43a-49a0-ab14-\
caac8ef72edd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7986559036588497`*^9, 
  3.798655937737031*^9}},ExpressionUUID->"7ffac895-003e-4aec-9fba-\
575952010eab"]
},
WindowSize->{766, 772},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 72524, 2088, 5002, "Input",ExpressionUUID->"52964637-faad-4e6c-a112-758a0a446c36",
 InitializationCell->True],
Cell[73107, 2112, 54696, 957, 279, "Output",ExpressionUUID->"bcdc9e92-0683-4c31-8481-5c93e6d8b5cc"],
Cell[127806, 3071, 55028, 963, 273, "Output",ExpressionUUID->"e4b29421-5921-4268-9385-ec7d9622feee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182871, 4039, 11628, 298, 1264, "Input",ExpressionUUID->"46531b23-8898-4625-8c24-005ead5ef8e6",
 InitializationCell->True],
Cell[194502, 4339, 14054, 319, 89, "Output",ExpressionUUID->"e5c40ac5-7999-45d1-a024-4227c3f87b61"]
}, Open  ]],
Cell[208571, 4661, 149, 3, 55, "Input",ExpressionUUID->"1dcee5cb-537d-40d6-a9d6-cd562d630c13"],
Cell[CellGroupData[{
Cell[208745, 4668, 23015, 544, 2129, "Input",ExpressionUUID->"58440a08-1239-47e6-86c3-bbe4465df837",
 InitializationCell->True],
Cell[231763, 5214, 412, 6, 36, "Output",ExpressionUUID->"002fd183-525b-40d9-9057-9ffd5ed05675"],
Cell[232178, 5222, 416, 6, 36, "Output",ExpressionUUID->"9880b691-5361-4e77-8ad6-e30ec2cba7e0"]
}, Open  ]],
Cell[232609, 5231, 6105, 122, 273, "Input",ExpressionUUID->"94c95cbb-ae66-48e1-bc2a-c1accdff1c6e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[238739, 5357, 2535, 64, 239, "Input",ExpressionUUID->"7b841b07-b8ce-4a4b-8b42-0c93944af92a",
 InitializationCell->True],
Cell[241277, 5423, 105695, 2416, 191, "Output",ExpressionUUID->"aa9d9b19-3d9d-42da-8ce8-d4f476d12a13"]
}, Open  ]],
Cell[346987, 7842, 181, 3, 32, "Input",ExpressionUUID->"ab4ecf65-fcce-4c81-9ec7-4b3fb3ff7a87"],
Cell[347171, 7847, 200, 3, 32, "Input",ExpressionUUID->"443439bd-c8bf-4bd7-b386-3ea6bcff8c02"],
Cell[CellGroupData[{
Cell[347396, 7854, 25434, 504, 2293, "Input",ExpressionUUID->"87574f49-9512-4c1b-9dd6-3e489fe520e5",
 InitializationCell->True],
Cell[372833, 8360, 665, 13, 43, "Message",ExpressionUUID->"04cd5ed2-c8f1-4695-b266-1f00bf408539"],
Cell[373501, 8375, 340389, 5763, 451, "Output",ExpressionUUID->"adad7917-d91a-4b2d-bc27-2969d40c1461"]
}, Open  ]],
Cell[713905, 14141, 173, 2, 32, "Input",ExpressionUUID->"c3d83383-619d-4ecf-aac2-6865b65dc574"],
Cell[714081, 14145, 156, 3, 32, "Input",ExpressionUUID->"d18719c4-d349-4464-adba-825a9bd27657"],
Cell[714240, 14150, 154, 3, 32, "Input",ExpressionUUID->"4a4449b2-631f-4b14-b93e-bd36b894e421"],
Cell[714397, 14155, 154, 3, 32, "Input",ExpressionUUID->"2d47d9e6-d43a-49a0-ab14-caac8ef72edd"],
Cell[714554, 14160, 154, 3, 32, "Input",ExpressionUUID->"7ffac895-003e-4aec-9fba-575952010eab"]
}
]
*)

