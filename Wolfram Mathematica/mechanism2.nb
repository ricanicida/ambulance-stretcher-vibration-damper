(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    841466,      16474]
NotebookOptionsPosition[    838725,      16423]
NotebookOutlinePosition[    839098,      16439]
CellTagsIndexPosition[    839055,      16436]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<D:\\OneDrive\\Documents\\POLI\\IC\\mecanismo e \
entradas\\dataVz.txt\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<D:\\OneDrive\\Documents\\POLI\\IC\\mecanismo e \
entradas\\data_Pitch_Angle.txt\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Close", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Deslocamento", " ", "de", " ", "dados", " ", "da", " ", "velocidade", " ",
     "para", " ", "que", " ", "a", " ", "integral", " ", 
    RowBox[{"(", "deslocamento", ")"}], " ", "seja", " ", "mais", " ", 
    "coerente"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data2", " ", "=", 
    RowBox[{"Subtract", "[", 
     RowBox[{"data1", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.039083`"}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"data4", " ", "=", " ", 
    RowBox[{"Times", "[", 
     RowBox[{"data3", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"velocidade1", "=", " ", 
   RowBox[{"Interpolation", "[", "data1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vz", "=", " ", 
   RowBox[{"Interpolation", "[", "data2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z1", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"velocidade1", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dz", "[", "t", "]"}], " ", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"vz", "[", "t", "]"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"angle", " ", "=", " ", 
    RowBox[{"Interpolation", "[", "data4", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"omega", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"angle", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"dz", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", "7"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<yb( t )  [m]\>\""}], ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t [s]\>\"", ",", "\"\<(m)\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"angle", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", "7"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]b( t ) [rad]\>\""}], ",", " ", 
   RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t [s]\>\"", ",", "\"\<(rad)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8071385513603373`*^9, 3.807138551871023*^9}, 
   3.807138581973284*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"52964637-faad-4e6c-a112-758a0a446c36"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
jJYMrRL/B2rDs+U=
       "]]},
     Annotation[#, "Charting`Private`Tag$2445#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t [s]\"", TraditionalForm], 
    FormBox["\"(m)\"", TraditionalForm]},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.28, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.26, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.24, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.22, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.18, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.18, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.22, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.24, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.26, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.28, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->"Subsubsection",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"yb( t )  [m]\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8071387750921025`*^9, 3.80713966960073*^9, 
  3.807220236860284*^9, 3.8072642625742607`*^9, 3.8072665484034386`*^9, 
  3.8075400273852963`*^9, 3.8075535254280553`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"1bd5a87f-49b2-4b31-b015-660380ea0917"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yf4P7Kkz2A==
       "]]},
     Annotation[#, "Charting`Private`Tag$2642#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t [s]\"", TraditionalForm], 
    FormBox["\"(rad)\"", TraditionalForm]},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
     Automatic, {{-0.025, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.025, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.075, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.045, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.035, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.03, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.015, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.01, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.005, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.005, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.01, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.015, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.03, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.035, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.045, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.065, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.07, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.085, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.095, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->"Subsubsection",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\[Theta]b( t ) [rad]\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8071387750921025`*^9, 3.80713966960073*^9, 
  3.807220236860284*^9, 3.8072642625742607`*^9, 3.8072665484034386`*^9, 
  3.8075400273852963`*^9, 3.807553525559703*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"653045d4-1e31-4819-8222-76bf5c539817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xC1", " ", "=", " ", 
   RowBox[{
    FractionBox["lot", "2"], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xB1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zC1", " ", "=", " ", 
   RowBox[{
    RowBox[{"zot", "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zB1", " ", "=", " ", 
   RowBox[{
    RowBox[{"zb", "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xC2", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "lot"}], "2"], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xB2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", "lb"}], "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zC2", " ", "=", " ", 
   RowBox[{
    RowBox[{"zot", "[", "t", "]"}], " ", "-", " ", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zB2", " ", "=", " ", 
    RowBox[{
     RowBox[{"zb", "[", "t", "]"}], " ", "-", " ", 
     RowBox[{
      FractionBox["lb", "2"], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"li", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", " ", "=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"xB1", " ", "-", " ", "xC1"}], ")"}], "2"], "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zC1", " ", "-", " ", "zB1"}], ")"}], "2"], " ", "-", " ", 
    SuperscriptBox["ls", "2"]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", " ", "=", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xC2", " ", "-", " ", "xB2"}], ")"}], "2"], "+", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"zC2", " ", "-", " ", "zB2"}], ")"}], "2"], " ", "-", " ", 
     SuperscriptBox["ls", "2"]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1expaux", "=", 
   RowBox[{"Expand", "[", "h1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2expaux", "=", 
    RowBox[{"Expand", "[", "h2", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1dot", " ", "=", " ", 
   RowBox[{"Expand", "[", 
    RowBox[{"D", "[", 
     RowBox[{"h1", ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2dot", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"D", "[", 
      RowBox[{"h2", ",", "t"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1dot2", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"D", "[", 
     RowBox[{"h1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2dot2", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"D", "[", 
      RowBox[{"h2", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"zot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "]"}]},
      {
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"zot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"At", " ", "=", " ", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "At", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"\[Lambda]1", "[", "t", "]"}]},
      {
       RowBox[{"\[Lambda]2", "[", "t", "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qdot", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"zot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qdot", ".", "At", ".", "\[Lambda]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7961500148839192`*^9, 3.796150237310034*^9}, 
   3.7970109658837156`*^9, {3.797012751850441*^9, 3.7970127580700893`*^9}, {
   3.797012957969314*^9, 3.7970129817186265`*^9}, {3.7970130153486032`*^9, 
   3.797013322187457*^9}, {3.7970136067248955`*^9, 3.7970136090573673`*^9}, {
   3.797024682533675*^9, 3.7970248479569836`*^9}, {3.7970249945322046`*^9, 
   3.797025000152942*^9}, {3.7970251611791534`*^9, 3.797025168033781*^9}, {
   3.797026013098591*^9, 3.797026052538904*^9}, {3.7970370337253857`*^9, 
   3.7970370814833307`*^9}, {3.7970373949546824`*^9, 
   3.7970374166822095`*^9}, {3.797079266176948*^9, 3.797079439248556*^9}, {
   3.7970795579365315`*^9, 3.7970796995065804`*^9}, {3.7970803830964203`*^9, 
   3.797080448321601*^9}, {3.797085100731135*^9, 3.7970851483473597`*^9}, {
   3.797085214256007*^9, 3.797085231866709*^9}, {3.7970852635164757`*^9, 
   3.797085267567282*^9}, {3.797085314790662*^9, 3.797085501042686*^9}, {
   3.797085540889643*^9, 3.797085577354436*^9}, {3.797086056757043*^9, 
   3.7970861063511887`*^9}, {3.7970865975658884`*^9, 3.79708676475274*^9}, 
   3.797086808562425*^9, {3.797087626567214*^9, 3.7970876671528807`*^9}, {
   3.7970877114310274`*^9, 3.797087769957935*^9}, {3.797087849970097*^9, 
   3.797087919271596*^9}, {3.797096723830722*^9, 3.797096743600049*^9}, {
   3.797096775378889*^9, 3.7970967758034782`*^9}, {3.797097091231843*^9, 
   3.7970971544207373`*^9}, 3.7970986739787846`*^9, {3.797098908869074*^9, 
   3.7970989927624464`*^9}, {3.7970990508709807`*^9, 
   3.7970990928969975`*^9}, {3.7971053609901295`*^9, 
   3.7971053914225307`*^9}, {3.7971054949090323`*^9, 3.797105501194956*^9}, {
   3.7977920016607475`*^9, 3.7977920085499697`*^9}, {3.797849096670327*^9, 
   3.7978492936785927`*^9}, {3.797849331575965*^9, 3.7978493495653367`*^9}, {
   3.797850394033223*^9, 3.797850409812121*^9}, {3.7978509331310654`*^9, 
   3.797850975089986*^9}, {3.7978541671151247`*^9, 3.7978541708743715`*^9}, {
   3.7986515694531236`*^9, 3.798651628928774*^9}, {3.7986517274809084`*^9, 
   3.798651812834546*^9}, {3.7986518653489027`*^9, 3.798651867181385*^9}, {
   3.7986529535913963`*^9, 3.7986529563906517`*^9}, {3.798653160234*^9, 
   3.7986532415705633`*^9}, {3.7986532865133195`*^9, 3.798653369541637*^9}, {
   3.7986534058624907`*^9, 3.7986534067073193`*^9}, {3.798653449794532*^9, 
   3.798653565389599*^9}, {3.798655687645901*^9, 3.7986557335853767`*^9}, {
   3.798655790529843*^9, 3.798655892164824*^9}, {3.798656184658167*^9, 
   3.7986562800695877`*^9}, {3.798656325777157*^9, 3.798656505489358*^9}, {
   3.798656540062578*^9, 3.7986566527088284`*^9}, {3.7986567005359707`*^9, 
   3.7986567013964405`*^9}, {3.800179611001259*^9, 3.8001796127727604`*^9}, {
   3.8013381458654175`*^9, 3.8013381481707935`*^9}, {3.8021161343688455`*^9, 
   3.802116141459276*^9}, {3.802118641938096*^9, 3.8021186424572515`*^9}, {
   3.8021186806777334`*^9, 3.80211890948668*^9}, {3.8021189828106365`*^9, 
   3.8021190855173225`*^9}, {3.8021191602361617`*^9, 
   3.8021192712005568`*^9}, {3.8021193223967695`*^9, 3.802119324401766*^9}, {
   3.802119414053112*^9, 3.802119540886101*^9}, {3.802120148615127*^9, 
   3.8021202071178513`*^9}, {3.8045452232491817`*^9, 3.804545241844062*^9}, {
   3.804546307049661*^9, 3.8045463164717703`*^9}, {3.8045810790789423`*^9, 
   3.8045810821303215`*^9}, {3.8045812825324955`*^9, 
   3.8045812833971806`*^9}, {3.8071396864038253`*^9, 3.807139696650474*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"46531b23-8898-4625-8c24-005ead5ef8e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lb", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "li"}], " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "+", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "lb"}], " ", "li", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lb", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lb", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}], "0", 
      RowBox[{
       RowBox[{"lb", " ", "li", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"lb", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"li", " ", "lot", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zb", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", "li", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"zot", "[", "t", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.797080458173938*^9, 3.797085287979849*^9, {3.7970855506750064`*^9, 
   3.797085578540344*^9}, 3.7970867656131353`*^9, 3.797086809767062*^9, 
   3.797087670677091*^9, {3.7970877290001698`*^9, 3.7970877413163195`*^9}, {
   3.7970878460916843`*^9, 3.7970878711484237`*^9}, 3.7970879205697937`*^9, {
   3.7970967255416393`*^9, 3.797096744421607*^9}, 3.797096777409843*^9, {
   3.797097094063751*^9, 3.797097108079729*^9}, 3.7970989426814327`*^9, {
   3.7970989795984917`*^9, 3.797098994055687*^9}, {3.7970990839876347`*^9, 
   3.797099093322978*^9}, 3.797105397661894*^9, 3.7971055026926165`*^9, 
   3.79711881283247*^9, 3.797791579996448*^9, 3.797792009408452*^9, 
   3.7978492970908813`*^9, {3.7978493384340277`*^9, 3.797849351927079*^9}, 
   3.797850432158806*^9, {3.7978504695204744`*^9, 3.7978504807493167`*^9}, {
   3.7978509365684032`*^9, 3.7978509454820375`*^9}, 3.7978509756305437`*^9, 
   3.7978541719002733`*^9, 3.7986516371751003`*^9, 3.798651784057747*^9, 
   3.798651814075802*^9, 3.798651868227702*^9, 3.7986529575637894`*^9, 
   3.798653332370397*^9, 3.7986533705270023`*^9, 3.798653408282752*^9, {
   3.7986534674730806`*^9, 3.7986534843767385`*^9}, 3.7986535332241216`*^9, 
   3.7986535663592615`*^9, 3.798656704564125*^9, 3.7987476505610003`*^9, 
   3.800179615509265*^9, 3.800785945733678*^9, 3.80099939435713*^9, 
   3.801320209129786*^9, 3.801333060837427*^9, 3.801338148841133*^9, 
   3.8016065079255123`*^9, 3.8020332874965487`*^9, 3.8020825985094843`*^9, 
   3.8021161817819443`*^9, 3.8021164704140573`*^9, 3.8021193251976194`*^9, 
   3.802119542927644*^9, {3.8021201989684887`*^9, 3.8021202081231613`*^9}, 
   3.8045452466551266`*^9, 3.8045455744546995`*^9, 3.804546319611904*^9, 
   3.804581088283208*^9, 3.80458129465049*^9, 3.8067821750725718`*^9, 
   3.807138777700135*^9, {3.8071396916139345`*^9, 3.8071396996643867`*^9}, 
   3.8072202399687967`*^9, 3.807264267716303*^9, 3.807266551767477*^9, 
   3.807540029718007*^9, 3.8075535260184765`*^9},
 CellLabel->
  "Out[34]//MatrixForm=",ExpressionUUID->"8b32ccda-1845-40a9-9b5b-\
d9158d1a1d5d"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7970374095603204`*^9},ExpressionUUID->"1dcee5cb-537d-40d6-a9d6-\
cd562d630c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Para", " ", "o", " ", "lado", " ", "direito", " ", "da", " ", "maca", " ", 
    RowBox[{"\[Theta]1", "[", "t", "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"h1expaux", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h1exp", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["ls", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lb", "2"]}], " ", "+", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      SuperscriptBox["li", "2"], " ", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lot", "2"]}], " ", "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"zb", "[", "t", "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zot", "[", "t", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"E1", " ", "Cos", 
       RowBox[{"(", "\[Theta]1", ")"}]}], " ", "+", " ", 
      RowBox[{"F1", " ", "Sin", 
       RowBox[{"(", "\[Theta]1", ")"}]}], " ", "+", " ", "G1"}], " ", "=", 
     " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E1", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"h1exp", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F1", " ", "=", 
     RowBox[{"D", "[", 
      RowBox[{"h1exp", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G1", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "h1exp", "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"E1", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"F1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F1"}], "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F1", "2"], "-", 
         SuperscriptBox["G1", "2"], "+", 
         SuperscriptBox["E1", "2"]}], "]"}]}], 
      RowBox[{"G1", "-", "E1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F1"}], "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F1", "2"], "-", 
         SuperscriptBox["G1", "2"], "+", 
         SuperscriptBox["E1", "2"]}], "]"}]}], 
      RowBox[{"G1", "-", "E1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta11", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["u1", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u1", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B1", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "interna"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta12", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["u2", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u2", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B1", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "externa"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"theta11", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lb", "\[Rule]", "2"}], ",", 
        RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.2"}]}], "}"}]}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"theta12", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "\[Rule]", "2"}], ",", 
       RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
       RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
       RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.38"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zb", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Para", " ", "o", " ", "lado", " ", "esquerdo", " ", "da", " ", "maca", 
     " ", 
     RowBox[{"\[Theta]2", "[", "t", "]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"h2expaux", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2exp", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["ls", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lb", "2"]}], " ", "-", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      SuperscriptBox["li", "2"], " ", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lot", "2"]}], " ", "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"zb", "[", "t", "]"}], " ", 
       RowBox[{"zot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"zot", "[", "t", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"E2", " ", "Cos", 
       RowBox[{"(", "\[Theta]2", ")"}]}], " ", "+", " ", 
      RowBox[{"F2", " ", "Sin", 
       RowBox[{"(", "\[Theta]2", ")"}]}], " ", "+", " ", "G2"}], " ", "=", 
     " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E2", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"h2exp", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F2", " ", "=", 
     RowBox[{"D", "[", 
      RowBox[{"h2exp", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G2", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "h2exp", "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"E2", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"F1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F2"}], "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F2", "2"], "-", 
         SuperscriptBox["G2", "2"], "+", 
         SuperscriptBox["E2", "2"]}], "]"}]}], 
      RowBox[{"G2", "-", "E2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F2"}], "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F2", "2"], "-", 
         SuperscriptBox["G2", "2"], "+", 
         SuperscriptBox["E2", "2"]}], "]"}]}], 
      RowBox[{"G2", "-", "E2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta21", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["v1", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["v1", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B2", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "externa"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta22", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["v2", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["v2", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B2", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "interna"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"theta21", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "\[Rule]", "2"}], ",", 
       RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
       RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
       RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.38"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"zb", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"theta22", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lb", "\[Rule]", "2"}], ",", 
        RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"zot", "[", "t", "]"}], "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"zb", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7987472771833405`*^9, 3.7987473587904406`*^9}, {
   3.7987474082213583`*^9, 3.7987474611587763`*^9}, {3.7987474987232275`*^9, 
   3.798747637254788*^9}, {3.7987476688807435`*^9, 3.7987476786099987`*^9}, {
   3.798747759050618*^9, 3.7987477778051147`*^9}, 3.798748002717452*^9, {
   3.7987512595453496`*^9, 3.7987512836727257`*^9}, {3.7987517640025597`*^9, 
   3.7987518879428906`*^9}, {3.7987519520156784`*^9, 
   3.7987519819396534`*^9}, {3.7987520532350435`*^9, 
   3.7987520773164797`*^9}, {3.7987521647215786`*^9, 3.798752171812319*^9}, {
   3.798752320686392*^9, 3.798752324694767*^9}, {3.798752368219489*^9, 
   3.7987523939088435`*^9}, {3.7987526053419466`*^9, 
   3.7987526119682474`*^9}, {3.798752985779747*^9, 3.7987529913730125`*^9}, {
   3.798753064459014*^9, 3.7987530658345017`*^9}, {3.7987531447774887`*^9, 
   3.7987531517039404`*^9}, {3.7987531993062944`*^9, 3.798753234780369*^9}, {
   3.7987532674551964`*^9, 3.798753281516276*^9}, {3.798756543940822*^9, 
   3.7987565461815968`*^9}, {3.7987575119828615`*^9, 3.798757594390726*^9}, {
   3.8001797246904917`*^9, 3.800179755884306*^9}, {3.800179940859518*^9, 
   3.800179942216119*^9}, {3.800180095710779*^9, 3.800180149444025*^9}, {
   3.8001802621873984`*^9, 3.800180362081149*^9}, {3.800180399833151*^9, 
   3.800180471938245*^9}, {3.8001806597916746`*^9, 3.8001807645693593`*^9}, {
   3.800180816818575*^9, 3.8001808992400703`*^9}, {3.800181273215073*^9, 
   3.800181308640296*^9}, {3.8001813739964666`*^9, 3.8001814272041183`*^9}, {
   3.8001818461323457`*^9, 3.800181964998339*^9}, {3.8001819965299816`*^9, 
   3.8001820030425587`*^9}, {3.800182573214054*^9, 3.800182593042007*^9}, {
   3.800182634523034*^9, 3.800182714578855*^9}, {3.80018319144109*^9, 
   3.8001832651608667`*^9}, 3.8001834303535748`*^9, {3.8001834981561813`*^9, 
   3.800183508955289*^9}, {3.800183705290534*^9, 3.8001837416382923`*^9}, {
   3.800183999602153*^9, 3.800184040711172*^9}, {3.8001845940034504`*^9, 
   3.8001846016639543`*^9}, {3.800785951904145*^9, 3.800785975133509*^9}, {
   3.800786406417*^9, 3.8007864178127837`*^9}, 3.8007894529647107`*^9, {
   3.800789578982834*^9, 3.8007896099360476`*^9}, {3.800789671680832*^9, 
   3.8007896782612066`*^9}, {3.800789711191165*^9, 3.800789764958418*^9}, {
   3.800789832320367*^9, 3.80078983916407*^9}, {3.800789905086034*^9, 
   3.8007899258185673`*^9}, {3.80078997955394*^9, 3.800789993146569*^9}, {
   3.80079002650937*^9, 3.8007900871312976`*^9}, {3.8007901404767323`*^9, 
   3.8007901549559684`*^9}, {3.8007902737956696`*^9, 3.800790352394539*^9}, {
   3.800794883647307*^9, 3.800794897783482*^9}, {3.8010009889138317`*^9, 
   3.801000998874222*^9}, {3.801003978475292*^9, 3.801003985318049*^9}, 
   3.801004241334572*^9, {3.801004298360117*^9, 3.801004337792693*^9}, {
   3.801008758418641*^9, 3.8010087625765305`*^9}, {3.8013392491953983`*^9, 
   3.801339328960471*^9}, {3.801339366863848*^9, 3.8013393774883127`*^9}, {
   3.8013396544910884`*^9, 3.8013396746689186`*^9}, {3.801339767836833*^9, 
   3.8013398132019567`*^9}, 3.801339936438534*^9, {3.801351562118303*^9, 
   3.801351594111581*^9}, {3.802042146293869*^9, 3.802042153549081*^9}, {
   3.8020422595551577`*^9, 3.8020422670037127`*^9}, {3.8020430437857265`*^9, 
   3.8020430478968725`*^9}, {3.802043114523828*^9, 3.802043122370268*^9}, {
   3.8021202484965277`*^9, 3.8021204063235607`*^9}, {3.802122197986263*^9, 
   3.8021222215308194`*^9}, {3.8021228621118107`*^9, 3.802122907546113*^9}, 
   3.802123020853615*^9, 3.802123166536572*^9, 3.802124350087191*^9, {
   3.8021248015508175`*^9, 3.8021248064825935`*^9}, {3.802124845888503*^9, 
   3.8021248481285114`*^9}, {3.8045452725290737`*^9, 
   3.8045452962354045`*^9}, {3.8045453352315006`*^9, 3.804545336328273*^9}, {
   3.8045453752906165`*^9, 3.8045454048266697`*^9}, 3.8045454395332727`*^9, {
   3.804545618397917*^9, 3.804545623731288*^9}, {3.8045456831474624`*^9, 
   3.8045456966687446`*^9}, {3.804545819761959*^9, 3.8045458233401947`*^9}, {
   3.8045458775120707`*^9, 3.804545964996994*^9}, 3.804546042241974*^9, {
   3.8045461036693482`*^9, 3.804546105373272*^9}, 3.8045461748404474`*^9, {
   3.8045462415244493`*^9, 3.8045462562301817`*^9}, {3.8045463271458006`*^9, 
   3.8045463361696196`*^9}, {3.8045463984005933`*^9, 3.804546400050576*^9}, {
   3.804546461131978*^9, 3.8045465016996355`*^9}, {3.8045465410922065`*^9, 
   3.8045465695704126`*^9}, {3.8045466804017115`*^9, 3.804546683924264*^9}, {
   3.804581132722577*^9, 3.804581544575041*^9}, {3.8045820112824144`*^9, 
   3.8045820406490583`*^9}, 3.8045821413353376`*^9, {3.804583049828171*^9, 
   3.8045830773434024`*^9}, {3.8072202864534817`*^9, 3.807220296910515*^9}, {
   3.807220363735834*^9, 3.807220368919938*^9}, {3.807220425116682*^9, 
   3.8072204333307266`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"58440a08-1239-47e6-86c3-bbe4465df837"],

Cell[BoxData["0.983783670101104`"], "Output",
 CellChangeTimes->{
  3.8045830319568367`*^9, {3.804583069316467*^9, 3.804583078127534*^9}, 
   3.806782178868428*^9, 3.8071387830667915`*^9, 3.8071397415305324`*^9, 
   3.8072203016298943`*^9, 3.8072203698055706`*^9, 3.807220434178413*^9, 
   3.807264293246107*^9, 3.80726655753622*^9, 3.8075400342299423`*^9, 
   3.8075535260892873`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"81a3c15c-116a-44a9-87fc-875fdba3dda1"],

Cell[BoxData["2.1578089834886907`"], "Output",
 CellChangeTimes->{
  3.8045830319568367`*^9, {3.804583069316467*^9, 3.804583078127534*^9}, 
   3.806782178868428*^9, 3.8071387830667915`*^9, 3.8071397415305324`*^9, 
   3.8072203016298943`*^9, 3.8072203698055706`*^9, 3.807220434178413*^9, 
   3.807264293246107*^9, 3.80726655753622*^9, 3.8075400342299423`*^9, 
   3.807553526093278*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"ce287fbf-ad63-484d-9130-e57f316bf350"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Termos", " ", "de", " ", "Energia"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", "=", " ", 
     RowBox[{
      FractionBox["1", "2"], " ", "Mot", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"zot", "[", "t", "]"}], ",", "t"}], "]"}], "2"], "+", " ", 
        RowBox[{
         FractionBox["1", "12"], 
         SuperscriptBox["lot", "2"], " ", 
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]ot", "[", "t", "]"}], ",", "t"}], "]"}], 
          "2"]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", " ", "=", " ", 
     RowBox[{
      RowBox[{"Mot", "*", "g", " ", "*", 
       RowBox[{"(", 
        RowBox[{"zot", "[", "t", "]"}], ")"}]}], "  ", "+", " ", 
      RowBox[{
       FractionBox["1", "2"], "k", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.0471975511965903`", "-", 
          RowBox[{"\[Theta]1", "[", "t", "]"}]}], ")"}], "2"]}], " ", "+", 
      " ", 
      RowBox[{
       FractionBox["1", "2"], "k", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", "2.0943951023932046`"}], 
         ")"}], "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R", " ", "=", "  ", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "c", " ", 
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", "2"], "c", " ", 
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"qdot", ".", "At", ".", "\[Lambda]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "First"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7710708339960613`*^9, 3.77107083780488*^9}, {
   3.7710709098058157`*^9, 3.7710710436231127`*^9}, {3.7710711048923817`*^9, 
   3.771071139011381*^9}, {3.771071348419466*^9, 3.771071406987405*^9}, {
   3.7710715579164705`*^9, 3.7710715821435604`*^9}, {3.7710722942201223`*^9, 
   3.7710723204598265`*^9}, {3.7710723598204527`*^9, 
   3.7710724395573545`*^9}, {3.771072588753183*^9, 3.771072620344256*^9}, {
   3.771072669992793*^9, 3.7710727274043074`*^9}, {3.7710727966898427`*^9, 
   3.771072872479864*^9}, {3.771072913757844*^9, 3.771073033524934*^9}, {
   3.7710735013545737`*^9, 3.771073589662245*^9}, {3.7710736209745283`*^9, 
   3.7710736307451878`*^9}, {3.771074106757812*^9, 3.771074159438382*^9}, {
   3.771074637159964*^9, 3.771074708722269*^9}, {3.7710754519761086`*^9, 
   3.771075470627987*^9}, {3.771086689274866*^9, 3.7710866907859383`*^9}, {
   3.7710869105856*^9, 3.7710870500617266`*^9}, {3.771087147374815*^9, 
   3.7710871509765944`*^9}, {3.771253391677907*^9, 3.771253405677308*^9}, {
   3.777228238217062*^9, 3.7772282799553485`*^9}, {3.7772283162190056`*^9, 
   3.777228340214219*^9}, {3.777228421549562*^9, 3.7772285042659826`*^9}, 
   3.7772917658571043`*^9, 3.777291897956624*^9, {3.7774024744665985`*^9, 
   3.7774025306599913`*^9}, {3.777402562085614*^9, 3.7774025652276754`*^9}, {
   3.7774026268796844`*^9, 3.7774026367605977`*^9}, {3.777402725927675*^9, 
   3.77740273086961*^9}, {3.777402791378333*^9, 3.777402803530838*^9}, {
   3.777402851632204*^9, 3.777402868513795*^9}, {3.777402918476009*^9, 
   3.7774029271626577`*^9}, {3.7774029815501595`*^9, 3.777403016538587*^9}, {
   3.777632214024818*^9, 3.777632231513698*^9}, {3.777722095346839*^9, 
   3.777722102019783*^9}, {3.7806905474852257`*^9, 3.7806905509546986`*^9}, {
   3.796150251792301*^9, 3.79615044106409*^9}, 3.797087018832646*^9, {
   3.797087477622899*^9, 3.797087507215741*^9}, {3.7971003054287844`*^9, 
   3.797100314299059*^9}, {3.7971028520466013`*^9, 3.797102858456749*^9}, {
   3.797102957314667*^9, 3.797102968667633*^9}, {3.797103118712126*^9, 
   3.797103120966442*^9}, {3.7971031588007593`*^9, 3.7971031951751757`*^9}, {
   3.7971032536591005`*^9, 3.7971032740377493`*^9}, {3.7971048525078*^9, 
   3.797104862548818*^9}, {3.7971049284386263`*^9, 3.7971049957248244`*^9}, {
   3.797118734941372*^9, 3.797118757816075*^9}, {3.7978504278170214`*^9, 
   3.797850429135762*^9}, {3.7978504617691813`*^9, 3.7978504623861637`*^9}, 
   3.800797378580963*^9, 3.8007978868917603`*^9, {3.8007979284494066`*^9, 
   3.800797948121763*^9}, 3.8007983451525154`*^9, 3.8007983793049273`*^9, {
   3.8007998273323345`*^9, 3.800799829461918*^9}, {3.801007803170352*^9, 
   3.8010078400138874`*^9}, {3.8010079190916348`*^9, 3.801007925273144*^9}, {
   3.801008815964772*^9, 3.801008826393865*^9}, {3.801008861556857*^9, 
   3.8010088623178215`*^9}, {3.801008919177868*^9, 3.801008919996661*^9}, {
   3.8013204280548773`*^9, 3.8013204290249395`*^9}, {3.8013354011588435`*^9, 
   3.8013354042834415`*^9}, {3.801335597970683*^9, 3.8013356053519545`*^9}, {
   3.8013358451010275`*^9, 3.8013358541801753`*^9}, {3.801338194412949*^9, 
   3.8013382009245367`*^9}, {3.801338363079425*^9, 3.801338363596286*^9}, {
   3.801338441706807*^9, 3.8013384462188416`*^9}, 3.8013389097398224`*^9, {
   3.801339113445095*^9, 3.801339128556987*^9}, {3.8013394138031282`*^9, 
   3.8013394156381116`*^9}, {3.8013399566451783`*^9, 3.801339969991335*^9}, {
   3.8013400138178854`*^9, 3.801340033373307*^9}, {3.8013501583668594`*^9, 
   3.801350158922138*^9}, {3.801350957355009*^9, 3.8013509912431746`*^9}, {
   3.801351513142573*^9, 3.801351513850819*^9}, {3.801351671472398*^9, 
   3.801351693755477*^9}, 3.804583583557273*^9, {3.807138620388587*^9, 
   3.8071386506985893`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"94c95cbb-ae66-48e1-bc2a-c1accdff1c6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Lagrange", " ", "com", " ", "seus", " ", "multiplicadores"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[DoubleStruckQ]", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zot", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]ot", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[DoubleStruckE]", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"T", ",", 
                 RowBox[{"D", "[", 
                  RowBox[{"#", ",", "t"}], "]"}]}], "]"}], ",", "t"}], "]"}], 
             "-", 
             RowBox[{"D", "[", 
              RowBox[{"T", ",", "#"}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{"V", ",", "#"}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{"R", ",", 
               RowBox[{"D", "[", 
                RowBox[{"#", ",", "t"}], "]"}]}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{"H", ",", 
               RowBox[{"D", "[", 
                RowBox[{"#", ",", "t"}], "]"}]}], "]"}]}], "\[Equal]", "0"}], 
           ")"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h1dot2", "+", 
            RowBox[{"2", "*", "\[Zeta]", "*", "\[Omega]", "*", "h1dot"}], "+", 
            RowBox[{
             SuperscriptBox["\[Omega]", "2"], "*", "h1exp"}]}], "\[Equal]", 
           "0"}], ")"}], " ", ",", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h2dot2", "+", 
            RowBox[{"2", "*", "\[Zeta]", "*", "\[Omega]", "*", "h2dot"}], "+", 
            RowBox[{
             SuperscriptBox["\[Omega]", "2"], "*", "h2exp"}]}], "\[Equal]", 
           "0"}], ")"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckE]", "[", "t", "]"}], "//", 
    "TableForm"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797852586927451*^9, 3.7978525929291716`*^9}, {
  3.7978526302509017`*^9, 3.79785264723812*^9}, {3.7978538071023755`*^9, 
  3.797853826593302*^9}, {3.7978541472921305`*^9, 3.7978541504731894`*^9}, {
  3.801000812466301*^9, 3.801000866791662*^9}, {3.8067822777402773`*^9, 
  3.8067823279739747`*^9}, {3.8071386711648955`*^9, 3.8071386873157334`*^9}, {
  3.807539886802169*^9, 3.8075400169312053`*^9}, {3.807542650884837*^9, 
  3.8075426545639224`*^9}, {3.807543027331352*^9, 3.807543080657321*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"7b841b07-b8ce-4a4b-8b42-0c93944af92a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "Mot"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{"Mot", " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "li"}], " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "12"], " ", 
         SuperscriptBox["lot", "2"], " ", "Mot", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", 
         RowBox[{"(", 
          RowBox[{"1.0471975511965903`", "\[VeryThinSpace]", "-", 
           RowBox[{"\[Theta]1", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "lb"}], " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2.0943951023932046`"}], "+", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["lb", "2"], "4"], "+", 
           SuperscriptBox["li", "2"], "+", 
           FractionBox[
            SuperscriptBox["lot", "2"], "4"], "-", 
           SuperscriptBox["ls", "2"], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"zb", "[", "t", "]"}], "2"], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"zot", "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "\[Zeta]", " ", "\[Omega]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["lb", "2"], "4"], "+", 
           SuperscriptBox["li", "2"], "+", 
           FractionBox[
            SuperscriptBox["lot", "2"], "4"], "-", 
           SuperscriptBox["ls", "2"], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"zb", "[", "t", "]"}], "2"], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"zot", "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["zot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "\[Zeta]", " ", "\[Omega]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["zot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"zot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["zot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"zot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.797801772772564*^9, 3.7978017899882154`*^9}, 
   3.797805927379837*^9, 3.7978497239163756`*^9, 3.7978504549679937`*^9, 
   3.7978504856987658`*^9, 3.797852650372779*^9, {3.7978538153200636`*^9, 
   3.7978538275023513`*^9}, 3.797854068842256*^9, {3.7978541522848616`*^9, 
   3.79785418186302*^9}, 3.800794758107277*^9, 3.800796198257*^9, 
   3.800797880263479*^9, 3.8009994159124703`*^9, 3.8010008860372095`*^9, 
   3.8010078549072294`*^9, 3.801007933188945*^9, 3.801008078555448*^9, 
   3.8010088355384164`*^9, 3.80100886949367*^9, 3.801008928706335*^9, 
   3.8013202263883333`*^9, 3.8013204376312227`*^9, 3.8013330779636393`*^9, 
   3.8013354113689365`*^9, 3.801335610804299*^9, 3.8013358592773175`*^9, 
   3.8013382240795135`*^9, 3.8013394529730387`*^9, 3.801340118596836*^9, 
   3.801350164972628*^9, 3.8013510279816184`*^9, 3.801351520547223*^9, 
   3.801351701571916*^9, 3.801606525204318*^9, 3.802033301363752*^9, {
   3.8020825941799183`*^9, 3.8020826079880457`*^9}, 3.802116198130125*^9, 
   3.802116483941861*^9, 3.804583596118224*^9, 3.8067821923603697`*^9, 
   3.8067823311405487`*^9, 3.8071388101982374`*^9, 3.8071397762736483`*^9, {
   3.8071398451017075`*^9, 3.8071398546212673`*^9}, 3.8071401664928656`*^9, 
   3.807220482092276*^9, 3.8072643014148283`*^9, 3.8072665636418915`*^9, 
   3.8075400401700554`*^9, 3.807542656512744*^9, 3.807543031544086*^9, 
   3.80754421409653*^9, 3.807553526346599*^9},
 CellLabel->
  "Out[69]//TableForm=",ExpressionUUID->"e3d7cd76-4c9c-4d56-b27d-\
6da61fdfc82a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7772292748496075`*^9, 3.7772292749225607`*^9}, 
   3.7772293067719383`*^9},ExpressionUUID->"ab4ecf65-fcce-4c81-9ec7-\
4b3fb3ff7a87"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7772938017456107`*^9, 3.777293811185851*^9}, 
   3.7773948953008595`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"443439bd-c8bf-4bd7-b386-3ea6bcff8c02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[DoubleStruckE]", "[", "t", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Zeta]", "\[Rule]", "0.9"}], ",", 
        RowBox[{"\[Omega]", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"Mot", "\[Rule]", "125"}], ",", 
        RowBox[{"g", "\[Rule]", "9.8"}], ",", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{"lb", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"li", " ", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"ls", "\[Rule]", " ", "0.3"}], ",", " ", 
        RowBox[{"k", "\[Rule]", "3000"}], ",", 
        RowBox[{"c", "\[Rule]", "200"}], ",", 
        RowBox[{
         RowBox[{"zb", "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"dz", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"zb", "'"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"vz", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"zb", "''"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"vz", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]b", "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"angle", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]b", "'"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"omega", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]b", "''"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"omega", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "}"}]}], 
     ")"}], "/.", 
    RowBox[{"Rule", "\[Rule]", "Equal"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", " ", 
      RowBox[{"ti", "=", "0"}], ",", " ", 
      RowBox[{"ts", "=", "7"}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"sol", "=", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"eqs", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"zot", "[", "0", "]"}], "\[Equal]", "0.38"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]ot", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
             "0.983783670101104`"}], ",", " ", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
             "2.1578089834886907`"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"zot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]ot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}],
             ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
            ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", 
             "0"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "zot", ",", "\[Theta]ot", ",", "\[Theta]1", ",", "\[Theta]2", ",", 
          " ", "\[Lambda]1", ",", "\[Lambda]2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "ts"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"zot", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<yot ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<yot [m]\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]1 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]1 [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]1", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Lambda]1 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Lambda]1\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ot", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]ot ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]ot [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]2 [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]2", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Lambda]2 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Lambda]2\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Pi", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], "/.", "sol"}],
            ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Pi - ( \[Theta]1 ( t ) + \[Theta]2 ( t ) )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[rad]\>\""}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["2", "2"], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                RowBox[{"0.2", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1.8", "2"], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], ")"}], 
              "2"], " ", "+", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dz", "[", "t", "]"}], " ", "+", " ", 
                RowBox[{
                 FractionBox["2", "2"], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                RowBox[{"0.2", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}]}]}], ")"}]}], " ",
                 "-", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"zot", "[", "t", "]"}], " ", "+", " ", 
                  RowBox[{
                   FractionBox["1.8", "2"], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}], ")"}]}],
                ")"}], "2"], " ", "-", " ", 
             SuperscriptBox["0.3", "2"]}], ")"}], "/.", "sol"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<h1 ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[m]\>\""}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"-", "1.8"}], "2"], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox[
                    RowBox[{"-", "2"}], "2"], "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                  RowBox[{"0.2", "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"], " ", "+", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"zot", "[", "t", "]"}], " ", "-", " ", 
                RowBox[{
                 FractionBox["1.8", "2"], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], " ", "-", 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"dz", "[", "t", "]"}], " ", "-", " ", 
                  RowBox[{
                   FractionBox["2", "2"], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
                  RowBox[{"0.2", "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"angle", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"]}], ")"}], "/.", "sol"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<h2 ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[m]\>\""}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7711032597452345`*^9, {3.777229137668547*^9, 3.7772292092240295`*^9}, {
   3.7772292438387227`*^9, 3.7772292703563766`*^9}, {3.777229312618336*^9, 
   3.777229686930296*^9}, {3.777229745465228*^9, 3.77722982820563*^9}, {
   3.777229864603204*^9, 3.7772298686527147`*^9}, {3.7772299210404334`*^9, 
   3.7772299975902653`*^9}, {3.7772301438135242`*^9, 3.777230154139162*^9}, {
   3.77723024666118*^9, 3.7772304010754623`*^9}, {3.77723047872213*^9, 
   3.7772305094062233`*^9}, {3.7772305411312065`*^9, 3.777230643216278*^9}, {
   3.7772307153638163`*^9, 3.777230716332221*^9}, {3.7772307558058977`*^9, 
   3.7772307646124716`*^9}, {3.7772308003224735`*^9, 3.777230821619346*^9}, {
   3.7772308704162755`*^9, 3.7772308875976925`*^9}, {3.777231358028452*^9, 
   3.777231390965167*^9}, {3.7772900529132905`*^9, 3.777290086647379*^9}, {
   3.777290708134918*^9, 3.7772907098071547`*^9}, {3.7772907528432145`*^9, 
   3.7772907592042656`*^9}, {3.7772908171195836`*^9, 3.777290826802956*^9}, {
   3.7772913639494123`*^9, 3.7772914223539467`*^9}, {3.777291454533947*^9, 
   3.777291600986794*^9}, 3.7772916743515005`*^9, {3.777291829230736*^9, 
   3.7772918428614864`*^9}, {3.777291928055847*^9, 3.777292014180521*^9}, {
   3.7772937717388315`*^9, 3.7772937975730057`*^9}, {3.777294049431409*^9, 
   3.7772940542768993`*^9}, {3.777294085020687*^9, 3.7772941374166865`*^9}, {
   3.777294239660467*^9, 3.777294245412338*^9}, 3.7773960028736773`*^9, {
   3.777396034995957*^9, 3.777396039573142*^9}, {3.7773960909105706`*^9, 
   3.7773961363085947`*^9}, {3.777396167472395*^9, 3.777396193784176*^9}, {
   3.777396492880782*^9, 3.7773965348928995`*^9}, {3.7773972534609175`*^9, 
   3.7773973605025277`*^9}, {3.777397465365197*^9, 3.77739757360781*^9}, {
   3.7773980025445104`*^9, 3.7773980583940973`*^9}, {3.7773981423034086`*^9, 
   3.777398157272171*^9}, {3.777398238597056*^9, 3.777398246849975*^9}, {
   3.7773983618261433`*^9, 3.7773984015446544`*^9}, {3.7773984664486604`*^9, 
   3.7773985724753327`*^9}, {3.7773986067492275`*^9, 3.777398609653426*^9}, {
   3.7773986910822506`*^9, 3.7773987376785393`*^9}, {3.77739880095455*^9, 
   3.7773988079232564`*^9}, {3.7773989267223706`*^9, 
   3.7773989314754457`*^9}, {3.777399098337624*^9, 3.777399119784937*^9}, {
   3.7773991505789423`*^9, 3.777399313286698*^9}, 3.777399755568903*^9, {
   3.7773998144949546`*^9, 3.777399842005004*^9}, {3.777399942856861*^9, 
   3.777399979672177*^9}, {3.7774001318460655`*^9, 3.7774001685134745`*^9}, {
   3.777400251941069*^9, 3.7774002779160676`*^9}, {3.777400460608494*^9, 
   3.777400463400776*^9}, {3.777400554626306*^9, 3.7774005903942685`*^9}, {
   3.7774006376611395`*^9, 3.7774007360951233`*^9}, {3.7774007955924635`*^9, 
   3.777400798097912*^9}, {3.777400841366256*^9, 3.7774010210345645`*^9}, {
   3.77740106471863*^9, 3.777401157349557*^9}, {3.77740122341485*^9, 
   3.777401223869565*^9}, {3.7774013896214323`*^9, 3.777401399463372*^9}, {
   3.777401446638316*^9, 3.777401453178274*^9}, {3.777401485068638*^9, 
   3.777401527161455*^9}, {3.7774015635920057`*^9, 3.7774015701909404`*^9}, {
   3.7774016074919543`*^9, 3.7774016077098255`*^9}, {3.777403266661922*^9, 
   3.7774032795669713`*^9}, {3.7774033930380545`*^9, 3.777403452566428*^9}, {
   3.777470690173753*^9, 3.7774706904706163`*^9}, {3.777470757011529*^9, 
   3.777470813980076*^9}, {3.777471058987892*^9, 3.7774710612073655`*^9}, {
   3.779204999136982*^9, 3.7792050032674475`*^9}, {3.7792062765348816`*^9, 
   3.779206282990938*^9}, {3.7806904113014555`*^9, 3.7806904242096233`*^9}, {
   3.796150657210005*^9, 3.796150674235469*^9}, {3.7961507132461348`*^9, 
   3.7961507156177936`*^9}, {3.796150746934743*^9, 3.796150788376909*^9}, {
   3.79615092855001*^9, 3.79615097163681*^9}, {3.796151029800264*^9, 
   3.7961510311885014`*^9}, {3.796151098771779*^9, 3.7961511341092377`*^9}, {
   3.7978527616068277`*^9, 3.7978528475655923`*^9}, {3.7978528806527166`*^9, 
   3.79785298382959*^9}, {3.797853222149555*^9, 3.7978533021191654`*^9}, {
   3.797853412408317*^9, 3.797853432340622*^9}, 3.797853657681137*^9, {
   3.797853693472251*^9, 3.797853713475763*^9}, {3.797854210297761*^9, 
   3.797854274055241*^9}, 3.7978543175254116`*^9, {3.8007948659057074`*^9, 
   3.800794871906663*^9}, {3.8007949125629687`*^9, 3.800794938324152*^9}, {
   3.8007961390189056`*^9, 3.8007961392203803`*^9}, {3.8007962186614523`*^9, 
   3.800796256441477*^9}, 3.8007966475289087`*^9, {3.800796723806085*^9, 
   3.800796727056574*^9}, {3.801000663236514*^9, 3.80100066413511*^9}, {
   3.801001410903571*^9, 3.801001413966439*^9}, {3.801001494254734*^9, 
   3.8010015530106487`*^9}, {3.8010063988629627`*^9, 3.8010064280010614`*^9}, 
   3.801007711094735*^9, {3.8010080024148664`*^9, 3.801008013903206*^9}, {
   3.80100839455367*^9, 3.8010084446935773`*^9}, {3.8010088458947296`*^9, 
   3.80100889654731*^9}, {3.8010089489721546`*^9, 3.801009002587813*^9}, {
   3.8013201993689585`*^9, 3.801320202445305*^9}, {3.801320256095974*^9, 
   3.801320259586964*^9}, {3.8013204499460382`*^9, 3.8013204550735397`*^9}, {
   3.801321880995309*^9, 3.801321937162984*^9}, {3.8013327897803326`*^9, 
   3.801332796675138*^9}, {3.8013346297296915`*^9, 3.8013346458367667`*^9}, {
   3.8013356454424496`*^9, 3.801335692567593*^9}, {3.8013357369066763`*^9, 
   3.8013358140009065`*^9}, {3.8013358878209343`*^9, 3.801336000518237*^9}, {
   3.8013360319644575`*^9, 3.801336039666568*^9}, {3.8013360770769076`*^9, 
   3.8013360833293095`*^9}, {3.8013368925897427`*^9, 3.801337012767351*^9}, 
   3.8013383988688107`*^9, {3.8013388786775665`*^9, 3.80133889369818*^9}, 
   3.801339461392099*^9, {3.8013395014693775`*^9, 3.8013395107551727`*^9}, 
   3.8013401248326344`*^9, {3.80134017345061*^9, 3.801340177206092*^9}, {
   3.801340256523858*^9, 3.8013402631709075`*^9}, 3.801349658501953*^9, {
   3.8013503046565866`*^9, 3.8013503082676086`*^9}, {3.801350343599225*^9, 
   3.8013503683222036`*^9}, {3.801350406155237*^9, 3.8013505474454556`*^9}, {
   3.801351059113801*^9, 3.801351080396869*^9}, {3.8013511719691725`*^9, 
   3.8013511777999325`*^9}, {3.8013512275151277`*^9, 
   3.8013512449597626`*^9}, {3.801351275465909*^9, 3.801351275967569*^9}, {
   3.801351343013339*^9, 3.8013513726011305`*^9}, {3.8013514301857843`*^9, 
   3.8013514487607636`*^9}, {3.8013516226790977`*^9, 
   3.8013516231133575`*^9}, {3.801351749726103*^9, 3.801351795268758*^9}, {
   3.801351886309238*^9, 3.801351904970434*^9}, {3.8013519644369807`*^9, 
   3.8013520197534676`*^9}, {3.8016064478015585`*^9, 3.801606496759121*^9}, {
   3.8016067652249413`*^9, 3.8016067727444167`*^9}, 3.8020332047573605`*^9, {
   3.802033235092001*^9, 3.80203327833521*^9}, {3.8020333669307437`*^9, 
   3.8020334094058247`*^9}, {3.802033460231169*^9, 3.8020335262493763`*^9}, {
   3.802034359261326*^9, 3.8020344343314605`*^9}, {3.802042006245019*^9, 
   3.8020420389646206`*^9}, {3.8020420828438187`*^9, 
   3.8020420989946995`*^9}, {3.8020421665445814`*^9, 
   3.8020421818335447`*^9}, {3.8020422757927475`*^9, 
   3.8020422891185207`*^9}, {3.8020430151182404`*^9, 3.802043015806149*^9}, {
   3.80204306717737*^9, 3.802043091881366*^9}, {3.8020431325315523`*^9, 
   3.8020431741897*^9}, {3.8045838369499817`*^9, 3.8045838621898813`*^9}, {
   3.80458390084377*^9, 3.8045839639178505`*^9}, {3.804584603896513*^9, 
   3.804584610289295*^9}, {3.804584652970418*^9, 3.8045846881606755`*^9}, {
   3.8045848058405128`*^9, 3.8045848265317698`*^9}, {3.8045848635818563`*^9, 
   3.804584875512005*^9}, {3.8045850699892726`*^9, 3.804585073442424*^9}, {
   3.8045854965227118`*^9, 3.804585498857544*^9}, {3.804585774220763*^9, 
   3.8045857793436155`*^9}, {3.8045858191435003`*^9, 3.804585838830865*^9}, 
   3.804586110157668*^9, {3.806782164991398*^9, 3.8067821657024975`*^9}, {
   3.8071391182679005`*^9, 3.807139163729438*^9}, {3.807139208291351*^9, 
   3.807139289632963*^9}, {3.8071395718799253`*^9, 3.8071396079046125`*^9}, 
   3.8071402465150175`*^9, {3.8072204466081715`*^9, 3.8072204621296625`*^9}, {
   3.807266568089034*^9, 3.8072665686086426`*^9}, {3.8072667250242996`*^9, 
   3.807266725944871*^9}, {3.807266761423984*^9, 3.807266762586875*^9}, {
   3.8072667976296144`*^9, 3.807266803811083*^9}, {3.807267050805566*^9, 
   3.807267077701641*^9}, {3.807267121673046*^9, 3.8072671809106145`*^9}, {
   3.807267675344532*^9, 3.807267838727621*^9}, {3.8072683148878784`*^9, 
   3.807268378793965*^9}, {3.8072684262720013`*^9, 3.807268470806865*^9}, 
   3.8072685128244953`*^9, {3.807268596734125*^9, 3.807268723183916*^9}, {
   3.8072688030981627`*^9, 3.8072688302904425`*^9}, {3.8072688833784666`*^9, 
   3.8072689172069955`*^9}, {3.807268979004759*^9, 3.8072690552607927`*^9}, 
   3.8072691427558002`*^9, {3.807269216762883*^9, 3.8072692308921313`*^9}, {
   3.8072693181597414`*^9, 3.8072693434421296`*^9}, {3.8072693799853992`*^9, 
   3.807269505804921*^9}, {3.8072695390439906`*^9, 3.8072695393790936`*^9}, {
   3.8072695780497084`*^9, 3.8072695784267044`*^9}, {3.807540055512025*^9, 
   3.807540062303861*^9}, {3.8075401076226635`*^9, 3.8075401311843076`*^9}, 
   3.8075420137766075`*^9, 3.8075422299654446`*^9, {3.8075427904824286`*^9, 
   3.807542796991022*^9}, {3.807544203068986*^9, 3.8075442070443544`*^9}, {
   3.8075443630631075`*^9, 3.807544411661172*^9}, 3.8075444483181057`*^9, {
   3.8075445924546347`*^9, 3.8075446155508676`*^9}, 3.807553490213232*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"87574f49-9512-4c1b-9dd6-3e489fe520e5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","pdord",
   "\"Some of the functions have zero differential order, so the equations \
will be solved as a system of differential-algebraic equations.\"",2,73,14,
   23615943789034304619,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8072685136941714`*^9, 3.807268728646309*^9, 3.807268832423735*^9, 
   3.8072689260623155`*^9, 3.807269057566659*^9, 3.807269146444935*^9, 
   3.807269422823805*^9, 3.8072694779234467`*^9, 3.807269511768965*^9, 
   3.8072695524531307`*^9, 3.8072695824648685`*^9, 3.8075401371872864`*^9, 
   3.8075420151708794`*^9, 3.80754223093585*^9, 3.80754266369949*^9, 
   3.8075427979245253`*^9, {3.8075442077275276`*^9, 3.8075442174993963`*^9}, 
   3.807544412617581*^9, 3.807544511730519*^9, 3.807544618335422*^9, {
   3.8075535264912148`*^9, 3.807553541565898*^9}},
 CellLabel->
  "During evaluation of \
In[72]:=",ExpressionUUID->"5c9f52ff-dd51-45c4-a26d-26c25f4a83fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
63Xuhp7Nlx5LYQ4oEfnR7N8Ndnr+y9N4v7wq9LbsaTe4rS4YfMc83ODy8NOb
bjBl/Rz3wryNmuj2Or8bLmrH6chiNu2qMX1S0w0ZqrNtv/B9IwbmNPyZ3eD3
KErIFHPlxA75a+Pd8HBxzq0bx2tl3lj4MmcPbL4Q/NgCszP5E+uQfA+oz6Vt
VMfxThbp+CV3pAce6ZjlxeF8UCQFs9br98Bds+bLozhfWrscb8+4499bcDre
xfmU1t0q8amkB8KDr4b+h/XQ+uipodzFXri4GnbqRgX2h9hitfXOvcCnk8CO
xPo7/nJkC7d/L4gKe/bkY31mf9Ae7UnphcecT3/zY/3+zfNqbcrrBXeexxuO
lFFhc/HbotLqXrhTrhbsWorz+4cQ/mqsF+yfmJwbLca+1r735mMiG/L4Ti4f
xDzbYfaf3zo2bDzYZnT/B+7f/eHoqhwbIgncox24XmzGC3deOswGQ+Iecw3M
CXN9Qmf02PDlV5RSZhGuPw7xf2pX2OAcYTAkjZmXT5O5050NeyIkhF5/owKs
vVkufp8Na/1m1ypg9tzwOoMUzwYZj72Oxbg+M7fWR05nskHvXsEdS8w98ks+
PcVsmDhYViiIWXK/wpWmJjZcvzPsUVmI/VL94ulSNhs699wnP8Z8//i9vdlz
bGieC6u4gvnHmVzxV/x/wXf3ponjmKfPdS8/kvoL9eXnq/dhVrgkzPbd9xda
EqPu7cF8xfpYnbPmX5C9J3HxEOY456ufTS/8hccyZNtzmOvd4uO1nf7CTeKH
Oh/MJN+qu2p+fyEl6dWbj5iPBP9z2BnxFyzWPJufwnzz4XYD8ZS/oCK2uUEL
n/999DlVUt5f0Gip356GWTd0JS278i9o32rhFP72//kqXfIy9S+YNSg7BmOO
vn7+Ic8Q/i5XCyQcTzVr4krO0l8YFcu9GomZcf7DdXOhPnAbMPizC+fjzhnT
Lj7pPhgDPY1GzBX7csotT/RBbEz5C8D5dZI1Pyhg0geWj1s38pZQQWgDOS3f
rg9q5VkNdMwmHFbhQmF4vdSUyhSsn976teeKGvpAVGsrZGE9hpZ9/2nf3QfK
xKmxikoqKOY5qohO98GsnejBAeyHbi9KJZzW94O/Mh/7ZC0ViFddO9ab98Mh
84f2Rv/XO1/jVbehfig+/7LDiI79cMmXJbXcD2FaQ2nFDCo4jMsZ1AgNgO29
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
5uyjLrQX3XCPPbI9d1nuLJcCuSVf8hOQZZQjKv/rxXg3U9z9Cnns3JJmzz4K
/M1oE12F+68ZDOu7+pkCtdWRjceRIzn/pvu+YL5mam3qP7T4/f8JIbFvFHh6
K5q8D+3BGJtdazmM1xvwSXQj9+8+rpr4gwJMEVUhL7Tnzbxpgxc/MR8CyScE
0f4ci4lArQkKNBOIPkfQX/wlR88dn6JA1/xrRXmcP98uH82r+I35l9HfO418
8N6PFuk5CiQJsPeXoP83Etw/O85TAIYT1dIW/z7k0NBM5hIqFIcQNsRhPT/H
GpQUXU4F8t0b5rEYX3dCe4N+C1NB+6X2LBfjc6nOW6lnq6kQ8WLsniX2+ycC
/UV+r6WCXUN3XTT2Q5M3aL+l1lHhxvLE8Cqcr78SbZ+dlqHCkay2dzTsn5p7
Px/hbKJCWpTNbCXWe11ylLnXf1TY9GW0tw3ng4c7ZTSvKOP9N/YSRuO5nLIS
D+G/6lQQ2HRqGwXz7+KJqVuV2lQQLlGjiWC+itxKS/+iQ4WPqRlRs8gx/eqn
KLuowPwZG8HF/A7eHWbmuwc/96NciMb8nwhZo5FrSIU1fqXfjbA+eJQ9lnxt
TIULDlP2Qovvt+grphQtqPBXcsLyENaTDv3r3fstqaDSs6DPh/pgErbn6Vlr
KvhuPaSWgfyifKS0xoYKzp1bv6zBerTjS0La0H4q+JfGrrqC/ICxOZzhQIWq
UcJtYaxnKgbvD+1ywvOU5oT6It86ecz0mAsVJivGbF4iy9xmbC10pYKXdKsS
A/Uld7BG4r0bFaLWrf5sjcxi2QkuO0IFdUfC4XPIKYYLE5s8qMDaYVl1F1n4
VC7X0YsKd/zutb5BjrqzozHBB+378c6tPuQl376UPPTF5+nkHviCHMSOSR3x
p4LZnsI5LvK4kdxJsUAq1O2KjX+G7B7R7LYniAqSZ6KVriEP3PUyCT5BhfO+
sUtDkO2GCOrXQ6kQVrJWSQe5Xez22s6TVEgSVOMuQTY22SuwIoIKO46Oalbg
+Z6d/j2uHImfF5fGWSNr38v4eCCKCguns5dOor3uD2s0JMdQYVhz27dI5C3i
PTcfx1GxPgqfFkQuNQ2/OBaP9n/JWh2D9s+pajhonESFDEpp9gH0F/PHQeOw
ZCpM+/ptbER/Xli9Uq3kIvKnEtYq5Mgow5WCmVTIrj974g7Gw7/qX2Pql6nw
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
4emFBTYcW1bk44r8PzcKi4Y=
         "]]},
       Annotation[#, "Charting`Private`Tag$3685#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"yot [m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"yot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$3733#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]1 [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
g2rHOmDHe6peDKMrDS+i5icrgv6LFxmUNUMPEypmkCx7jvJeqn6kr6roq2+l
+it5S/j/84Lem3vS5/tm0KGlkSR1I6qelJyJDh+fQaU+44f26VDzm8r7+MnG
DHKnKEczKZJhOPDFMK3ALHpR9fn6Nj8Zrisxyz05NYs+CJrkf+ah5ov+Y0K9
xCySdMn2vryTmh+7GuNw+VnUutiVELJMgsoHRyYkns6irgPCLsxUPSzAnacY
bjuL/isbdEyg8oVzg1IK7ZtZJHI5u9G4gAQXr9uZ1wfNor3a16wN4kiQeKJ+
yrhgFolvVPxwcSYBff9j1fqyWZRC62wXZkMCvbDVDIkfs4jfYYp/wZwE+3cK
WtL2zKJXnBZTVg9IYFtZ1Gg8OosKRnJvftSk6pHXamL1M7PoVtk+Xo5bJPCd
ezUfRjeHVG+84qJFJBhJ2aNJu3MO8Qo1V4dS+ee64accY+45tIv9N88dMRKs
/WmykRCaQ9+OEJ6oHCeB2RehlZ8qc2ho5N+w5m5qPOZbEUF35lCf9i7D8B0k
COBtlrmjN4eC3GaOMTGRIO+l4/s+yznUn3fKMHOTqh8uNByfJ84hXHZ6dNck
EfYOx9blR8whenfmC4fHqHqEaP/CMWEOVXdaaBgNUfFJ5tY+6Yw5VBdOOTbW
RwSlOf6vDAVz6HfzMO+nbiLoRi89roU5JMOfLx9P5cPnaj9Y3tdQ4/nYqzdE
1Vdu25EZt5vm0AXns91KTVS+SbfW2tdJjd+sr/nXDyIk6dxc7xqcQwsTHAke
1Pm3hI0vOnpyDpXY32/2/kaE+uI5OaPFOSQmfNVqtZQI/aZVk8JbcwgWuuOW
vlL5Yf+HoGnGeXTB95dAJHWfseb5pZxd80jksMvsbur/++1v9Njvm0fbcv/x
m1Dti5w44H6Vfx559F6JLqfiNWqdEiIIz6Obzqq8l39T8d6jvKFSbB6padW0
jvVS+VYixMbv8jx6obk5oUkggd2gOa+a7DxaSudTYzhKrWeQdBnnrXkkL6mw
m4RJ8EGa27hdax59VbkpUkrVbhkzE2wfdecRQ/wDnrNUvP4WWZqlbzyPwu7x
mHq6Ued5FeLdE8/n0f2fX7kfBZJgbPPJ1l/7eXRKf4/f3TBq/VOvxmW6zKM4
5e97GT9S9ewDDkUb33nk5XOMQv+BBEd2jE5LBs+jjbc+LbPBJBArKiZthc+j
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
SesWj2VOhD8fRyo16dm4c4FLUpGrFNzvnz9EOZONVzoiniV4ScGxqD85Z5ty
8NCShpAt4VIwfW2PRZ0UD4tj2nKbo6Qg4PHVxw35POzqfYb6xwl/a5n//HX4
qJv4g8RIkYLVGgtvqVoJcPTNiosD+VIwSLlkSPXKRXmTdd12xVLALxfVujaa
i9aZ2361lEqB+n53v09+eXh+dfDG85VSwDne1pq6Lx97ubGB7FopYNnuc7/d
n4+i4xm8lHopWKqed5KxpQD35VW+C7wlBXsE79KL1E9jzrebUkN3pCAipsmh
OOU03rbuXL69XQreuXi/2TZ+Gr8Vvdzd2knYd9ivCzYVosrP0VjjJ1Kwc9He
8jUEX9nZ/j5f0SsFgi2qP1N/FmLMOclHii+I99LfbUm1KsJX2zUXzHknBYur
Pywv7SlC6YvG60NGpODnktw3LySL0WzuxoPvx6RAoSjn7dXFxejrtDN751cp
KH5zJWEQilFYc6Ch/bsUVKZdfmC3uxjb5h95bfZLCpIiZo6KBhTjtFuieOUf
KXAJiN/xM6YYF9dzlinPlYYdF5qmW9OLcYfsWcdscWkoqYu0NcotxsT9tZHz
pKVh/70r4VVnivHKjZaSI3LSwKfni1iUFeM76pP7IzRpILMClX5UFCP14Juv
TmxpcD71KPIlYa9t+cLqXCANbvyWut/nizGY/W/NmkXSwHAK7nYizisKInnV
aEjDmrP+5/4Ki/HRvYXpqtrS4NrXO/cz4c+fhcuucHWl4aakj+jSuGJcemTV
S3EDabC/fU3rZlAxunRunnvMWBoqqQXJn52LMVVtj9aYuTRkRasVB6wvxsaI
g/auIA23g46EeWsV4+iTY2GPLaUhpmBrwQ+ZYrSOE7bWbZUm+NCq3j6vCMOe
l41rOEiDcvAtu0/bi/C87jWacKc0GMqWCWwki1B0oNcjaq80DNh86PjgXYgG
Kz8kfd5HnPfHftCJUoieqd+r3X2kISD9dIfS1dPYYkr7a3mIiIfb6LupiQK0
tzr4oPiINIRE2u6kJhXgoEOLcPaYNFSXTOfXKRfgb78ggyvx0tDeFSizwzof
VxQ+8FHjSoOOpk3tpsRcLJmb+FTkGrF+ibt5SzMP9eVeFrvekAaL49m/Plvx
sFlxReD1W9Iw7CKdcbmLiy9WvpE41C4NvGjltRs+cpDqvWrNm37CVvp34sTi
HCw+zJFeNSgNqfee1GjezEbduNE+wVtpcIGREz2O2WiTKzxsNyYNDcrfzvRk
ZmHfuS9w8Ys0SAR2eAesyEKvWivS/O/SIKMeZKd7ORMTHnwvb56Vhp4mmThN
9wyk9m0+qiAiAzd+eN9uu52Oxe9L1h8VkwGpzxH/9S9NR91vv8jdkjIQFOhe
YlachjeJOC4jycDJ/rOx4wvS0Eaq/GIyVQYu6LzeO1OSin3Mf+EfmDLwPN/n
3cEVqeilttNqraIMaCiPv3Z4kILf9Sppp5Vl4M++J4oYkILxq0SHZtRkoPe0
qsNt+RQkb9pT5agpA3X1D+N9Hidj4Y7ayJqlMkDaIeWHGcm41FNyk8xyGeB/
ebr42a5kbAx0Z/oYysCDe65z23SS0Try2rs7pjIwr5pbu0w6GZ+dIl1WXiMD
tOl5C39+T8L93AMxketk4FOk/M3hj0k4WXxz83MrGeC1xxe1DydhXCVN3mCz
DIjHvz0c9DkJSY0HhzPsZGBiy4HZ2n9JWHCvpW50uwxEkEo+Bioko/ZT9nGr
3TKw55jCu+NrkrHhdZBtiQvxnuTdQ51+yWg1fk/xr7sMWOvq5a8oScaemYWf
nA7IACv2pbpgKBk9xY7UX/WVAVHNX/bJuin4ldKZQAmUgarbG2qunkjBGCW1
bQEhMmCiudli5YcUlNGJULp/VAasnvZ8yN+SinnGT8bUI2Xg7Gs3o/Qbqahp
qXk9LlYGrhQFKV1enoYbXJ9tN0mSgZcLF7/ftSIdzbitjybTZEDLlK60uZ3I
74MrmyqzZWDZrgMn9h3IQKYpx0I1XwZEflbU7avPxI90ex2ZKhlolJy7edop
G19ttjh/r1YGVL1jHfubs7ErXnfR8WsykFgV+MlFIwevf5VhTaMMPFS9YJc4
nYMpnffnvnlK1IN31jfbC1yMmXc9Oq9PBpqfmt7epcDDELPyGccBGchJqoc/
yTzcU37y8/1hGZCNvGa9zZuPSxPXv6j7JQNzol92GjCEqHJjxY7AvzKwccPi
bWrRQmRMLurSnCcLDcFhGSs/CPHv3jn3TsvIgrpdxOeq6lx8bN50+ZSyLLgM
799UrZqPd0MuLV2nLgv3deluNWH52FCRXzarKQvkS+6KHvfzsZgVcfrQClmw
3PpzPMizALm2vuylxrIgzDsa4XihAJNP7OYMm8vC7o7MQaXPBRgyZZS8Z4Ms
0Gpe2/X7nEYv7cWiTBtZKD++qQOLTqOzByO2y1YWyh5e5Nl1n0ZboejvlO2y
EL9cRylqTiGufzwVumG3LOyq/6K+SrsQTcTfffnnIgt279SVTtgV4tLV3Qcb
PWQhNSYyc0swwVehLR9CvWTBl1GUcSKtEOkXa9z1/GTh+t7R7SyCvyTeFr38
FCQLT2b55GtXCnGWnbmzNFQWFt6xuB/XUohf7WKeuB2ThVVvO5xT7hfih5MB
W+RjZMFgWkn0Q2chvmhyaXsaLwsHd4zFFz4oxEffN6/LOCULXpVDXS2thXhb
x7zJOk0WbvznOr7rRiHWe2qbzMsm1t/aWvhcKsQLufJ1TTxZyLfJZ/0SFmJR
l4RueJ4sfM+OH+HHFSJ3/kz5iiJiv1KAW4FHISatGVGbOCsLAdR7rHVrCjHq
yLPCsnJZ6F/97Mg1ZiEGX2qV96wkzmvauWfx2Gl0UiiVe14vCxeY3vHxSadR
s3NFJdyQhd6xxvYjO07jTHSLzYVbRP7D/Ut3Kp9G4dDgieh2Wahwbfq2gsif
DydAbaRTFpqpy6fW+hWg8YZZtH8iC4/HV/EEiwvwWbn8rNoLWUgUp09o8fPx
vHN5bvqgLMw93t3QYpOPR2SMjX++JfzfbB8V/CcP6cGOIR1jsiBakrj2omse
Ohhnfgz+IwsHlNq118nmouqnhSdfiJDgrVvg5/lXhfgt75KapTgJBC/F5/g7
CzHr7303lhwJVLwOi/mVCvBxq2hvkwoJDBdp7rpvysfCME7IEg0SRF7YZmX9
hoeBWqrkbC0SvNCd0I4/xUNSusXm/StI8PD5sMOZPi5ucYxokbIkwT7zt6KP
Eji4QFxyb6g1CTZV9jg6GnBw7JpgdmALCcwUdD6IfCD6U/Gq8eUdJCgWjm5f
Y5eDzg/X9yo4k6D3JN1qjkQOasV2hyS6kWDquLyN3Z1sbH/7pXKXNwmWOz/M
ubk2G4XcmM0tfiSQv9saUSKajd5Wsp+0g0kgE/M6vK8jC41m8k9yQ0kwf22w
lCc3C8UvaKv/DSfec+Dnd0uPLHy253qLdzQJlnDivZOWZ+F5Weu9T46ToL9i
cPdKsSw8euvZrNlJEpyK2i1f0pCJGw4dyCtNIRF6kBHwMCAT6WrfjUmZJOia
B16/tTLxfU98bxiHBEnWvpeMJzLwyknK4SEBCTbfNcjMuZaBiSbF5M0FJCgJ
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
YNUyk60TKcQFvrF1vZU0+MyU27/rkBA3fBl6I1FDAzHp0uYYIn6BRyxJq2pp
MN2uk3COiK/gv/PmQVdoYNrtT9+zVYh4XNK3pJ7I/+wcldtrCD2a8eiOxA0a
2F83rR9VEqI5ffk38yYa+Fta+9+VFeL+PI5S0C0aNChg/4v/BFh/fvex3jtE
v5jpq7wn9O3rpTfOS9yjwbvM+/s/tghQom5hj3k7Dfa/kN60pVKAzrfe6pZ0
0kBJ8uAmu3gB/n3u/z6wlwZTrrR9hmoCXOL2mFLynAY1ylHPS6QEaP9+uUVv
Pw3Sg1Os+r7xseTrdK75IA08ToVsar3FRyvJ43YSI4R/Hckph5z5mG7Gazwz
Q4Mn7ZoykTk8Ar/urBH9jwYvz2yLW3uMh1aHJm97/aFBygrVlfnuPPxbZvdA
Zy4d7i5c0oz6PHReH2OXIUqHz3PXaTfJ87B+8NLTr+J0sA1SMxXO42EgQ+rV
VWk6TMUtzpz7gosdNSbubBIdqrUruIUEvyze4v0+gkyHud0bN6+4wsX4EZ7P
AJUOsd2Z9++UcHEw/u64BYMOpqVWj3bncNFMaSq4hEUH7bmjzdPxXORfX/RD
VIEOVtcaxgpDuTjpaH/MewEd6m9En3Lz5qLt15g/95Xo0PxoE3MHwU8XUiuP
L11Eh4VPgl7E2nNRfMkrsUw1Opw91bd+wIqLnrelUr5p0IG/VpHrv4aLza6m
JEdNOryLTEhbZsxFhV/eOfXadHjvlLtOZTkXj3L5TPlldChevPuv5VIC7/Ra
8yL16FCw2ZVVoMlFvQdTSoPL6fBPIuqtxmIupnmpnoWVdKhrvvmIrMHFjyLb
lpw1ogNjQ2THEcK2PB17UcyUDpuOk+cylxD4alKl52NOBxWS7ZkRgj9nn76q
61hNxNtjh8XbZQRfB0mbLAM6yL/fmP6XmM+vSJndzFxHhxefZylGplwkn/eB
SUs6hH3XlkgALvqvFdx13EiHOTfbTd9Yc7H9Vav1tU2Ev27576wduKge/r1T
fgsdJH6tK21w4WIcTW1blC0dXq0LfVTpw8VXVdt6B+3pEPTjgvDJES6a2MQ5
rd1OhwMGr7VfJ3DxW9yAh/huOjg0HnsTT+TPdoHMsI8zHTak9pWI1BHxv2Z2
8IELHdLWLVpgfpeI92dBSJYHka8ijazrH4n47XFIUPCjQ+L69DXZZjzU/Rk3
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
         "]]},
       Annotation[#, "Charting`Private`Tag$3781#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Lambda]1\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Lambda]1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
zk2Lsj3g/vpKDwlDCu45uY7SoOIJBrt26oetpqBWOvMddyvx3qVezHvGFLRx
fPFjtMsT4ntnejORgpaCitu/srxAzdLWf74dBV32+DraL/OB/UJ5k1AH4nzb
Avnzx3zgV+K4fJsTBbUv9HCyyb7wqCpvKMOdgp+2z3vTMOML25Vfi8R5FPxi
nHPH+b0/PPudEDYvkoLHA5UYfq0CWMtysl0XTcG1t+//MFQUwkW9hVqtsRS8
rnQjsNNHCGnr2z6mb6Pg6WNeyw52COFzelHn20QKHmwTmaXNFoFP6eYKi2QK
julXK/w1EMHyXlqE2E4KDv+rPM09JoKiyRHn4F0UlM9cZpraJQJx2TqdlkwK
HhIq1M/8FsGAhXByZw4FnYcNRUNugWAtXPHkzT4KFobUpXASA6EqUbza/CAF
7VlaD5gnAmF31cUtc/Mp+HlqJ01uJBCmulK8go5QMJnXtOC9WBDwP7gZNhdR
8ONlczXjhUHQLqbBVj1Gwavdv3x/GwXBSuWf02klFDyrl/Sc6xYEJcadz1+f
oOCf2lG7AyFBIOVdUmd2isBL/SlZz/gg2BodXVxWTkE99/VHgzOD4NVey6Q5
5yjoW7Ng/q3cIHA4x+YFXqDg+hKJYt9jQXCj5eOapgoK+jSszTc5FQSqw7cV
VSopSM4x+RxM8PO+3wf/7aiioIE2Vf7JuSD4yVw3/KqayHd5Emk38T1Yb9Wd
tdcJPLfNebWL+P1DR+myE7UUbL8QL/OY2N9o/VDa7FsUlKLeVtlyOAhoZrO/
rbpNwXsD4hf9CL7/xFULjWyk4I+ooVNzkoKgZcrq+ZkmChrzB+LjNwXBsc71
9i9bKKjg7Su850fc73ROPbONgmzlyeX/rILAKfnycqd2CsZQXXS0dINgkffj
E7vuU7DW7vkfLw6hpzrfaPVdFJQV6G/M/RcIzyXYGV8fUtDQ16rt8xvivV4Z
TS95TMGg7oHhLXcDISg3daDoGQXnm32b750RCCabTjo97qOg+ZXL8r1BgUC3
vNso+YKCwXVufo8hEO5+lz4d/5KCNWsX8Q5MiaDkoTar8hUFxxudlVPuiyD+
rGvW+zcUdPeI7MIyESz2K9jsNUrUK+YoqcBBBDn1KgYrv1BQObo0glUgBLf0
1W3jc6jo+7UyuESXD0t4AasXzaNix5T64jWPeSBmkHKBP5+KSbas+KwYHlx7
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
vk0nPT9FfOa7dRYxFLSrtq8ox/v5ba9KzT5Cocrgk9zneP9MgxixXiyFlQsk
Zs3Ij6xpuU3icQq7K84uPoX8kdSBt9Nx2E+bJ200kN+s+WGpypMUehRCpR/q
c8cjUzF/msKVwvO9KyzFzOh0u3VzEoUNvZyvAv0/W8vzz6pUCmfLQ46XGmGt
5vQ2/QKFvL/cHWLfQ/wfo7VzL1EQzxjMLNJC/NHiH77LpVB4/dxn+e+I2YUJ
C+t9VyjcFtw8Vz/Ms4tD7/PriilUvqf+jcdjnnUW14skv1J42mwcd1zKM5PI
hHG7MgorMnZ/X1zOs5zXUynGFcjHyK39H17B/n7eJx2WIv+Nt7eVx/KsOy83
ZXcd8hmx42DkQfSHoECu+z4Fp7+PbPXE98Glzsaxh48prNcRCQsDeHa5pdIq
rxX73zLrgIcTz+Q/HhozbKegFXksasCeZ2affyJNekbhYOfFQYUNz4L0VMnq
3RTUo2a6bC15lttQEHhYjue117VsNkV8UrDVgIJCup74fCtB/CaTsdA+Cu//
fuGtsz7iddpq2pUUXIQbZrR0EX8/NdnzNYXZDzf6OesgPsEjsE5F4fC9R7c6
NRC/bo6V8yAFwbeqXwdmI15dOloyRGFQY87bKNSTvOqjNUtHKSjvwZKvpzim
iHVMvjiO85UiaFBhvhSw4YCFkxSi3G5m9Y2h3k/fEJ6apuAtbDUNHuVYfsWu
0ZkZCirV+omQEY79B521UyA=
         "]]},
       Annotation[#, "Charting`Private`Tag$3829#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]ot [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]ot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
NBWubnqtIMyc1KEUTODEPSMupq9XkMLnisC3SVBPfpEpkcpcQRqS3auz3QRW
3cGoPVSwghJvKSsJThL4nWPHWMS/FVRb9HTnuTUCn8debFTtK+hm8PwyLScZ
R8Ze+5Dev4K6UlO3u+8l40k6MdnbEzBeY/OTZAkyDqmu0aveXEF6Xz63cyqS
8Yh03JQn3Srae6Mx+6w6Gf8X7uQhu30VvbfKGebUJeM+I/6Pb/auIkPJKrGA
O2QsWzJ7QkN0FSnu/q511JmMn4mWVNBIrSKrufRhcw8yPjpnNWd1dhXp6x5Q
8g4m4ytJtj0dqqvovN8+ceYoMrY3dahSu7aK9uv5lFF/IONgPqecvBuraLGR
z+92IhmnNrkmHrFYRT8ehDKe+E7GdQGPwt/br6L/dp0UsftJxnNKnj47Hqyi
jI0bM9tyyZid2ueep/cqkqkVi2UpImOpbD/jef9V1Mh/K97yD4x/7+Vl0/BV
NJG/zXd/GYx/KAg3xqyi72okW7lKGH8oROJ80iqaO7mN7V01jP8unOdn+io6
wzRz6XotjK8dzXAwbxVJ7brmc6MOxt/xfin87yp6UKH/OAPMXv5hgLF2FRWY
v7TSA0s9+Vjn2raKFuTDe9Tg96+gpILx/lWUxR/T8BKeb7+UnKw/uYoer0VH
7dka/1tqdOXSKnJxVB5c/gfj3854hslrKIZ9d54wzL9OMMv5G+Ma8gtZ/Pm+
EMZvy721l2MN3bvNbn03B8YPKbwaxLuG0njeJodkwPhqJWeoD6yhlvjeb9tT
YHy6f5IOR9bQsWxivf8TjJ9fwT8gt4ZqXP7d44yB8Z1rWLTOrKHrd7j04sJh
/KMNayUX15Cv9EXFsAAYf6x5RFZrDUlxSQnMesP4H9qbPhquoQQaJukMNxiP
qz/Vzw4+z12UDjaD8aqH3q+5rqFcxuH3KTownu+Yv9WTNZSnYlF7UQ2evzZr
qRa2hlTdjpbtkIbf7yYL78iFz/uoA5JWCSz1if9VOMM6YouTb2Vyg3r7ppAH
I/s6silP6eq3hPvMc8DWdc86+pN9KKlGl8CpLw5d1D+8jl5lenfv/A/y77mj
JyqPryOu9/2kp9AfzJFkRLDCOkq7TKlBUD9I2clT9l5dR3oH9mYnkOD5Yqdn
Aw3W0cPWmSrrGRK27z/bTWW+jkKR0733EL9StS5m97uso1P5zjL2pSRcx6r+
+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
dA0=
         "]]},
       Annotation[#, "Charting`Private`Tag$3877#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]2 [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
+9z/YyLuo/8HtDtRng==
         "]]},
       Annotation[#, "Charting`Private`Tag$3925#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Lambda]2\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Lambda]2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwc2Xc8ld8fAPBrjyQjIxHZq7JnX+faM5vsrBCSvfeOhk2oJCtRkqzkCNlZ
CRVSUZIkFAn9zvl9//m+3q/POJ9znuc+9z467nzJ9DwpgUDYpCYQ8P/vWN1v
ShVPUCH8/z+W/8p2WOPv5jkBAiHDelpvUOVMOoVIVJ4fcpXj5+0lFZ0b/zKq
nMKRvSsu9fxRKX0VuXshLw7Zb8qamQKUvA2r+/c3Cdnj53UHenDzQ7BrrlMa
Ms1FRvnDYChEwc0xLxMQYk0j9X8cA/p/5Yhi/dkoTv9GV5EXDETLcvz+m4vi
LyRs9vhBb5LUcLpTIfJO+PFQUfBBl7XINu8OIBAFfp8LlAIl6SzUzx+Woni5
e3GdNHB8eThIsP8u8v0+sCgD5oyZjX7+LUc+Ij0qLw9mzjKQpThVA0KJHsXX
JGVQfOOQ70r4fUBwLL1Am3oa2L6jnzXJqQEEHrYTI/H/gbcOB5s4ex+g/Jdy
7k4ArEglyVrnPULznvv33lEVDL0iXznAVw8Ivltal7pUQU1gYmn7Q+TRq+0m
vGrAqzHhEH//Y9TvdZT+azWgd5asZ9KiAcUf3zkiog5Et+MjL39Ertt0rQ9V
B8uK8V9X/z5B6wkGh9BqgIG3JCV3UhtRvaWqp4EGuBcRZ2nO0oTP/9T9yxog
lZPkIFUpsmOfq0KnBvB4FtvVcrIZxYu7WH9rAB0HQrj3U2QepykjAU0g/C9G
glunBcU50teMNAF1yb/PYxPIGRqiNMGa4Asx5maiUysgSMTSJ+Rrgp4P+2by
q8hEcZX9x5qgIj6adjn8KTrPtf1Tg5ogmW+/o5iqDRDma09+mdEEbt1RIUY5
2LwDlF81gdb5vROkx5+hepP02B+aQIAyaqGhFtmRkGiypgnIK3cL3ZXaAaGD
TDH2myZY0I404ehFju0i5figCbqX/lK9NIMo38dAckwTlF2OaI+ZRya6l888
1QRquVFKN+Q6AMHYg0P2jiaoP/8sdz0S2XG5Sy5OE/DK7a3pdyHXldoP2mqC
LMr/DMppnqP6m0vLEpqAdCqyct8ImbAWXkDQBH6VbaRWecijByfeD2gAjWMx
8sUfkRl2nW6laQD2XFXv+ZOd6LyOnVPQ0AArB8jv8Ecg10mxj22pg474ntce
vcjEcyPXy9VBzp9U2lrmLrSfV/m3zqgDd1998PMcMuEAidiaGqB3GK0K20Ye
hV0fBdTAx4ms2Wca3ej8fHrut6iCRn0LJtJMZIbSDXZdVWCv+DYiTeQF6nez
7aUtEdQcXjAssulB+Q++lNacBrHpFQnvK5AJ5fxKhcrAjPRCM98GsqPgGaYE
JbDz4/vxmvRelN97z1tfAegObm22tfWh/HdPy4akAadaqwgJTT/yw7NVNVJg
rTnSQdMC2VEyT/6qJCioIOl7+R051vmpXulJ8DnuQNHcsUGUH57DRCUIWrdf
jvB6IceW7tXu8YFrlzLI3ZuQO/4685DyAll7Fp8fRkMo/3tqvzcnoJ6YKpUu
xj5U7vWSHczoFU6FLGEzrszps4BEBW5VQtxLZKEAJruDwOrhhyCNl9ja/0QV
qICYYFl16pFh5KUzz3xIwH6x2/uh89iHV69RbauMM4scZqzHji1K+/xNpSLt
m47FPrbCnFv6uEo4yYOoG3ojyMQvtnoj7YahvvWzedjkBfKuX9qP/5D6cvwT
Ni17cst6+079zsHHbKPIViFUpH/aXVdthV//h72msZC43z4s8kxtywW7p2jl
BglUOH/M/kgaNlXi03gyWFoSE6Jch61PobxDDulm5jPtJ7HPsWj9o4DBbGo1
Mbv/7z82nkkJ35ve7bnDO4bcceF+PSXUuUb+oUsHO75U0YUS1vef/7vog71s
b1FOATkpelmoc7FD43kjyGEyUVhC9Cn2vfiJz6RwLeKynsEHbF4DkSUCtGla
dvWhGkemTnPe3W3vXtePyTiB3Z3IaLrVfvJk7Y16M2yd6/yv1tr9ibT9Z0Kw
a34fpF1obzR1314qxCYYZ7N3t++4dgsltv/fkuzPJlVUQo6f5f6I7XvUj/O7
Svzl6ORWilf4fI1esGyr9BS9e2Ihgg2zF3lIgGFH7uErvtj1NBcU6UDW+Lq6
UA5y7DyzNAcjmFwwCuhswh6KklY6DBxoaMe393F+ZsLjdxzgomn09fNXJ9Dn
z1l3sIMf1Lm+ayc8Qia0dJo1CYLNYIXVognkjoIMj1ZhEFm0bjB+9DXqN+zR
9EEcXFlwowXVyDxKwy+7pEBNsFESe+8kiiueWWhRBmupNQ2Pl5EJV4fvTp0G
MkU0C4b0U+jzdP1z3vp/oA12qSVZIDvKpbEcIoIhagXC+idk43miBPo+YDia
e+oq1TT6vCcu+N1RA+Yn1h2ExZBL3rbrH1MHMyY1zxz8kee1/LPpNQCPK833
P7nIGb/f8sdpANdgN87cFmSeZ1y3f6DnTyFPxCDhDb5/DKuhJpCojap240d2
DK2hO64FAuHbNyQ6yB1/+DajtEDzmDzNTS9kiWCec5NaYPdTjoLCdWSGoywm
otqA+Pun+6t6ZJ6xwOEwbZBIbZTvM4lM9FrI79YGfRw1PTQ7OD/BXoNWB9Cd
oPldxvUW5Tt+TdPTAcbATYCoitzBT6KcpANyTLrM37kiM2w1yLfqgGkXnsTg
VOTYCrKArzqAMzjqMWMN8trCzFcmXeCY+vZjzQiyBGXoHTldUFYoz6Szget3
48vNdcFSTY7qJ9Z3aJ62bsqLukAM/vSNVkJe6+F/E6ML3CKvjLvZI2e8K9y4
ogtKFYVkjGKRY7U7SnJ0wezv57nyd5EJj2xe5OkC9ga7Le4e3I+E0iJbF5j7
bVlRf8XxEz2Gabrg+sms1rUDM+j53qLSGqELBr6Jc745icyTHlrurgso7/VG
PTdBLvG5zmeoC1TdnN/fC8QOt9U/pQsi+faIWfk43zJN7oAuaJ7PLw1vncGf
71XCRx2wcVOK3GUWmXh3rfexDjhp+/K8PmEW1ZdzPIzVAZ7sHr3SfMgE5eE3
OjpgPutmGvkFHIc1SYPagNNYYWUlHTlW4Lh+sjY4e/DVmdcPkDN4tmZOa4Ph
FGrGik1kR2uNrze1AI3mXf9rbHPo/ssJL9PRAhqkKhPBSsixuhm16Pv5aWRA
vnYsct38pLC0JvitSP/n1F3kjL5SylENILVVZcPeg9zBq3fEUwNU+c1xfT3w
HsUt6Qj56iDPTbcsLR/Z0Tw08o0qGOdboAhoRSYMveB2UwUHP0S7284iS/he
dftJBJ0nbFjyGOfRfi6N6JMTgULV9Wm3s8gd6mvPdE+DSUp7mnceyLEf4h7b
KoPA86JKRuHIPLV3uS8pgYe8L4rkb+L8mCSdIgUgeHPHgfoTzq8N26OTBd1/
e69HbuJ8egcPCRngbJPbsUbxAa3He+eglTS4ySbB+0b4A35+EkUbJYFS8J7p
GSXkjsbD5t8lwPTEQMJzfWTHWp+TohLgcNb5xXs+yESXhGbPE6B+TYr1WCzO
VzyTRCUOjIwI2lmZ2Jy2B+pEQRpdUVV4A3Ksy9Mb/MJA2MvjzeoLvN5/qunr
gqCnX5bWZQr3YydSjwgAkpRRL/0dnK9/m6yRDyhc3zdVOvgRxdtfs9byAp98
cSURHuRYPrapxuOg/LbNcXZp7IAYiVc8YKYylZpKCzuGcoOEBzDVNf74ZYVM
sJB6nHQM6DYvTC544XiuOo8YF4jtYGp/FY3j+X93N46Cxj5ieWcmtrpNxAcO
sDLqc+VRGc63iQ3YPAL43hQHlDRhu+0onTgCbD4M2FwfwPniyV3p7CDj67Zq
9CyOO959eogd9P4UFLm4huOHFG83s4H9P+YMdmSfULzN63kSG5AhTdjSY/2E
vw9WrYPZgBftozlFEewU0ozLbKCU6f0L4dPY5h9i29nANMfBWjYjXN+kzXuY
HRziU86hdMbxnaGQy+xAS+xCxK9AHH/Ek8h1BERK5zsvpGC3ZJ4ZOQIeK7/Q
fVWI8zPfzN7kAMvqGxKdtTi+VK6WehTwGBxnf9SB47tNV69yAktzo3+3X+H4
wvZEDRe4ahf1+dpnHO8ullo8Bna83zR40y2g6/1La2yYB0gGURXbciMTFfOt
rh4HHlGyCXpSON5qxGzBC15fzTQRtkKO9TWa+csH6PKgApsXjh8x13rDD9Ru
feemjMZxkebENgFQ90B39dNdHOfSTswSAmkjJOm3f+D+eaMXfMVAx9Qp/2uk
i2ieK8/feIuDrff21lEs2Ek8ph4ngOtai5CtMnbN6BWrUwAw+nezpiDPG38M
SZEEwUdK7lMU4vgUFfkfSVBzfDhrswbHwy9KekgBDilRp/FxZMdYbubT0sBY
yUrn+SJyR5upxW1pkKKWfKpuG9e3dCXuSYNN0497V499RnHq4Ip7MkDUlmEx
UhKZ6JFjsiUDnFxUhrw0kHlAvhGQBQVe3o9tzn7G94tkSZwsGA4oLNT1xPXl
YfrtsoAisi9OIQrXV0VI/ZIFpxN/ewhl4Pyo9GoBOeB/hd+Y9S4y4Yj/cSM5
cC/HVJ6iEdmxakHeTw4YpO5X1fUiz3fHnkiTA2sR1Rx2b3D9ALl3sRzIuWR5
heob7l988VulHFBwId2v38X1BlUPa+TAjOWDSw70X/D90/WiWg7E6Nl8oOFB
JjacUSuVA7wqlGZPJJFLHu6pZMuBHsn6bkd15A75kFdRcsBTwEGOzgLn2719
5yQH6I/QVjW54X7hV4SAHKinazziEoo8T/PfTRY5YEFwTqdPw/G1etlFWbC9
cXCvpQjHnzVt1cqC4i8tPudrcf+Ob5uXZAHx3fl5BojXl6rUFJMFC8OMpm2j
2KKfqeZlQGrnsy73j7h+NM/hmgwQb7wgy7yJHcjpKycDAm4+Z/dkW0L9lPIv
BEoD1syLaSwiyISDpA9ppUFr4pHdDiVslaOuRVKA1NvvPZsDcmzx1mSNJKg4
x2XSdQnZ8fTbHyckgZ5Zf6dPHI5nVp6slgCZSscrXpQhE31zb4icAjw0Y94B
33C/zrgvPqKgezdy7tgezg8iTTwpAjzWhI0H6L+ieTxOdC0JgYdTsdLHpZBj
C2lfGAkAlQqJneHQr/j39XzhV25gq56RIkq5jDzN/YqSHOzLnf7zmg3bvMnQ
eU+lVHTJM04E+wFH4Ot1lWVGouG0Afb8fD1/e3vo/I/DydnYoScyBskh50RR
smQ59orAShwN7OjV3p5pxKZmJmGjh1QPb7+Tfout/3zakxnmRRmVfuD5hp8/
5e7aR+E4h90AlQw2q0ikDBc81OyxfkIbezjL4gA3NLAI4jC3Qe4gXRtx5YGp
63Fq4RdxfKw3Ve44fHH9mmdJLDbZEPvOcUh6oiirJxuZyDPG+JAXqgxUtq5U
YPt/BxZ8MMK94SNT6zd8v/TeWOGDzeTPaRVf4nrREJkgfrh556XUuXm8XonN
6R/8UBK8tUnawPl+oj9sBKDPzOf4+5QryDSM+c0CsDpso3rsCDJRck+RWhB+
YSW82hLHhm8NdQUhfwPdXy4iMiG5JjRCEDqaHOHTMMN+YJ59SxAWrwroe7rh
fqav7tYLwjfpUgEZYcgdZhkvmwQhqwgoaryC84cXdB8IQtMe/a6Z2zh/S9Ip
TxBed7H6RvoYOznZzVcQDhHOM4v04PVvaT05LQipb/kpG73Blnpa+1cAaipH
uwSt4H7moT21AjB+Oi296B+ub70TaSYA24PyHz9n+o7iF95qf+eHf5nK3n0R
wGZvvxHBDxXq6sjoFbHvPZvb54OBZ56JyRggd8SORYfwwUfL/WY253BcR2du
kReKCny6W5GEHOt6yLb8OHTr/DE4VID9X5TEFg+8e253Y/0+rpfQNCXyQM5C
Fg0wjuvPdxyPQPfDIZ2FqWOr+PfQvff/WKFBjTndviRy7F3P78YsMFXXSYZf
E8e/ZB+9yQxJE8MTfb2wZ5h/CjPAze0afppm7HNCCmGkUDKvxeDUIDbp6D3F
/XYf6Z5AiznstaPtJVvtXy6+775D/gO/776Ir19s5z+wstLLhu37PKNpvN2x
avvwqih27HCB1xOVtx8ZzyuZYPMYve//qsIae+yqoyt2pLbauXUVMy6xJ8kh
2JQXZoq2VDJa5Wdr0rCFuRdyd1WGzmpQvLqJrefLUU4ANL+MT/ypw/ZqjnhH
CrSy7C24u7Gvvb37nRzAoeByr2Vsye+y5dQgFJS6KexhO3gOqdMC9jefs0mp
1/D5myt2HACBWZGbHozYg1Lz7AfBqD6TxQgHtrT3LX16IE5R9USWH/vzOM/Z
QyC1/T/W4hNr+P3upg0XA1gIeRVMKo/jw08PRTAAVckLUx5E7AQy2M0Abi3v
y4/oYo/I5+8wgJ27OQWyZrjeKPg9JyOwtBf9U2SH43WNq2KMoJ61w5rUDdvh
lrAwI6AftWj1uITze+TWGBmB5+VvHCOhOB6v6/KVAfSoxUXIxmMb0Oc+YAC8
u6wzRek43z6p2YkBRD+pOU2ai+MPBlnIGMBbH7WbHrewnXhpBA8BOeHpveFK
7I93R/joQfaHiw6yj7ALuSwIB8FaIRksasVeTA1vOwAMzG9wk3Zjz4oLWdMC
8t7u+eFJ7FW9P/JUwDHWRlV2Hvtf+oUoCtCmuHan6Cv2KdB8jwwE1hx18dj9
/3kylEf8U1nM9F8k4f2J7KFu8f6bipo+tZaHGDa5nZLnR5Vb5LcqhmWwjRdl
vMZULEP63Yu0sYkkn0on23vseJZlLmIbTGTL7bRXCQ2vujf/xL/XtKvaGCD5
Bxej4ec4/riNa4cROhb+eSgziB1iuSPDDI8cFPAjmcOOsM4pZYFp6xEbhWTr
yEsz+XYc8PN9RnOSg9hJhWLJR6Ha+coGd1Zs3yqbBk64MzUeJCOCPZdTfpIb
ej0T2X5piBwbRlHryQujvfdvZp3F/qr4VpAPZhx9pX7WEeefaMpc5oONYZHX
5/2QO+aNH6UKwD5hE9nycGRiN0h3FYTvpgTeXUjA+Y4d6npCkCA3IriRg+Ph
R3NkRSDz4t2hpps47l/4TFkUCuaE+kdWYBvEkZ0Rg/rrx9spmvH6HP3pGSdg
3oNAC/Z3OH6A8qeOJLxnr/t35hPy/H/Wmj8kYRvdsTt3VpBLvhWyZ0vBD569
K6L7yI4LCcZD0nDzSHHWD8oNFJ/ktj4nAyn7fRUaDiHzTN7cWpaB4kIcif8d
38B/37A5vSwLweSqCKkodoGOl70cNE3qGumRQiY+1T7VJwddZQqC0pWROzLP
DIvLw5BP3keNNXD+Hb4DpfIwLUv1+eEz2Mx0KaoKsFiV1f2NBbLje0WFY4rw
4doy3S0HXC/N91FTCXbehvXO7rj/rLVOpzJ8bZhjJeSL5w22Zin8Dy7teex/
C8Vxz/TrYwDu1PxXVheH43xns2VV4UE7Jr2gNLyfuw/XHqtBngNffihmI49y
KL9x0YBSrU9z94tw/ebbQQ0tqHkhQ7mrDM9HKfbFRgdasZ//kFKL8xer2Zr0
oGevYopBI57vV3il+xkYFUx/ghEiFwiOmCobwwyBT+Ove5H7BoJ8fpnA0omm
0MJR5LWsbd0FM/gk4cqxc2+Q6zoLGGgsYZ+UUzffR2QJ/j+nXK3g9wxahtoN
ZPb20og2e0ggvn/it4t8WlCA3c4RMv14bCtHsYmud7h944YTVDhjXwlZsXfn
2+3Ow3iaOpVxReQyh8C+CG+Y25y4kKeG3HfPk4foA6vcrdNs9ZH5t9f0/12C
L1+QTi7YIVdoTu00+MH5wKmIe+eRna9KU6X5w3W+muM+PsjTXlydNgGQPd7i
4lYMMkfWzfH5QLiVZOMTdhnZo5VW8GYQnLx87tLfLLzeTHe4ZjBsvOrqG1WM
zHOpknY6GOZmXvD7V47M4CnbYhYCA3N9/OMeInNe4//aFALNbwQEkLUgR4rP
2JKHQumboYFJncihohnsiqGQ6U5UENUQckOFuLVlKPxZFh98+TUyqWD7oF0o
HK1KCTnwHplYfoPBOBQ+rLkSenUJuSB887RMKLxWlxl2aB156UXaBbpQeLEh
LzzzL7K3X8X3tyHQoLkogpniFyAM7RCu3gmB4m0lkbn0yMV0a4VOIfBAR3kU
GzvywKA/C2cIXO6qjr5xHFnPIrFlLBgO9D6MOSqGTFdnxJwQDFNHWuK4VZBr
WIa83gZB8vcvk4RckZM1uZzPB8JPH8eT711EZnhiLkQaCDs/T6WIhSCvD/wd
LA6AcasfLp9KQ/b+L3F90B/u7/26Kl+HXHJwiueQH5wl+XutpQV591lCZq4v
bKMgoBsYuc/pdCmLLww/SJsFJpHZn2/XE3ygNeOh7OfvkQ1evqid8IYKLIdz
1L8iXzEQPHzDC25xHsvT3kXe3irdWfeAkzx8+f0UvwFB4ehaU6o7bOQXLtA/
hDz/QYT7kBsMFJcqNOJFXjp4KeO7M1xT1rp1Vge56vri+vJZOAL0b78xQXY8
YmUrZA4fqBuX2NoiG7+T/aZjDC/q25Se88H9zJ0iY4hw2canwj0HmchnFJqn
Cj6F5T0Imcf99gJyr7qB0IC3m2e/4n5258MaPAD9xWPKCuvIseOROm88gZJj
Re822RbKfxHwmv0SyNBqnA8TQk79lWlQGwAEiTuCNhLIGQRpw9pA9H2mclFJ
EVktYTfmXhD4It7zZ0cPOfx5fGxOCFBhnmSK9EEe8PQZFogAE3Qc1nYhyEvW
IZV/IoAnpcPt07HIbV+zPHoiQe6fRbG9TOTENeXfutFAdEPEf7YQeV5OL5YQ
AzpWLjY/u4ucA+nSH8aAlfe/NKKfIBd2H8mLiAXxbxTTHdqRCdpnZnpjAfur
qDGVXuQVMWFnhjjwYOg5G/co8ulUZXGLOKDeQ+Hwbxr3/2mjlhcHpqFu2fsP
yDXEmoev4oBPy9VluIwcdqgq/mA8KKxhCYndRb7P2HY3OB5IVFg/c6TYBoSe
wgu8FfGg5/ZNMlV65CSagaDxeGB344PucTbkshzzzr/x4GeWQAYJD/JJ2CDO
mwCSr1yY/CCMTF4C32kmAM7kWs5OSeQG7uFttwSgEyZ7L14dWUR89lRpApjz
D/vhbIB8Ted4dVsCCPB+JqtugUxX3mX6OgHcOqfZSeaO3CrPcoA0EchYX6Ze
uIR88bvTZdZEMGD60rA7FPnUCak/Iongl6bFu8Q0ZBmzdTnDRJAGbhw/n43n
Ta52OJcIeBRn3TWLkdcVLgr5JgID8fObFA+Qn3C/SMxMBB8F7il9bkQOUQ7N
Lk0EIdzfY3sg8uGjz2UbEkEpU9DBlLFtfP//FH+bCBToWszc3yJvm6bMrSaC
YYq9G9qfkHNINLbIk4DrP+K80ArygEJUHWcS+LOdKEj9C5nZNosolwSurfd5
L+0h688YvzVJAvwrdI/7KP8AQsvpxJpLScD4fQ64zI5sQNpxuz4JlKl7jJ8+
jlzFRqY5lQS2KpXPr4kg63+RyN1PAnp0h7bvSiF3BkpUCieDW74f084qI/9b
ay2xTAbrE0+4Dmggs5/hd76cDDQVL9e1GyDzGHAZdySDFRKJSQEHZMG3vC2K
KYDoRnbhjRvywZY4t8gUkD0w+ffKJWQmB83CrhTw+WT1NWIoMunti2QMqUAp
O+r4Ziyye6JnvHMquLZl3FB5GfmXvwBfWyr4aMuvbZuFPM5Ky3bsMpDr2HpD
X4T81vxCxeXL4DL/oHfnXeSTv/t//7sMZlJv/QuqQdYIbmdKTgMS3/2yRJ4g
D6QqKh5PB4kmmgKzz/D5HJ9Of50Opp+wN2f0IKd0autWXAHiHCt6GiPIHGq9
O7lXQUw0nN2aQrY2nsyvuAbGP2b53p9HTuRXKX1zHQhqu5Gd+4rPM+fIsYIM
EH5fMY9pHdn8xEaxRSZ4eeigSM8OcolYR75AFuAJnH8aRrYDYkPfPOGizgaB
048NT9DtoOeZQRzlbjboO53yYf4wirv4DL8m5IKjd2wCc7iQlc3yVVnzQOcF
ksK/J5HTpi4Z+BUA1uEJ8YfyqN6ixH/6yQ1wQaoKOhOR/8uRfUddBBj+Gi72
myBXBGjRTN0EDleKJQoCUf1u5EeVv3dA/dqlLv2oHUAk1T670lMKKCzULf8l
oXjJb82KrLughms5wi1/B3TcvVrLIlAOdh7I98q0on7xB2+qsFUBQ+YDNkud
yHcYomO6qsCdkLmVokFUT/4pxd39Hth89yjGaAL5ffJpUdJqoENMYiKbRX6u
XZ2RVQ2Ky6zKGxdR/wk+AXq2++AHtbiC5yqKP3w6pnXtPlC7+G+AawvFLzpc
pNm6D/LGxu3H/qF5jd2P6hnXgGXZirVE6r+g4zE6/xs14L/CsAQFRuT8e/XN
ozUgY9+AdeXIX0A0S9nz+F0DFpx57t3m/Qti6920CmhqgULvhrKZ2F9AqLaZ
7EO+ItY7TCmD3DfBm4vy568XOrWeRvnXwGzXSA2Q3ry4eVET9YuI+eSdWwPM
a/0+zhmi9UhPygFiDQh0Cxo1skL5LfHB1yfugxzusPYOJ2QPhvv1pvdBw3Rk
jaQXcvntawxPq8FEZmxhaSBa7+zT6wL01WBTLzGVORrZw0Er0eAeOEyeGpyY
gtZTmQ+cDK4CMs/SXX9loHrdE3dnr1YC8+Drpm6FyGSnzwRkVYDAU9nEqbvI
R3wYC5PKQcOdQs6WRtQvOLLJ9L+7QCb53kTkDIob319ZUyoG5qC28/siitdr
XXoddwMEbtfVOfxAvjnQPdKeBxo8m68QSXcBQav9ur9wJpAx6tUgF0Z2eKqR
fzEUmFMPSgVJIs803XlywwsEPh/m+ayETDzdvZmlDxqkJ3d7zyBHBp69958v
nFh5s6xwFtn4CNO1iDC4WT47fc8RWYqLnpw3DsqwLzakByBnd5ZXCl6G5mNL
pbuRuJ6gd/jZFRiYtpJxMRn5mKLWFdIMmKO+Fj13fRfEhtfI2kZlwobdDW+j
G8gWZQOWL7PgxJMtm45SZMLvfvAzG276/NWRrEH1qzekFZdy4GHhf3KlT1C8
psqx/1EulPlAKsAMkbWH7r49kwfNCymZE/tQ/mPmE0/b8mCgGS3JrzEU5xda
5vuXB3Po6H+cf4d87cHSAEs+bHjBODu5gPL3U8XoSfLhRDTLoPYqspf86uvn
eXBT/khL8xbKv5N+Kd86Dx7+yVkpQrIHYq9mB2sNoPWreXILaZEbqq5oseZC
cxf+hAOHkTVkhOyIOTCQU9gvkgs5M7Tzpn42zHktdu674B4g5HO9dVXOgg3X
Tp1xkEAu6VpTYc6EE9rSyiOKyGPffzyovQ43CfIiRHXk6ianNaarUCZAhYLX
Enn3w4nZjBRoLq62kXUO+aZL2mhjIgxc1PxAdgG571jbwddxsOHsmWeLEcgz
sU6fhEPhBIPJfcsk5Ml8kdYEf7jZb36j9xry/BWxZ/8uQNnTdkH37iCPypda
s2pAum+3qkKrkTOiDj4sIYKPNz68036M56W/QdFtDVp0+A+xteF62vWvXOdB
xpab2uduHKe2XnrlDdwq7gU9eYm8Obqzte8H/rNYqUqcRF6ofDKnH4Q+L6dm
zN7j/dwTsDYKBcv1fof4lpATyV5OUkeADqcGtfU1ZI3xvEuhUSCfYSvo+R9k
zrorY7digA9UvJdBuo/iTSz57bFAwydy5twB5JMHS3rT4gAHFzx06jCyz8xr
E1n0e2aQRH2fEzl45F0BjAd94RrBLwWQxw1/0Iqh3yMiKfeKTyL/GnjGE5aA
nvf9M17yyPNM8bb3E4B+Ch2DMhH5SqavWlcC4JUzUqfVRZ4xfHOuMwFsL2QG
vzFBZggkqlQngOHsiXtVNsgLIzfORyaAcjW22RAXZHq1LiulBBD505pB2xs5
/1NjwWI8MC0pVmcNQi64RDYVEw+Ejd4HL0YhUyQ4DdDGg397x6sbkpEtk1oo
UuPAZI3rbMJ15IG7YH87FtTYVjKYFSCTlqsynIsFCbTL6rx3kJt/M1CExACb
FvGQn/eQaU+dZ+SOBlRs9bPXnyL3ne3O0owAcy82Gc514/Ok/C3ZFwYaAuU1
Tr5E3i0wMVELBc7jbdVDc8j8OamH+INA29XeEBrSf+h87m/UW1wEWadp70/T
IncwfWY64AkufDOYq2RG7iPxtexwA6y64xpaAshrmmXP5ByBL/ksY4LOP/z3
7bYbh/4DWo+5NU1NsD/UsAgyAy5n59DjNrhf7HqstDQcgF/moBdyyY3dnHRj
WOIjynQ9EJmhPKZHzRKGcF3UdIhCljh45Oi0LeSPWL+/ew3ZzpbgruYCd0Rk
3w/mI4duNDb1nodj0yFMRSXIsRtZqac8YLTcXqhiPTInmYXFQ29osQhqqJ8i
H/b5yv/SB4rnxL+f6kKuO2b/wNMXvvlJpRX8Gs/XfZLLxB9G/gqfIH2P7Orb
oakRAHn+fHe+voTcdqs7QigQdu06/jy6jvz7wVW3P4HQjTARU/UX2cMqv7IZ
vS/G86UUkhKIhLaqMwKuwXCSzH7YkQqZc5Q9ZTcYViXlsQjRIZ9uE7SOD4Fh
VKN23xmQFcw1P/4KgXqXacoesyAnFvxwOBsKOQ+ofwvjwHHaBfbKULh6JVKK
yI1clVocvBgKIX1jGCU/slYtEwVzGMzI+NExJIxs/qkoSiIMOjOJUGefQG7m
OtmvEgZlcpyNrKWQAw1GSUAYpGAtzuOWR+an3YqUDoOT+a9nF5WRCza+mbCH
waojhwRqiMgrxnzfF0JheJGOt78msnNqfHxOKNTnin+soIfMYHPOVADNe/vp
zr4h8kyB8U5+CFzl+aX6wgx5J7Tvy2ow7Cg9eTndCrlw2vvjiWCYye8xamKP
LLP5oNI6CDpX3GFjd0ZW+TaTFRIIZYTfOcy54f3QBRldDYBTYobfPX2Rffkk
2O75QS5pGdrEBOSMMkGGKU+42nDRRC8VeWHttWicB+yQqyxguIosTH1Y+bAb
dFXiELqZh0ycFD286gjl2sx8XIrwfu0DftjbQSqVq09ESnC/MHLdO5awWpWg
0XgPue6qTOSaBozsUkyPfIDrowvFaCTgGc2AcbXHyASH8WFGQXCst+YITTO2
zkvJF+pgTeez40gbMrWXv+RFE9A5wF2V+xx5dOjKfV9rkG1g/cO2B3lt9s6j
PUcgZzwUtTSCvPlbZP+iJ6Aep3jxYALnmz6vuX0JvDEDdEFv8PVQAJnX/UHk
2fpCkk/IOsd/hMeFAsM33z70fkFe2nbdfBwBuG0FRK6tILc6+Fw4GAM6HQqa
OH7j/bzj7zuaAHLmx/bnd5CNE+1K0fvQeecDWpX/8P3EbvuTJAVQu0VPSNOQ
oPP7pPxJLh0YXnT9acCJTCeir3EqC0SXLc7t8iC7C4sdO5cNHr5zG6oRICHG
5mbrJefkAAa9C5V0p5BPTxVo0+eDcUEf+yFVlN+XHO0qVgxIHX7oRWohV1un
LQXcBNK5vgri+sjnNI6far0FcsgCmK+Yo3qvIM2ZmyXAYj6kX9+dhNjxx1Ax
cbcUJLP9afzrhfItgrpC0u6CRsPwsvu+KP+lP6GAuQywPouMORBOQiRej7oT
wFIOtDb3vJ9Go3xTfwGTq+UgRCzGxisBmalLvXi/HEzfiJMdvIL6f2O4Qj1U
AajHSPkiMlE/iraRSKFKoEidyCCWh+IfS8XIIyqBJ6DYf1uI6ld/8Zn3VILC
4ORvabeRadnExWmqwEAt1RulMpR/z1BTUr0K/F1I7VmuQvOIp/TTBlYBcU7a
hsJa1N/KoNqrqArYmaXf0atH+fYbs4wtVeBKGt31nUYU/yW//mKoCjx7fjWy
+imKU3k+s5msAqvb9J42HahfcRJ/7esqcEwi4yztC7Q+6cT63QH0vuDOqNna
j/L5D7WfelIFYm5lSXkOI7feIhjkVoG618w8HK9QvaSFCYNXFZinyz04MIXi
B36+KpKrAgwarH/DZpBvmN9h3K4EqhH5SyIf0DzfhvuKH1YC/3r2yTeLaL1a
l01f+0pQ+vVG1+VlZIenIwMklWCc5+gjxR/Iugoqa8UVgNSq+NbXDbSee5OF
xKkK4NJzK0x3D5nV5eMFpXKQs8ft/oeEFF2vk6QnG8pAt8wd83uUpEQC10GZ
FsEywH/37ikaBuTPbG/fb5eCzzFVi328yJ3OU6suJcBTsd5ERwdZsvY/zv5c
EPxt3KnSAPm1B+XHtBwQf3PDj9IEWegPVYJpNrhBIpvVbY2cconD4XcGKHts
UcrngEx+90xz5XVQdz64Pt4ZWc8lPibgKujrbxonemFb+l0mXgYTEdMfb19C
prwT1qSeAt6f+LO+H4B8+sq7VNsk8DtTiflZJPKrNxenBuMAqYYtH2cc8oDA
q7/8sYD+d4R0RBIyweuZgXAUELB5ZqZ4DZl0kG3bLQRI0M25FGQhd5fKh70I
BKfb9wO28pBjif+FGPgDHV/uRMsiZP7h1d+bl4A5LzHnyW1kiXmekGIv4Djh
WHa4DOc/76W45g68kuMaAqqQrXL6n/S6gPjlzgnJR8g8tE1mTDbgWvGnhYwn
eB69jjEWc1BoSP7rRwuyI3zyne8MqCAIUBi1I5fQ7e7/UwOP6jVZHnQiz48+
zXCVBm2ubgIHe3F96ZXSSVLQx5oi6z2ITBxpT/YRhRN9lZqDI7ie690tT2U4
H95nITqB5+P2nhLWgCviX89fnsaW9jPf04XbczTBSzPIvhu93kpGkDxTNFn7
A/K0ej/Fpgk8pK6fV7GI3GHcRk9lDjl+eVVQLCOnRlJLvLWAgpVXGl1XcVxY
jsfvLJSyru3pWsf9YLjziBVUOTA8ybuFTG3FSdy2hnrPVj/H/UVei+Z+sWoD
LS8d2pr/h+elvwSf2ELn4xJURHIy9Pysud1nZAcvvjJmu02NvTf3A9rB0CQ/
oX065PlLooI09jBRPkvenhGZkDm6dMIeZnyt125jQS4h3zKXsIfFRa/OHuVA
dszOkmeyh1VnNt3DjyHzrEVzvLaDDf8Oh77hRbY672EUbgc7HsmmKgghT9cs
b5PawUEXy4J8Mdw/mYHJ1xZOsoRU/T6FnKH5K7DTBn7szW+2kEFeEzsxu2MN
V8Oa+xoUkBlMTs1wWMMdsTfTzP/h9U96WwtaQcq5P0v+qtgHaMp5zkLGDI4/
Y5p4f0WRMnSWUHjT9kiGIbKOUu7PZ2bwbNucNZ0jzg+qeGF4BvYV5LMNuOL9
CVLetNWDSkHGr1Mu4HnMiEUW2vDYyU5jsgDsVPWHMqowgzaC/nkIzm92PGl3
GpJ+kR6KjkQmimr5+sjBz7fLtXeS8P4662UEBaFVpANFcxpyrDxPRBcrHLBi
6wq6juMLyQId8+2nZUdjpXOw9Z367jOCB4yXVX4WIHfQjkgSeQHPqurug5vY
Cp7B4mIga2CnxbsUW532UJskIK98HCJaiT1YzRQtC4ITvGWX7uP1+FbWXiqA
pXMCG+V1OL72U+KOMrA5PVfn8gTPf1zTZO0/MMSe73O8FV8/9ccHGgFQ+WUk
/r4d1zubXgghgrox6uXiLjyfnqn8EBHwPnheadOHr09a4ttpIshJCz/P/hKf
z9MEkZtEQOkuzTc5hmyctbLJRgSh6ivz2ZO4n4P/fJIKWOYuv2XyDnsy/JHE
aWC3a293aB6fnzZXgbAiGJ5m5Xi5gG2rPOQhC4hPRqbSvuL5nHcWViVAfWZq
rs4q3s85+65AIcDvo2pGuYH7LSQaSrKBPL0dhu4tPK/5aA7nt3ZqocfDcbs4
TgjKceGB4WTeVwAJObr+ut5rihJw5T2/3h4FMrEj/NiqAnRom6V6SoscG143
LKgKRwvyXoQeQp5Xe8sopgXVgowS5A7j/Jrrk3H6UPDk8/1HXMhVZALNV81g
AW142yVe5Okm+dz7lpD2i1T4CSEclyM8+Ibu59tlv6okkNv83t9xRQ8pxtSV
2+rI5B/z8ibcoeAqsdpeB1n4Gd961wVYMPDH/egZ5I7GQvkmLxiZ4PUpzxL3
ny0uLb0ENX4Zvr16Adnb06S+LgA2jlEV6Psg59kw+d4JhMIPOixoApC707f7
rwRBOnepscRIZA5RO2nDEBit/u2aWhw+j94naryhcI27zICQTI5/n/rMraD3
92mWvojryII2KYUu4fC4hE/VUjbev9XmMlkE9EnpSbUoQF5QOPCkMAK2zR27
0FmMHBjY9VkoEtLIheieuoNMuBO9VB0JLa+OiBSXI/vqTLfyRsGyBSFammpk
pk+rVdei4E/l2OWgB8gn4THV1Siokj098LEe+UFxjp5qNExflrhv1IS8+Sm9
LSUaTqteTm97ive/uNj4PBoK3vjgJdKBPHf4XcSPaBiwpmiQ141s8zvDkzEG
dmhniZP1I3u89NgRioH0t5fpfF8ip5bENUnHQNvfat9nxpCXUpK5ZGPQ863o
pe4kzjdt/SEWA3+VbdQ2vkVOlJz7xxYD1Xb1r/G9R67Zu+z4JxpmmJX5ZHzC
53M4++xoNJyt3jXc+4Lcfvax6c1oKEpqccpzBblsn2bOMRqGWtcemlpD9gw7
UXw0Gr6oo1hT/4XMb5UChqMgE7XDaN0ffH+odSSGRcFz5xrruPaRS/dYTx6L
gjWN9JlppBTo8zFl9K8tEmqdhyauB5CvVVCfW46A2W1sUmOHkKsrrgqFRcB5
Zl8mlcPIrNPxlOj6RXTyvGLjQqa2DciiCYd9R8IeJx5HDhQb5UwJg6x+Y9k/
BZCZBtwukoTBOu5488GTyITeEs7VELgQ+el1NBHZ8dvXvbogaChfMb3ogtx9
M0Ljpy/krRGbe1yNHDs9vCRmDSdPcHrHPET2TRbfJFjCyw/pdvQa8Px3Hsy/
NIVr9d9ZPj5DNiZ5wl2sA9tbHp5hGMP1VOMvA5mAda/0M+8tvJ6s4RSpPaDT
5ddX2EUOZcpUVnEEHQOH35CRUBIJ7Hy5RjtOQHD412YhLfJ0RA6j93mwOdEk
3s+FHKmZoUbuDaosq1pzeJFH1+cjci4C2+kCHUch5MPt4kMcl0DnuzDXLQlk
/m5tLnI/EGzvud4pixw8Su7Q5AdE3tvEXlNCrsgqzHL1BxkflYsFNJA1RPO+
VAUADVdx0Z86yDOKDEUqgWBrkbO57QyyFfuK+WAgqHY/qJVqijx881qbYRBw
+Lr3yuwszp+/db0vCDB5rTpx2yFvg51ihWDwYmXux7IjckZQRcetYBDqMxLV
eB6ZSfH4h51gIL4GD8R7IocPki8ZhIB5v7obZy4hF/p1XMwJAdkbJUJHApEL
nif8Gg0BWkGZTxZC8f5KdoRIQ8HO7zj1uijkyavOg0Kh4EGo/1hEPHLfzdxn
qqHAacf5nHYKsmh80A+jUHA40uw70xXkhaTzTqahoG9PPWIuAzm0LY1HNxRE
xsjQVOciN/r1aMiEglMkAvlBhciBd0/+YA4FH+NZBFRvI//+o220FALyyCkf
05Uhs8Z25D8KAXrJv4nTVcg5di77l0LAHtWX4bu1yHpLxyBfCKi7PGV3qR6f
B0fc0ZfBwPVA37JSEz7PKEMb72DAfrU5lLINuXiTqpckGAzS36Mc70CW04x+
dDUISDGl8V4YQH4w3m+SFggWs8PrZEaQk9OrWv4GgAIWLxXCBLLC6trp8wHg
H7uBTf4sctbu5yk+f8BknHjN4CNy4oHw4Cg/wJ/S1knyBRk9nMTHfYHOL3Ex
7zV8/dhv35r1AVljB3eJZFTo/vBn4CC5AMqotSR+UyGXLD+9H+0OmkC06306
ZOpJ0b2d82CmdnWIhRXZ49xTqd/OQCBt5OayMHKz6oaksA1QeE41fvsEMkMu
c6DRWaC3DSgtpJAlWEaOxpsDH7c6H6iMTCy6r8VpCGJvLpUGEnF+mO3AWx2Q
PcEzJaKJPG9V+v65OmhWywQ5hniefIECMRkwENYfoGuG6/OzjdgFwWwdSdX+
WWSCI/WyCykg5fZnuOCE4y86OYTF4WHLao1jbjiuU8DVJAsFr34MfeWJ+4tR
Veydhvp/TT/8F4jzB1nST2hCB6l0lo1Q5NjGb2bSOtD3QpduVRRyh/63AyT6
ML7kb5R9PHLdacPreWdgzpR0PVMK7rfxwGbTCFbQe3/uTUdOvS5ed9AEtmiW
cURlIPtejAqgNIVDkTOGUrm4vuiT/KIpnHt8OOHLDSr8vDEfqzaDa8sGTcW3
8Lz/5NbOmkMy3qRvJnfx+W1Za6+YQ1brZ9xUVXje3fBsdwsonPHLrK0Gn5/8
44V+C6jUeyLV7xFy6MitZGZLaLB/vk2wETnjcPaqhiV0kL219q4V12vs1jpY
Qj/vSf5MiPOP1rg7WcLEu/TWWt14v7/C+s5Ywry3Wlf/9uH92XjE8VvCKsaY
53Uv8Xy1GuqfLWCrTtOv8+M4/iW/LdsCDsX8EDk6hTxas1R8wgK+bxRyGH2H
vNRjeLXBHK5/P5eVNI/jhkonRMwhuUBBj9IisvBYJtMVM8hqN7rz4yveTzfZ
wKwpFMmmPlW+itcbDJ86ZgpPDxBdbDbweRjWNhqZQEOSsPxD23h+x+53vsbQ
UeHRYPcuPs83dB4URtD/0td/YSTU+PcWQf/AGZg/a+2xQIvMk9o6+kIHJl6X
hDqHkDvOfjpdpQX9VWlYa5mp8feHAQjTgIblzV1BnMjzT+luTwNIfpGNm+ok
7kduQ9YmDP13J16LmGBrtO7e+A84PqgRv2aBLbF60V0VnHFMTFi3RmbYstDd
VQfC3dKST52RS7rzDjHrAtbgA6nc7sjEJFWhHH1ALvxpLsELx8Pyjx00BO/T
s64YBCLX/R239zIBQ/95fqoLxXHZNu8MU9D6Q1WJJQpZJ2GB4b4ZyDP7+WU2
Cc97+/qpdguQSNGvopaG9zdiU/vEEvg1leRWXMPzLbk/KjkLDI4aq1/Kx/2G
1bKMrYHSS6HCV0XI06kpSiw2QCjm35p8CfJ2wq7kkA04LDmlXVyGnCE6NhRg
C0g/PbhFuIfsGzjaTmsH1nKSf7nW4vrLDkcy7MCcloNB/yPkvi1aGTJ7MLQt
e/dEIz5/Ad4SF3vQUn1wJ7MVmb1b6egje1Bht2j8ux2fV977pG/2IIf+WaVN
Fz6fMsFZJgcQ35Gz396L5+/alBZyAL7+3hZ8Q3h/THMPhR2AA79GTcoocmjz
yTA2B6A/eZRsZQJ5TcTl1IY9UEjdsDZ+gzyaym/41B4IKg3WNcxiv1hLv2QP
Dq+UUh35iPNPrw8fsgckt8Idoj4jSxyz4Cu2A6tGpk8+LOP1FsceH7YDMySi
dFo/8PlsDHSF2YKBxyQu1Rt4vsfPqwdtQPP5Ny302/g89DNHaW1ABdsjhoBd
5FTyqGp5a5Ddn+o+RaBB650yaza1ArERju3KFMjNaaZpdmeBzwkFlhIaZOO4
qRELS6CX+aXTgwk5w1Mr5Yg5UFCHR16yIqdqmjgsmgKBX3m+kkeRdWK+Btw1
AQRrrWM7fMjE7XGZ9TPAXLaR95kwMs8Af9ZnPVDFKCgUewJ5njRc4Lk2MB6g
kKCURyaIuUyeUgW3lV+oMulhV/kIOXGAdTZZrdeG2H2+exbz7VqbZXoFZsix
nlm/Mo7B1ZpEs2P2ON6pU7IiC1WOaZwX9cXzBmj4cenCrJ3HF74H4vVt1nqu
G8DPk3w+dWF4vgH++TUjeO06WYhcArKCNMcrJTP40Ssg4k8K7rc8Qz9oDuV0
PsW0XUFmUBSwNLKEs4SuVLU8vP6TOGlpaygxK3WVogifR1dla5YNTGwpzey7
jbz0KT5m0RZO5zLlpZchO36UCROxh+L+8YWG9/D6VtlU9g4w1nD9FuMDXM9C
zh1zDk6IOt+dqEcu836Ure0IIz+p1ti0IRfkKIqedoKj8FEd13M8D/fLmSon
yF98/Mn8C2T+Ny9b6JxhaGhmy90B5FAnWRIPZzhkTtLuNoL3J3lyr9UZ8kj6
dYpM4PoLp1MpXGDgwQ89K9PIvimy1NousO+r8eDDWeSOoyI8MS7waE/HiP9H
5AnO1nu1LtCnVGJC9guuZ7WoHHeBndEl09vf8HlMeSuuukBWW4bZp2v4/nrJ
mEdwhZ7ysR+if+HrrRhKSusK25nXFlV3kEvu/HmJzLR2bpn8H97fvIYhmSt0
GxpZ7SWjRe+LcUOvN1xgaxXYSKNGJvZsusy4QPqkh1tnDiJreOvPtrlAZyfu
XQYmWvz3rAaNXBfY+N91wgQrMk8O8+PzLpCW4x95/lHkOmoH45Mu0OG3D40N
D/KafKjhD2dYPz53kEsAOVXMbLHKGVI+NGSaF8HrvaM0tnWG1untrHdPIoeG
1g9QOsMa95NH3aSRR4k/Mu47QYLGLW4RBWTfcY4ZXSdYtRsl/FAVueDmIdpA
R7g7/V3cXwvZI/amB8ERGj+xl5TVR2aPk46kPwe3L/6n9NQcr5fiRUprD4Ve
GDidsMbzMm+u0NpBS0671Nv2yAz9UipktrBhIHwywQ3nJ4aMvbWCfkLN/gah
yBJ9t6ulzOHyvNT92SK8vxaOVnINeERBbdyoBLkkYaPFShXqXDf587wMO2lb
3vw/WPGfr3ZFLT6v4PKMIinoUlj7yQciE0ZXX5mQg6yfbbQfurA/bnmsHwOd
OkOSZn3Isebikv0igGdrOUZ+DLlDU2yYWR7MmAlzEj7h88mdfP2fJjhwX17d
/wuehy2QKUkbKJFqey58w/P65pA/1QUFdeeb+zaRHWln6X6eAb1UQe+V/uD9
cfpkrxmB3w6JlLV7+LwCuF6uGgOLg3fNMykPoLjHjUBoChJd6yPIDiBbDbTV
5JuBhqfPS4MOHcB/vyivcTEHn5jG+r8wI9d9N27itQBMnvNr1uzIoz5LOhMW
QPX5D7YhTuRQzs0DoZbAl/2fispxZMeHnC8PngW3L9G71QkgS0gcC8w9C4Z7
uK7yiiKvUabv0VuBPa4TDTknkfvs/wSFWwHxoNPvKKXxekZBv6esgN2QPmmY
PPISF1mGkDVI57MV+aaM4+v3+j2sQWu4p7E9Ecftvh0tsgbLY2EhIxrIvi83
pNqtwRGRy7dUdZHZYww/jVkDndiCF4/P4P2fOnZ80hqETFWuCJhizzj+GbAG
FSebmAssse8/uFJnDV4n9SjR2uLzyeI8kGINyGdfO0WeQ64qp35kaA2kZRZT
V11wvmRxN5U1cE7ffOjogeeR6cqutwJZH8mmxr2RjXeCLxlZgeeKzPsafvg8
/OrK584CYy3PwZIgZIa0OX6Xs2DO9HnBbhhyRwSb+DtL4H2O3c0qGllhw+Sw
tiXY8bok3RCPzOP/S7HSAqSG9hAYUvB5ZpPs/jUHrElcw17pyDpzV59qmgOp
W4MefDl4fcEX7S2moKOaVy6mAFk4sXRgwQQYNoWRvStG3m695U5pAjxHhW5l
lePrp28Y5WQISkkTX5E04fr+7l1/LSBx6F2J/VN8f7QscpzTAO1HpXxaIDKB
3jVMXQ28lZmn9uvD81NFya0pAyb30yrzb3Bc8lFMHT9IGNysat9FLrmhwXdD
HjJN6wdzkNChOOePJ7nKsGShVD2YAnv7QH4sgG17xnMn6Onw+zxQSFGHerRV
9y8zIc/b0TFYaMJp1n+hi6w4P8zwG5M23DxVy3yTG8czIsXs9GD8afIP23zY
Px9uf9aHDLq2D8yFkTssr0Q5noHizjS6dJLIscx1wgzGsNXHkdVDFplHI7Lg
sTHUiWj61KWI66svBBqaQNec89ERarh+fVDB3RSul7TpT2kh12k5ci+Ywtha
5iPS+shVXtMOlmaQvtXz8zUjZAmPxC/PzGBxz/PHy2bIa74uLzjMoegr9jgt
K+TQiDNHLprD5veXDEvt8H6fFjE/MYdaKz1H9x1x/w3StXVzOLHN9dX6PLJv
sPG6oAV0pghqfHIBz38gwsHEAq4xDiUw+uB51QxY/S1g9DE+k4v+eL0hp5FU
C0gnFn6sPxj3/3bULdcCFsqPfeOPQC6pdX6dj95PNIRbYmOQHS3en8ywgI3G
MckzCbh+/3dOtAXUtJ80U0hFHp1nlnNB7y85L4bXr2CznW1WsoAnBxt0azPx
fskcdKksIC9pWbd7Hu7P6a3cj96HFLMBbxEyMaj2Y6w5pPWNb525jdx3WOTK
SXP4r8JPNr8M74e0KnzcDG7OOtaZ3MP9Ajg3vM3g0mFjMboHOD+/QnnfFM7o
g4qeenwe7KKFyaZwNP7k8bgm7FOxZuj9rWWNju13B74/tF/PrxjDB0K7mXUv
cD9fJxlzY1jq8I3OawCfVxxPl7sRTBvqJ51/hfP1BpZbDWA0WUtU4TT2c3Jn
E33or1S1bT6L5xtrJpvVhbZVyav9n/H1EdLon9KC4onqbx//wX46kHyRCEeU
nz1K4T6I/z2kR5OcFXb714ir8WPPWbBvEGDzvaLKXWHsPGjzekOlhC38pp8U
ciyt1UIIN3qXvsAuLo/jaskr6oLgcpJV9mdlZCIJGKsXB/4bcpdtNf/f3+9/
HZx3PFYNFMepyN4h2Tt7P+ZzH3tmhSRlVSrCK5VKkkqSMlOpEEJLUqmQQ2ZC
IqEQkpkyMkvee/rz+/md8Tvn3ucOHloStIi9CrLr+G1IrhT7cjiWQnj4bDjV
ao/6gde7/PUJ03ezYebuqG+uOdJOELqMX3+uepLcP8lXTD4/Khm1HSj1IVlc
yDbY34Tgu1/krRrAjj9vVZu/b0YwDWZ+HgtGfwmFmSXmxB/BBLfcMNRZ3q4U
WhBTDpHvdx0j2fv6g7IUS+JbzEG7jZEkc0lkz/lZEZ9eeda3R2P/9IciYtZE
yy9bk8vnkef2jtVYE68VDV5ZxaNfQzbC1YYo8VXQXZuE9TOdFVttiHvXNz55
dQX13ued2rZEZiuTSng69qsaPRNjS6SuXyzQyET/7PLar22JWOqI1GQO6n/G
V0ZsiYjDHzPyC/7tw094wZYIeVC70fchyVMZenI/bYndX5+mChcj5wosvrMl
tgvlcnaWYH7G5pvXbQn5Jo2HtDLcl8IxeWdbYvFklc09IDlLi35h3oZoUHUc
5a1Bdqv1jLUhrg30nTvZgH5yK8oZbYh9KQelRpqw/3Te2VBrgmL+p9LxPeoP
/so2WRGMC3G7SjtILrrLwshnRXws2PhH6hP29+6OtbEk8jwKrl/qw+P/yVAi
xII4zEahLAxiva+e1ufMCb4Ql9DGCZLVrJTso0yJIYmvnFpTJLfmbNQlj+eT
9v8e3vqF8ew5bwhjwpmSMBqygvUey25ONCIkx0RiPtFzkMcjSL5pWp+YTn8g
ZcZIMh3r1VoDXSLx75tdApwkiy/atKZoEO9q13W8Eic56mK+upEQYedyvIrF
DPNHd+xj0QRhRmavMCuSadw5+6k6MPH86p9eO6x3zCDpgB7EbXpGeexKsjf/
K5k8AhoGfz7c5o/c3VfZaA7XUiNtqwIwXvI7p54l+FuwjymEkMxFd2E1wwoY
7ylI/w3H+FH6d7a28HHHyyr/kyQnHnxWnmgHeexWXu9PkzylMKH3ZguY/7cn
PTeOA++nz8eZHYFP6heFI4Hk8IHfI8mOMPQhuuNoCslqXZejNjjB0xjuQwNX
SbaKF3yb5ARndbO4bG+in4nrQ+udwWVcpfBpFslMqx6njjqD1M1XtqJ3SO7X
Fpz6Qt4fttiNnb+L9R8/A9pWeL36KWb6IdYzlrlzfSskP94vvaMY9+O5fGx8
K/j4LVbVlKDfV/0ami6gtuG8l0oZySHPt3cfcgG6+g0rVwFZzjbmgQu0huem
09eQvO+3265eF8hU0NQNaCC5dd3ly4yuENRT1fGhCY/HlISNvCtQLzseor7H
/OCmlyauEHbgaAXjR+x3nHfIzRXuWWQwv/tEsjyz66yPK/RL1rpc/YL7PtLc
QF7vN6xOZHoN4bzJM7s9XcHmM8+E3BjJgrva+mxdIeq5ns7UJMkFpjK7NMj7
R4r36RczJGeJ8vJzucL34PNNUQsYvxRi/M0FJO0KBaz/4H6MJsWKXcBdvsOX
m56TPP8FGX4dcYHL6/487GYguYuHaYncR02/5NJtFpJDRv22j22F5XJrswOc
JLsfFja9uhXUrockaPCRzBVzdtRoK9xwqpCpFiGZlhSqf4S8Pyh/C7koSfKL
b7edmZyBkYWtfKscyVE8qn9SnCD09XbnITWS+1/ea7vmCDaac5EMZiQ7jlTu
qLKDKE7hxmYrrKdQZJFgCyUTJhvStpBMp1o97moDErmJ92W3YT33+q3vLGGR
T6nL8gDWez+8K8IEVKadpbiC0X9v68gmY9jdfCyo6xDmW6+ZCyXg3bn6dftP
Yr6+qdmIHuTN+6rHJSJvbh/sUYaetgsRzldIrnTyzj4sDzyPiuqF0jH/RS5F
UAoi/f/uvJ+DHBb6i4MbXLuuxzWVIF8sTjrHT8Q9rexILcN60gzLxWJEZeKI
+M5KZOEP4VbShJK19vPJNzjfiz3PHioRvjKea0paMP/CzJKTGnGN/syWyPZ/
esVrigaxrrT1K0cvyeKOaWkl2oR+2oJK5wDGP7eytKUQIaGixzOHMf7y65oq
XSLP3rzWfwL1T1/2bdQnPisEcqlNoc44NOpkQHCtT9mx+AtZOo0aYEhYfH2Z
V7lEclYOx7U9RkQE9E/H/sV9flywNqYS3c1nMgrouUj/Nz2f/aUSufwGV+nX
kdy/wd4pnSCCvGYSPBhJ9lboEGfF/89zN/YJE8k0jqhqXRqxZtr7NBsryeKU
yWZXGtGkJ3h8Dzvm/whQ9KURV6PfhVZwoq4mO76TRvi+jQkQ4CGZLnlJ05pG
KPFRd4fwkVxUeMpCmkbMe855vuHHftpOvX0EUXXngavkRvRXcoLFjSDif/jZ
n9iE+sb2d4VUwo2yyfKDCNYvz70zZkSIR7URyuJYP3dghtGIGG+4oBsjiZyk
YbrekHjKbaz+RZrkyuIY6oQ+ccpjcbOuHNY7FJf1RI+wyXkkmbQZ4/1eaPno
Enzf924aV8R5U0++/6VDFJzsYLuphvp1uuz3mkRoXTzDnAbW6yEyhTUII06z
v1u00e9/ty3J492WVfxzVQ/5cHn7X3ni5tj+UXdDrGe7eH5JmvDXkBh4TEX9
W6jiR3HiT3VCm58p1i8p+BXJRciMBD6rt0MO4dYe54UpVelCcQdkyZimnSJQ
Gv4575gT8kluxkNSYM9ic03RDf1cWypYqwzhynInErzweHC2lsxQwORI36FR
H+zXR+9iog/scCXQeDfmF4tWXTSEbMd1u2b3kZxVrKdzjgZvDw3QtoVivWcO
tq/MIK38ml5RGOaLjUyUmIM3g6MG81GSuUL/nMq3gF9pFVJlJzCfcoP1oBVU
fDkszBeJx2en2XoTa7ggr7zhYBTWi7w0y24DoqU3GMXOkZzY5bPmgi2Mrtm6
evQ8yVN0Z0a17eCJLcti6wU8PvJnn30knydTq6Y2x2P99EGGgC1g1Rs+Fn2Z
5BBi9v7MFuCRVRv8nEiyWoJbzkF76Aka+aSVgvt+e4Sxxx7ynme0X7qC84qI
MlId4D86t6bhqyQ71o18TXGAe4w73QTSsd7rBw7dDjDItrvf8ibm375vyuII
QrwBB8IzSJb/71KspCM4bwz9VZCF/ntOmGs7QpzYscjubJIF69b5mDjCa5ko
JpY7JHc1BLdbO8Ky4vlk/XwufP7el23rCBoal4UD7uJ+DO/3WjrCAd0reTfu
47wLB25Syedr6k21pofoT8T5t6ojfDLLKf3ziOTWjG4hYUfgsb1nplyM+7/I
JbqWvN46PW7Z+RT9rro5NzpA9LYX7pdLcN78GwVnHaB0JwxWvMDj9/LUNm0H
mPGrC/xZiv23v4sm96NwoHle7BXut31m23F78A35EOUIOF8HHSunPaQf+cxy
ugr9HbjwIX0LtEUMpj6uxn7bNkyJbAGWM2Oig7W4/5NF6dfswOTCVAFPAx7v
eRYeVjsovvK3/FATno8Dhju7bGD8BoNlbgvO88S4UNMGJLPZ3n9oxeuBxUO2
WGtILhT6pt2Bfi75bhG1gtB6HfbFXjw/1Esi2czhXrPRVfl+9FM72mxoBoPt
ZhLbB3Fe+wHO/abg3O+sXTqM8asPREqMQWMpaGfET6xX8mPAyxAOrB4eeTCN
/qJMdK7pQzbDyf96Z7HeXqnaVl3g4bl4jrqI8W/Fhs20YUYh/yEdPTc5r19m
zDklUFAvpKivJTmK69J57s3gS3lW5cOAzBpXXSADbabVHa+ZSaabOZfELgos
No1es6zIO0bjcwXAxPH9mBQHxq+Vzt/DDcWeX1bO8qDOlHD46VzFuO/w+Wd8
yLTrX/OKqZL7J7mH+ZGpi/scF6jJh3/LWG5C1ij08OQiGk+sKToqgvVkzatc
NxBropn1C8SQ96SN8QoRoZcF7JmlMX7++5o9EkTv3XGV/bKomznVxkgRVrWv
ON/Ik1x56O2LkzLEk/7EKXlF1CPlg6zlCNE/fu9jlVG//qBnTJ64IEApHlXF
fdQVmnspEL80WFKsNJBFt0jfUyS87XsPFWhhftc8+1sl4u3+IhcmCrIIX02l
MqFz7oz2Pj2sJ2t4M1aFyM5y428wwHwfrx5xVYK9fPOCHBW5PSc5VpUI7/zT
eZ6G+Vvu7AVV4uvMuxcjJpjPE3GoVpWw58i5bmmO8SkuijdUiZebjxzPt8T4
1M/GxqqEtLn1jvU2yJolN16oEAnewob+dhj/OMZ4jQqxfOKncL096v/9NRNT
JvZcfb0i64R6RJ0glxLRWnylL2Yr8qX7bB0KhEHLPhh2xX1OsZYFbSbyxgyy
LNyR2xfne+UIHgbO03keWE9tvFxKljgpPujDuBOZ7qKcsTQxavDMZK8X1ot2
2keRJFy2xUrV+WD+nQxYL04oXFb5dm4vcpxO9VF+4spd+rpv+5CzDjGbcxN0
tR/yzAOQk85kFawnPv4+vo8hBJlupf7WE6qxgL31nlDkeykMC/MVDzQkFGrD
kI3PPZxYD9H76yfOHkN292XuFQTVTt7gdWfQX27FQVEFSJ8Zdth9Drm4/mqB
MjBylKrVnCe5vzMp64Ya9Jh5z5yJRx7rEFXUgtjiB4fXppEsniI0pWkAs82n
3Pyuoe7FuuuHIewac6ZUpyM/2MF7hwpa4kuL0ZkkO4bxJNEZQ6ZBU/fgbZJD
WMcZ3hsDy7bMUpNcPL5vcgRvmsDAJfOINXcxP+emh7gZ2N0V3Ol7n2S1SXOW
bjN4UTNh9Poh8uJ+y4vmcPl30urpYpIT6Rv29ljAEv+e/oGnJGfdaPM6YQm7
NXSrjJ8jn0rfwWsF+vv7ounLSS4iUkHBGnhN6Od0K3A/157PZFnDdyFp/5BK
kqfW5nFw2kDNrEV3/mv0M9qyEmYDt5r2236pwfwF8co2GzhyJ/4Vfz36ecG1
V94W7CMfqdq/wX1uPcl2xBbktrXdPvcWOcenu8wW6NTmeF81Yz+IWlqyhW4m
wZhf73Afb1J2qpHXzwH9RcU2PF82XUzeZQdxpTsP+H3AfNvTlmftwC8lqif9
I/b/Jup02w4MA3Ps27rQr/+HrGd2wGdeV8n8GesVdxqSz+OTImMaxr24f7XH
BjV2UDfPeif8C84j+xcq7CDznYpA0QDuR9B5rsgOwgucLox8xfopkuw37MDx
dNhv0WH0m+9ndNIONntcPeg2iscrnLt0mx2s0Sz9cmmcZK4UsWQFO/jE2utU
+x3zYwbeztnCk6HV6j8/8Hzxzzzx0hbiX0nqaE1j/LHLcNgW9qSZFwTMot/1
Rq8UbIEavE8oZw7rN+lkkvcPfquL8Z8WsJ6bR8opG/gpXviXexnjF1vfiNlA
w1JriPUfkr2lucJeWkNW2+xg1F9kv/U1dtbgfFav/ucaHnJ/Fj5KPlaguNNT
T46BZPH+jYuDlrBO59T9XetJdqxgeeplCc9GahKaWXnQ35CVrQUI2jq63+cj
uTWlpGHaFPq4/cf2ypJMp0Zh3GMEz8cv7MiQJ7mfW2SWxRASqx80dyiQTPst
0V2kD8aHZx6bqZKcFUFfsUKB3K6TxyV1Mf+Y2/0cDTj5OOv7dn30Jxg34KIO
bnHVu5IMMb/Er45VDZgMmU3pjDE+N8N0kyIEZKay9lkjN/6u75KAX86fHVns
kGuV5Q6LQQSjZJqOPTInw/5tmyD+4CPxBGfkV9aN53mBT2J+T5kLch6dcCUn
3PxgeH/EDflWBeM7Jnhg0KhN24HMuPhMebFC6yfXicCdyN4/SuzHKsqzt1Ve
8/rHW0fHKyrM3DIYan2Qi9x2zX6hNjN/s5n2Qx7kfy88TXV7pZgoshf52nTe
oSVqX0hoh/U+ZNesjNN0xF7pl0JHDiCHpb/rX0v86Fz1yg5Efna5upWROHLR
4k5LEPLwDektzMRf6qXx5RDkXbY7trISMTPtqnKHkK+3qAyyEZx5Qoe3HkbW
f/jfEjtxbbtP6amjyAk6Vdc5CHH2gtX7x5Bpsl41HERB5Q+zrhPIEWosJzgI
tTDtuHWRyCHpn4CdeCEX8U4tCvl4otwVNoL2+TXfzmjkaam1KyxEw2Vmjwtn
kfmfqy4wEU4mjpnPYpCt/W+eYSQ+zaUNDcQiywbQ56wlfO/2bua4iMx84qkb
HTHuKR2sf+lff8Z1xkvUUK6Ap3sTkCuyxRmmqcvVj5eSk5DdFW2Xv1Cjjy5S
IQWZ7ixHZ3lFSt+5NwLXkK0KnmQuVAgnN3GYpSNTt5g200OuOa9LyE1khhN6
Ekzw9EFWX0MWnm9mjnSfecDQe0RqLhv1S2etj/BDDa/Kfok7yLYpTzWEoON4
2eyxu//inZ6ulYB5q49MisXISn09xzZD5B9h+21PkZ1T1z1TBMYiv5QzJXj+
Pno8sKQMAgLTIj2lqLumBduqg+43Vs1L1Vhfe+btgjYcO2288+cHjK+SO6tI
gJaNy5JNJ8Z/YLdVpsEUj/+VvO5/x1eUWkWDvbnxzTv78PObOni81xgkD2bu
f9mP8TKFZ/eYQK92McOGr1gvyil4zARc6juNmkYwPmz3jyFT4Ewc75YbJznR
8K2Upxk0uq8cPvMd46/NC7aYQYwEF8+XH3g9EG8w1jcH43HJQv1pvB5ckzXN
Moc/xdo2abP4eb/IObxqDi9OWA1PzyErdnBstwAV9iDRu8sYnxk1umAB4x1R
petWSA7xhedGlnAnI8XNexXjdRJNTlqCt3/eTBk9L9l/b0F+iSUIq728LLCO
5P5nh+6MWULn4luFQ4wkZ+2+1LTBCpKr+upamEhWa2Pq0rcC+7hpXwVWksU3
Jt1xtwLmretWz7GjHu6jGGwFNZsEbgxwkjw1YRUaaQVRQ5spRjwkV74KToqx
AoOHhu3X+DBftPvueSuYP+wQ/IsfWXD462krKKb6sjpuJDlxaDzwsBUcXH84
//4mrMcSEuJrBfKt503Xi6J/y/yfVlYwdC39i684yXTn6r/KW0GWz8MTFZKo
915wW2MFOxQqBYRkSI5azdrZYQn8s21PDsuRzCUVJJBtCW1l3xzebybZezy4
YJ8lXDq7OKGkhPEWW/U2W4LVFtbYWBX0d+Ps3FcLgD61SkIT92W+kmtlAcfz
TT1vaGM/7VuLM+agE+K2OE8hOYS7zPWaOTygj1ArNMT5o3WDOswgXbo+S9iC
5Nb/bLvFTMF1stsw3ArrPVmfedcEuEq+d7XbIDOfU1YzgfOWPNwXHbD+dSVr
LWMIO7Dz9JI7zsu3s9WGCg5Fsz4fA1CPT034og3hOm4JzEGon0p/NqoFWeUv
yg1D0P96u6g5TZhpOCmQE4bzKb7hFdaATQ79Zh+PYL/Vxgs66mDWYRLKfAw5
pJzDTQ3SBtY3B5/EeKlsZ2tlAP8Dy9mnsP7tN9n5ijA62ST38TSyhFEMlwLo
LydFG8Zg/MSQBbMc+EX9ehQci/62WP+4KQPxjNt6s+NQF5SrMJaGPh5hXeYE
zD8edKZKAtZfj9xjmIQ8cEXuljioiQ0kB6dg/I6xfn4x2H7HtDL7CjLrp+uC
IhCtmDfZcRXjs51liE1w/zHTJuZ01AcLWOI2wgdKgJXhTWS/pONLArDyqvlw
cAbG2940SuQHWTO1nOwsZAWZWscN4NCY3NqRjfHigzmGfBDuOLfCdAf1lz2v
XXjh9sdtiob5//x4xl7ngUbPUvfgu8ja7OQbKcwOCsdk38f4d4uvC7hBeP+p
Jx0Pkbk0AkK5wfznQD9T0b98ioE/NwQdNuMwLEbdpMQ7hhuu/s4zCH6K7Gj4
q4UbKk8z788uwfia83U0HhhbH5jW8QL1jU1ePTzAc7mlmqkMmTVz5DYvGPCp
Txu8Qu54qpzEB7vTU0SDAfPfa766uwEuic/bZlehzlT+Y5wfSvLcj3VUI6cW
LG4VhC9KZXlMdcjLb+e+bgSmJyIfDBqQ07pGrm8Cdb0o+uBGrBca9zpMBDxg
UCW7CfWl9NBDYnDG3NyzowXP93qWgEZxePA2/wLTe4wf2Jw6IQF/OwOHgjrw
fGD3ub1DGuR2vePO7sT4zykj5Put45A60dGN8RF/fNfKQfbU/HWDPqy/SfFA
72awYD7twDTy7/jrLrOowSX9K6W3F7Hek+xN33TI6181dd1vvH4Fhgl3UcDi
v5nXe1dQb7AweasLf/Md3iqu4SM/7zYdmx/rQ9AGlp5nrCT3J0gP+1KhsUjX
W5CDZDq9Y3VmBMja+Q8d5yKZRki95qJBX3TNd2ID5m8MPviNBvZTkStvREme
GizoDjSBexcfnlaS4MP3+13MdSbAKNfDkCCF9XxgTMgUfF+zxE3LYL0CG5MA
U6jYqcfhIo/9GXhnSkxBaMk/uUSBD79PaTO+YgpHUtP4Nypjv+zbCjQzUH07
K9qnjiz+6HGJGcTvlcyhaZHM1WItPmEGo/ROcjk6WE+nelLIHMxunbrPoIf9
zI+UmJtDlm6h6j4D9Lu+WTOAvL+09zxpNCI58VWXEfl+4x7MqqtMw/zjd6vv
mMNTFv3yBBOch9ekptQcuPL20WbMsF5Htm2jOQQaX61xsSTZ0W416IM5NPTU
Wj23Rm7jsuk2B+nwX00b7dDvVr+VLnOI4pVyirDHekZ77rWbQ0+hU0efI/rJ
yHZ8Yw66NlHbjbeSHNXr1vvSHFK/FfbmuOL+Ti9tIf1MR/X6MLqjX1WVB6Rf
e2G24X0eOP9iHMtBc7j3XP/AW0/0L2YVbW0OjFv3/1D2wv6X5tQkzMH3x9XQ
RB+SWy+6UX6ZQcWFuvkZP9y3qfqL12YgJDN33HUv+hmP7Yw3g7YdzmeEArB+
qWcanxmoLEStP3kQ693TzmozhbjkRxe/BGO+HhPzJVMwecOWmhtGckjNYO6C
CRTr1OeqRKL/PYkbCoyBo21OPikK5/v1xnyLMRw4KP1wNhrjC23WTNFAMvf0
sxfnMf7OmRFVGqRwG9aZJOG+L23kMzMCzwOlnyNSUC97JnzeEGSrdadLrmA9
13nXNwZQGqYtrJjOh9/frem21Yf+TpVQ3hz090Ot1pUC99Qent9yB+Nzjaxv
6UDYBcVb5/MxfiNd4Yg2rDeQb/h9H/Wio7/OaYFKhoTo0FPsd/Gg/oQ6LM5n
aoo+x3jHlU9b1OG1g6i1+0us37np+DM1cKXfFNb0CnnSxEBJFUQ9rl9grET/
kg8axFRgtFggk/YaOT3qvLgyROzma3xah/2izKxtFMHiVfKXHw3IwwOuhxSA
i597Tv4t1st9V3J3M3wKSmDxa0Y9XpA2KQ859ezit95hvSpvUao8BIrHa3e+
R791h87ckgOdYyy23B8w3tosiE0O6NpivW0/Yr2zW89dlIVGhfVHznUhD8jI
b5KF1DPnLsInjP8eGF0mA7t61t5e6kH9heT1QBmQ144u0fyCzP3JWUUGpi/R
NR0cQL4REUknA6XDkQP5XzG/TKlrUBrOEivzA9/Q3xp2rg5psL92gk14FP05
f/z4URoEp5ck3MYxfr2P7ag0DFqHUxK/o16yDZhl4EH2vF3jj3/7G3EykIEj
v8N8102j/mn7SoQMEC6zR6mzqIufzmiRAaaH/10Kn0M/47W/VWWhjWEqu3gB
6zccfJslCzd3Bb34vvTv/Gp4Li4He59/b5b9g/zzm88jOVDjCvjq/RfrSZvs
tpOH5X1ji+l0G8j8vFi3BXm4JDQsxclAMt1WFY7DCuB2aLee9XqSKzcq5Fko
gnjToP0ZZtRzL/+VUoKnJ78cW2DH/Gjix6oyRH7cmaDOhTqP+5UVFbBS7ckN
4CGZ9k330ho1+Nzf9e4LP3LiEqugOqwxa5NpEMP8roC1YZpw4mgYx4IE8uT6
3Zxa8Ose/4KMNPbn6yh5oAUj3Dsazshj/WM/Zia0oenL1wOEOsa71hYf0QVz
3pitQZqo03Wzb9KDCgt5w1vaJGdl/KkEPSh6GMj+Ww/5e4/legO4cmLuUYkJ
xh+PkI8yAo5HV699M0P9JgebIBViB/VO81mS3O+9S+QhFY5bRzqH2pLsPdWS
2ELAbIS4we0tOI97Uhj5fhFY9Fqq1YHkEAN/llAa7BJYP6fsgvnvRznnaNBp
c7fX0w37KTGtaBiDY6Rt3UV31JeOOQQZg+m3hKtjnljfi7O1xxjKBTWiBL1I
LrIpneA0AR27D/ssfXAfQntNaSYg/0RQ/84ekh19dldeM4Hbw6WSH/xJnsoL
Xqo0ASGhnaxrD+A8+Uf9h00gdcvqrHrgBvz734JGJlNgP327xzsIdSnqgpwp
xDw1rU0IQT/7T703NQW60W8PK0JRH8i18TSFY5ti0ybDsH7P8M7/TGHGXuGU
8FHU29vYz5hCQHSTv+0x3Idpsm+SKQw9C3I8fgL7xTXsu2kKO8e49O6eJLm1
x0Mt1xQ+Cj+R6DqF+b92vy0wBQdHV5b10SRzeU9a3zOFhjMLM9pncR93ZjJJ
3eT59c+7Y3D+rxzlOaZQNm5QkxKL8fFxV2+YgpZo34PXcdgv6KxmoikUOkVd
mY5HfWEh7bQpyJ2TjBRPIDkxzrc52BSyXtTsdUjC/T699M3DFDZ+3+sQmYLz
T+ZMmZhCshiz7sMr2O9aOr28KbBuvS/ecxWP7/AlJRZTOBuzhZk1Hfdv+/0c
+X648vLntN5NnL/zrRT5fHBkMunTvgzUu3nFskxgv8vH+3XZOO+KcLKdCQye
D0+dy92Af7/CqSdmAp5lQiel81FX4rj50xjsJb3so+/jvrTkxy8Yw/KB5kv9
D/F8F2t0cTCGvCcGzdQi9KsofZjHGFbNBO1+P8V65Te1kmlQ5P/eOqwC/cg9
9/lNBd6HpuZ73+M84wei3fWhcu7x2Zp23Nd9u8YqPQikitdIfkR9V6OFkh7U
vPtj8uUT9uNmD2TUhSMzz2juQ9hv20vlDm2QNJCOKhn+d/24MWmvDS1nkoFv
DM9vXectb7VAbkMw9f3kv8/HntkWTfiws/ek6hTWbzh7cJsmROXZvro0g3yI
1jmkAV0UeUObBcy/KU7l1ICzUWknCpZwH6o39j1QB7U368oY/6D+6PaIvTr0
cB9a3v0X+V7t43k1uOAxoFdNx0/6SR5+lqMGOjkOxyTWktwfa7KBfN8ZnHj1
4hQDP/79tYovhxpc1lJa7F1PMi0hTCxdFfRPplMMWUimk/ndLK0Kw7VMR9PZ
UGdNFH+lAikcR0sWOVA/tUTxUwHatm9zbtzI1fJ8AirwPXOr9jNe5POu17qU
4dpoVRgvP/rR4UvJVwYzdbWn/wkiTxyqPaMMU8cyZt8JIY8uDAcqw63XbJoq
Ipgv9WKdnzLYsJ4IjRdDfVUkfq8yzG8dezwugf6fVZUdVYbsm9umraQx3kwh
N00Z7L/VquXLon5hWqtaGZaVtUIYNqP/1GGzFWXIP5L9yE8R623jv2amAi7A
9bNKGfN/+H+7pgJ0TKdUxNUwvoD505IKPHCcPBip8a/+XmF/VXC/vuNhjxbW
j7Fz6FeFdYNvvutTUOe4GqOhBo8VdJWu65GcpZ8RdlwNdh3KC1gwIFmcXri8
Xg1Yyvnuu1JRr3shL6QOvlumN/OYol56IK9ZHSK2Plq2NEd/9EYgpwFp2w++
PWmJfrKn7p3TgMY9Y4FjtqhvZN9rpwkakQOPKl0wX+2I+6oW0D96rx28F+P9
RU691AWhZwmMd/ah31l6QlsPtMq2dH46wI/XEy7lx3qwr/5NuEUw+omaiMzX
h9YvVWUi4Rif9W3nOUMY/3YqfutxrPeDr3rRENZ9N9p5IQLnjXvuecAIdBdf
/v0VhXrkJLsVFbK4io2bLuD5RnVq+UZAKX8Iz5p4kkO0z/lJ0uCDsMpXymXM
3x+/4EADps33zuYkk5z4wsb4Dvl8qLrPtTsV/bROTzfRwFBbVpbzKsmtphEP
Z2gQYpxdf/wGyVOunDt0jSHO0vta0S2SHXVlFN2NIXeL6P7hTPTfYF5y2Bgq
tvboCWdjvOBcd6IxdG1PZ3HOxX25rou6awwzXu6fz+eh37+FN8EY2PbyP3hV
gPvdukex3RhkAz9EzN5Df+xDykPGQIQmb9n8EP0Iit6bMQb3cEdRr0fYP9vx
7l9jCI3k+Jn6GPPvSVCYTCD+bBM0PsF5rcV9yPtXXlxcIl0J5pcRSnwmUJlo
5aPzAuctCDrLbwKf0hg1Aktxnw2xHiT/ulmzJrsc95dkX8BrAhw50e2dFXj8
2DIOcpD3v7u0XPYq7O8c9IjRBEwe/Q0zrcZ563cd+WMMns/KzY/Voh/Hhmby
enqk7Dj/o3rMVx993W8MiVW6I0NvcP6p0N3vjOFe/fxzoSZkWaXXZcZQ0/w0
1rEF98Us9f2OMfS1h26PaSVZ7WH99CVjUPz5J2qijWSuodSb/xlDOMv5AscO
nOfq9TFnY+AxvrEg9An9F1SXcRiDl6eMWFQP9j8Utn+MBg+OPrL41of1b8ux
vKaBRWH1lUdfcf5crdCD5PvBmy2v+IbR/08zLxoN+oc6h46NIns/jeemwfFN
3zXNJjF/eHVgFwGPYvnauuZx389pIuVG8CcnY8loCc8Hv1oDByOwAXmJnN//
9MblfkMYmjMMOUgnQNaj7XxDZwiCfns41rCQ7M3lLK6vD3sif2r7syE7z717
owfF14/tbOIgmVZme9NDD+xaLz1I4xXA36+YikfpQpRRiY2iCHLWQeFeHWh2
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
         "]]},
       Annotation[#, "Charting`Private`Tag$3973#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox[
     "\"Pi - ( \[Theta]1 ( t ) + \[Theta]2 ( t ) )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
WyWitzrKjGijO23UYt8tE4Zhtz6+2I92SVo3UDpHlO/asKLnix4PVPnyd5gw
Nzj+OT0AnZ72O+3GINFuWX5rKQgtVqRJ2dZPLHqdUikMRys+vCnM1EVcDayk
8ESS++z9bpPdSghcFvnqFU32F/hxSPEHoXz387GtSWiKqivxsZooy5VQD71F
Oic1l+MdYfYqiOn3HdK04jbDXKL1fV2d+n3SLsfWCtLox+uk7iZkkaaYvRLM
o2cwRnxneIUuUzP2fFhPV1z3O/3QW9J/7c77NdHpm5W9i0vR1FenhY1/0k2l
r2nzfyDrBVLENrfRf6l2svtWk/lj7wWOd9KP7dVorq1Fx+/M3KzUTZ/dH/dA
up68P72TfSPd9AiHPp+IJvJ+7p5iuttD5/XYTXT+RPtwBEfs76Wn+yWu2d2O
LniTYr3SS1cIG2652U32Z3716nkf3fj2Lb8DI2S/Vv9D0gP0lqy/1Md/0eZJ
USMDA3T35wbcbNPk85H+uylnkD5NT/vtOk/O2xFu7T5Ev/R5Ooe+RJ6n7Wix
6DCdt8XkzCYGLtxXWNo2epie3puhe4YFzdNlck5umK4wscDTwIEefySf0zhE
L1k2b5fnRise+OJ5YYhuzJnz+Bov2oUaf15iiN4isBrYJ4CuC9NLLMf5O/M3
pImS3qNZPjpAD9/N3DW/Fd2p8Dbi/ACdx8jxibU0ukDiPyGOAfpdm+fnC+TI
/r8PlN7qp8u5chhxKZGWXlyr0E9/4+0icEyNrJcXgf19dMPzr3re70JTO14V
jfXQmyO5n4kS5L5u2a9iu+m0pKMh53XQYZ3nauW76JPpJSY/DNAU2B6Y2UEP
y9+wUcWE7PfieMS/VvqdyvIXw1Zkv+Xv/F0/6LLfhS4a2KPLVCL6TjXRX3ec
MstwIvsJ+ZlzfacbjFZuXnEh+zkYF+XX0RvnRYYOHiXNy9gcW0t3ZQkoeulJ
5qeZaCtU0sfX115a703G2wyIglI6145zWz6dIS02EzydStc/1GyleZXM97Bu
3lNNaCV9/DoZQ87/dr9Xvo5Q+FxolH+DjK9Lv6jaSAjsSgSJVHL/KoYHRb8J
Tp/wN633yHxJHm3mDmI121ftZib5fPOucvF0EYN85ju4npD36bk2XqeXaDWB
7Mrn5Pyr9IKVPqIuXEH84ivyeWxX52ocID4Ui9zRLiH7rakXLBkiise5BGfL
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
h3Ky
         "]]},
       Annotation[#, "Charting`Private`Tag$4021#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"h1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
yTil7oy8FZh+6GUaIQfi7Xl8/CJ4Kv7m/Pk8Mv4ROW7vCe7Ttdb//BrqQV1R
KZC2viXFjH1FZDx9R63kJrgkl30ltpSMzxfE77oDFlP9ml/YS8YlVldOjNHu
N57OtH2QjKP+/HBcBtOl+Vlf+wWf44p5EtTDxEnjtwNjZGwu5se0FdxDJ8Wm
O0nGjw9Z/9kF/vKG7r/cWVhPbCyPBLjYvrOEskTGH+R+isqDs7a95vRYI2P5
zpRPh8D3Pkc4/iAw44Nxv4OOgoP9bT+oMTLjXdUWSWZg133KPI+ZmfHu4enq
/8CWPzlciBRmLK3j2eAG1ov9XXWBixm79v74EwhW1irf/o2XGddJu+ZEgkXn
E67I7WTGZe76k/FgrmeutfcF4PeHv/xMBRPO6u5eEYH73yO3PgWbKhYJv5dg
xspr6eN54OwtYuLB+5hx4H0/lSLw2r/7e7XkmTHb0cC75WDDL4yyJCVmTHpW
+rsKnJnlpfBZjRmL6Ijs/AheChlRjsbMeJRgEEj7XN/G7PBJHWb86+i+n5Xg
R2qfNLj0YL1jB6ZontmmqNtmwIwTurkUaL/XncvUSzJhxpyT//35BE5u4j5p
cYYZrwzJLHym5eNFqMluK2YsmGPR0gDWvDV3euAcM6YPZvFpASfYn7fMdGDG
N0e3PW4Dj2m02jo6M2NDHt/gL2D13dr2UleYsU/+QAptPXErby7+82TGhz2C
3hWCf7WLuOb7MuNxX8biHPCduwxXD95gxhuNKlz3wIPOHv7L4bDfzZevhoMP
Hh0KKouG74e1f/QHR+4xCQ2KZcbDztNbroB7CR8jNBOY8bT57mDa/JHtlb/N
+JAZzw0doKPlO7QkPbbuETPuPDh7WQ3ccZ8rISqTGduF78gXAku7hyQb5DDj
mQhOUTI4YEjjhXkZM854c+B3FtRrU/nr/F2VzNgg4ETqXfCeFKG3/Z8gX53n
HHzAPj6xJRlfmDHTFymmc7T+MKX74NDIjIObo3Jp/Sko51Yl2cqMNwflInaB
PdkHasY7mLF5TgrH0jYq2llT0eg+yIyvqEU+eQUuzUazkWQWvHJP/FAaL5xH
w14tnmBnwQ3xg/ReYLtzAmucXCzYtSwxXx/MsmOTmLiTBdfb558ngM9GfeDN
kGHBT7/1rXjwQL1cOqz6zpQFa7D/GrbjhnnwSf/cvrMs+JfnFUYN8Cl+y4hH
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
LkRemHREjl68RitjFhfkvJkRGE+FcRbzrxAXGm78voDxf1jZ9ctNlAvLStuq
MT8ux661VYpzQflHxijmb8Ju93352VyYzGFpIev8J3L4PyoX3tM3P8P8N+W/
2m7O4ILaydC5yIG7z1nmsLiwPLE1CPUiuWS7mjCXCzsEhB9gf7smtFjKi8+F
6Ot991FfK5+P/6idy4XascJi1F9PyuNmZTkuPEpbXoj6lFV2TOtTJOeZUZmL
+lUtDJw9bwHZz9jxAtS3js6xQ84qXAj4e6gA9W8F93waFnGhV0j3PNZHyEYF
o0I9Lmy20PTA+jrUYVzYa8CFRcF6Rtgf47atV5A1JvEQEWfj32OygmLFE0y5
YKs86zfWZ8HYpQNPzbjgZzFf4F+9RlQMzTDnwo2ZOiz8e83z2O9tOy25sMTo
qz3Wd6uU6NprVlz4IS8RhPXfkyxf1W3NhSTTkSj0h4lMh3x7Oy7MHA15if4h
tCBANs6eC+P1nT+xf1IKjiZVr+fC1psfeMjz75aH6zpxIeXWsQT0Iw3T14P+
Llwwz9z1Af3K6Mk3j9zNXHhwS1sbecVqkXcd7lyoCUk5if5m+0rOmu3BhXbH
45/R/5w3GFWu3U7OK37KGNnzg71OrBcXHLjJZeiXOz388yp9uHDqPScAOeJr
jPRvXy5ciIpWQz4amJmgGcCFl9lX+7EfJ47eFdwRxAV1y8Cr/94fhTeHZgVz
Ibal0h05T+DbQNtuLhxMqZZCvnVUeAt9LxeiYG8x+vWD2XItq/eR+EjMX4P8
NMlwVXQ4F55KtXWjvzdz7e/f20/yy2kMQ+646Kc5epALQpJvZZG/zI/JWRTF
hWDz6H9/LxnOv8j1jOaCwLadkcjTmndPZsRwIS57RTGyWFmTwNtYUg81Wv8h
M5YO7JlzgguBc0po+HxVK9nNkfFcyHtA9UfWfWnQVHaaC5VFfqnI4LjO4mcS
F5pUGFXIq9t9y1VSyPO/pH1Ddtx6RH1rKtH382IOnnfLl4ys9HQuXIyBcGS/
gDJW83kufGmul8Z47h15dVziIvn8EtxDjgrrn15+iQvClvZOmJ+TM4R2RVzm
gmNa0i/k1BiZzyU5XEiYfzIZ81uYaPdi/jUuWLz88Rzzf5fju3zzdS7M/b3Z
D/VSnRF9J6WQC5n7g8Swfz1XzFB7UcQFV0erHOTWa3cuitwi8XDOXIp6S5YY
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
hc/Y37986J9v9gH9939QC2pz
         "]]},
       Annotation[#, "Charting`Private`Tag$4069#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"h2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8072685186310015`*^9, 3.8072687336539145`*^9, 3.807268844003798*^9, 
   3.8072689381320357`*^9, 3.807269068902342*^9, 3.8072691580928173`*^9, 
   3.807269434666134*^9, 3.8072694902245502`*^9, 3.8072695238057737`*^9, {
   3.8072695649227805`*^9, 3.807269594428873*^9}, 3.807540151620654*^9, 
   3.80754202992542*^9, 3.8075422459367685`*^9, 3.807542678394191*^9, 
   3.8075428134014745`*^9, {3.807544208479517*^9, 3.80754423255513*^9}, 
   3.807544426692938*^9, 3.8075445259634547`*^9, 3.8075446349210644`*^9, {
   3.8075535412008743`*^9, 3.807553555955415*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"4b6283f1-da3a-4e86-9b54-1dc108dc0aa2"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7710867066191854`*^9, 3.7772288293818207`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"c3d83383-619d-4ecf-aac2-6865b65dc574"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7710725992712674`*^9, 
  3.7710726003413196`*^9}},ExpressionUUID->"d18719c4-d349-4464-adba-\
825a9bd27657"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771070730731642*^9, 
  3.7710707353328114`*^9}},ExpressionUUID->"4a4449b2-631f-4b14-b93e-\
bd36b894e421"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7710708120046005`*^9, 
  3.771070819359078*^9}},ExpressionUUID->"2d47d9e6-d43a-49a0-ab14-\
caac8ef72edd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7986559036588497`*^9, 
  3.798655937737031*^9}},ExpressionUUID->"7ffac895-003e-4aec-9fba-\
575952010eab"]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 72524, 2088, 2631, "Input",ExpressionUUID->"52964637-faad-4e6c-a112-758a0a446c36",
 InitializationCell->True],
Cell[73107, 2112, 54747, 958, 279, "Output",ExpressionUUID->"1bd5a87f-49b2-4b31-b015-660380ea0917"],
Cell[127857, 3072, 55077, 964, 273, "Output",ExpressionUUID->"653045d4-1e31-4819-8222-76bf5c539817"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182971, 4041, 11628, 298, 1182, "Input",ExpressionUUID->"46531b23-8898-4625-8c24-005ead5ef8e6",
 InitializationCell->True],
Cell[194602, 4341, 14104, 320, 89, "Output",ExpressionUUID->"8b32ccda-1845-40a9-9b5b-d9158d1a1d5d"]
}, Open  ]],
Cell[208721, 4664, 149, 3, 55, "Input",ExpressionUUID->"1dcee5cb-537d-40d6-a9d6-cd562d630c13"],
Cell[CellGroupData[{
Cell[208895, 4671, 23015, 544, 1467, "Input",ExpressionUUID->"58440a08-1239-47e6-86c3-bbe4465df837",
 InitializationCell->True],
Cell[231913, 5217, 464, 7, 36, "Output",ExpressionUUID->"81a3c15c-116a-44a9-87fc-875fdba3dda1"],
Cell[232380, 5226, 463, 7, 36, "Output",ExpressionUUID->"ce287fbf-ad63-484d-9130-e57f316bf350"]
}, Open  ]],
Cell[232858, 5236, 6105, 122, 233, "Input",ExpressionUUID->"94c95cbb-ae66-48e1-bc2a-c1accdff1c6e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[238988, 5362, 3079, 75, 185, "Input",ExpressionUUID->"7b841b07-b8ce-4a4b-8b42-0c93944af92a",
 InitializationCell->True],
Cell[242070, 5439, 148422, 3342, 201, "Output",ExpressionUUID->"e3d7cd76-4c9c-4d56-b27d-6da61fdfc82a"]
}, Open  ]],
Cell[390507, 8784, 181, 3, 32, "Input",ExpressionUUID->"ab4ecf65-fcce-4c81-9ec7-4b3fb3ff7a87"],
Cell[390691, 8789, 200, 3, 32, "Input",ExpressionUUID->"443439bd-c8bf-4bd7-b386-3ea6bcff8c02"],
Cell[CellGroupData[{
Cell[390916, 8796, 26001, 511, 1413, "Input",ExpressionUUID->"87574f49-9512-4c1b-9dd6-3e489fe520e5",
 InitializationCell->True],
Cell[416920, 9309, 963, 18, 23, "Message",ExpressionUUID->"5c9f52ff-dd51-45c4-a26d-26c25f4a83fc"],
Cell[417886, 9329, 420017, 7067, 2258, "Output",ExpressionUUID->"4b6283f1-da3a-4e86-9b54-1dc108dc0aa2"]
}, Open  ]],
Cell[837918, 16399, 173, 2, 32, "Input",ExpressionUUID->"c3d83383-619d-4ecf-aac2-6865b65dc574"],
Cell[838094, 16403, 156, 3, 32, "Input",ExpressionUUID->"d18719c4-d349-4464-adba-825a9bd27657"],
Cell[838253, 16408, 154, 3, 32, "Input",ExpressionUUID->"4a4449b2-631f-4b14-b93e-bd36b894e421"],
Cell[838410, 16413, 154, 3, 32, "Input",ExpressionUUID->"2d47d9e6-d43a-49a0-ab14-caac8ef72edd"],
Cell[838567, 16418, 154, 3, 32, "Input",ExpressionUUID->"7ffac895-003e-4aec-9fba-575952010eab"]
}
]
*)

