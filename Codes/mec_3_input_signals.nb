(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1059854,      20515]
NotebookOptionsPosition[   1057779,      20471]
NotebookOutlinePosition[   1058152,      20487]
CellTagsIndexPosition[   1058109,      20484]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<D:\\OneDrive\\Documents\\POLI\\IC\\mecanismo e \
entradas\\dataVz.txt\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<D:\\OneDrive\\Documents\\POLI\\IC\\mecanismo e \
entradas\\data_Pitch_Angle.txt\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data2", " ", "=", 
    RowBox[{"Subtract", "[", 
     RowBox[{"data1", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.0490"}], "}"}]}], "}"}]}], "]"}]}], ";"}], "\n",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data4", " ", "=", " ", 
    RowBox[{"Times", "[", 
     RowBox[{"data3", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "*", "Pi"}], "360"], ")"}]}], "}"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"velocidade1", "=", " ", 
   RowBox[{"Interpolation", "[", "data1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vz", "=", " ", 
   RowBox[{"Interpolation", "[", "data2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u1", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"velocidade1", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", "t", "]"}], " ", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"vz", "[", "t", "]"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle1", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "data3", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "data4", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"omega", "[", "t", "]"}], "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"angle", "[", "t", "]"}], ",", " ", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"vz", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "All"}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<vz[t] deslocada\>\""}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "All"}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<z[t] mais coerente\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"angle", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "All"}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"omega", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "All"}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8055579513698473`*^9, 3.8055579710037346`*^9}, {
   3.8055580853268366`*^9, 3.8055580925534267`*^9}, {3.805558147543936*^9, 
   3.805558200094108*^9}, {3.8055582736911154`*^9, 3.8055582774214315`*^9}, {
   3.8055583111767483`*^9, 3.8055583382846756`*^9}, {3.8055583901963015`*^9, 
   3.805558393988409*^9}, {3.805558436194369*^9, 3.8055584402445793`*^9}, {
   3.805558473884117*^9, 3.8055585308813086`*^9}, {3.8055585830326767`*^9, 
   3.805558585441635*^9}, {3.805558721335318*^9, 3.8055587504301896`*^9}, 
   3.8055607230262814`*^9, {3.8055622172633963`*^9, 3.8055622436235943`*^9}, {
   3.805573325969634*^9, 3.8055733316643424`*^9}, 3.8055737089793715`*^9, {
   3.8055737421419907`*^9, 3.805573748169551*^9}, {3.8075593263174715`*^9, 
   3.807559368118209*^9}, {3.807559406024681*^9, 3.807559410695158*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"c5d04a80-3926-43d6-8e27-ed38abb5f8d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$2452#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"vz[t] deslocada\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
BKjvU3wM26l46FxKcpRLAnDWNeet0qdid2BM54FPcXDg5wcNX0Mqbtl4e898
dhyQqsa63xpRsTR+WZW5XRxEGFDIl02puP0Z6UXMcCx4nrINnrOioorjy4x9
K2JBcbv76gM2VLSxLCYntsbAj38h1eW2VHzppaJklhEDx2KvTzgeo2JgZLhM
kVIMrLasjW06QcWj/05lHeOOge41rzasdaSiv+5Y05+uy2Ba/ufo+9NUbDkw
YdgVchl8d1rG87tS8XTDpv4B28uQ9/DBQw13Ko7+slasUbsML3TER908qEji
OrTelX0ZJp8HMAs9CTz6ky48f6NB3HRg13tvKppdpzpc7omGXZ06HvzniXgf
5ObiaoiGMzbFuRoXqOhlWNjgdS0a0gZ529wCqJjZnBo0FB8N9Y6n/hZcpGLY
ymgfc79oGPnZKvs+mIojc5pCDSejgey55QB/KBXVb0WrKR2IBrW/iSEa4UQ+
ml4cva0XDceDpm67RVIxWGG3tpJKNMTwHOwtiKbimk45kaaN0XAvplrgfQwV
g/arRFhLR0MfZZUKfzwVj/i845sVjwbezEAHjUQqUn48yUtnRIPi2sEkt2Qi
Xq/YUkrUaDhUrPu4IJWK/5nzqzaToyFE4erPznQqah9sC9xNiYaSO3zi/Bwq
Oq4Mjq2gRcM75dOGGtlUvHdikTrHioaFujYvtxwCL//D75S10SCzS7GwII+K
d67clJqWiQbTlqTXnQVEfMIo0imK0eBrNr3AV0xFZ7+zlV/UoyH//UEFjWtU
/CJjResyjIaWwzVWbjeouKLRgHL0YDT8+bwqvKCEipySeLanYzSscr5Y2VlK
RQk+BaMV56PB1WuXiEYFYV++M+9gXjSk/7uq7naXilcrmtMW70XD42B+54Iq
KtZf8y582xoNlLhXTXy1VFwXOHG0ZSEaqq5ane9soqKm3A4z9unL0L+x9irf
MypelJ1YZxt5GfgqV79Tf07Fuq7qB5pXL4N1/efNBa1UPCn5463/l8uw2OUy
5NpJ1HPyBI/x0RiQPdJOLuii4m88v/JfUAyYDW2Fzg9UnDQpupWZFwMF4zOZ
6n1Evae2nzvYHwP6/MGmfN+oaNxZe/myVSy4xX/xV/9Oxc2BT7b6ecVCBl3/
pusPKur/PnK7MjEWRiUFuTt/U9HqQBJvdXMsUK+f2cY3ScWMr1qZdoOxoLH5
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
+oKD/UIg+ApEXDfrZKDVUedGtbpAoGhn/Sf2kYFHvDvTq9UDQb+sKfX2Fwb2
vhC9lb8zAJJfGNfRhhlIP3QTIqb9YWCoa+j8CAOnDmieuHvXH/zEx7bv+knU
9wYLXzMlf7gdSevonmGgoo3ADSv1CzBfmDOnOUfkt+TXc90lPzCql5Ms/MfA
4h171Hc88YOhaQ33M8uYeCC4rt91nx9sJTend6xgotjTwozPbD8I3LivXpmb
iaKeyeQ7X84D67iDyAoBJp7JmF7KuXAeHAJ/73AUYuKFFZ939O4+DxWZ521b
RZiY/b0jsZJ9Hva+jr2VRmXiCT3eBdtHvpD5g/nuH52JpxsPRhol+8IwT8E/
exYTB6fbGMtO+UKQZpWRwmomqqorFY2t8oU2K/RIWMvE35M7FZTmfEDMsyVz
WpKJVp2Xbzp0+YBjvEWD9TomLmaIBYbf94G7N/tG6mWYWBTbW8/J9IHlz5xI
6zcwMULRQa04wAdMBieVoxWYWP3YxubacR/Imve3+72JiQ5v+WTy9/jACJM3
wkKRiZIj79Yn7vCBHdsTy6q3MVFjodXeU9IHQkzE36/ZwcQ3T8/F7hL1gXbn
4oVLykwMN9MX+7foDavCtqz/rsrEAN7M9NRxb3DOq95rokHgvcB9R3TIG6pq
dT0rtZi4Mb9B4fgHb+DqastiaTOxZ+yUQORrb9g3ebApQJeJ3qfflHu+8IYc
4c+jn/WY6NnbyLvmiTeMyblQDA2ZuPpNZ57PY29Q3TWjWmrExL6HSh/PPfKG
cLugoxRjJu4N/fJzJSG/9ROI8jFl4vgUU4lS7w0SaSnlPfuYGKsR3BvX4A1n
7qzp1rZg4rx4wMCZp95Q03p96aolEw2VR7TzW7yBd2SbrNAhJs5179Zjv/EG
i5V1JmdtmOh4byn7Sbc35K8x8H5vy0S+MmdOwqA3/FJ9c0Xdnon1KfQjzj+8
Qf2AzdO8Y0zc+nuUV23GGyLdv45xOxB8qrH8NrbcB6Suzam/dibu9zNIzhX3
gTVXru2Ud2FiGuPexy0bfEA8+cDWUFcmHt6XV6Oj7AO0i3dkVM4x8Yv8yopM
Cx/gOehMzvNn4towe8nniT6wwpgp9DeQ8Lfjw44N+T6wpPOUxyKYiTpVrwZc
yn1gdrPkPG84E2M6PipLvfKBqXXtM0cjmahoerHDtccHJsQCJmqjmZjYW9S4
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
3Id/K/R05h0nMHJOtimkgI31Y9PMuh8JWHgrKmUvWaPGefauv1IJdJjvHMgs
OozycnYP7YUECu20n6n2OuFSoktYWQaBVtZK6OAqZ3waLigPyCEQ1cKPCWO5
oNA2TaO3kIDu6KbXKumuGNeU02xcTIAcuooOam4YbFrkl36ZQBi/9nBPpRse
3F594bsyArJtt5Hd5Y4Ln/o3Nvxb4kf0UL1w1BNHQ19VKdYS8E9kS30J9sK+
4beOkfUErN5lL46NemFVz1KK3n8JTPgokVtibxT8vkOqsI1At8iim1Xmi0ep
QfFCBwGTglY37U1+yGSzLN07CbwpGl4vHeuH5KdDsfIPCARUccx+Yvzxkdvx
qYR+Aonbis/Olh1Dg5R7Gv8ZIKCZs/7shZljmHRb3Xn8OYGIlIp7v1oG4AHN
3iqXlwTSzxrn/KMrAM+7G7w886eEl0/GjXxpDk6n/CrXOCKZd6as4eBODl6f
NA/THJPwfR0kaudwcI1WVoHHOAHh8+qZ6/Ec5HiMd6e9J9B2QNznf56DW+8U
6M1MEpCxmX/h1MXBqI+zXt9ME5h2n95b9CcHH2g5pfjOEmiP46UPznEwMe2r
sfYFAgmKRx4f1uDi0B3vrQuLBARpchp5e7i4d6rWxnCZwMy41fK0DRcnPANL
c6Uo+ATekd8ewkX79Oa++6sp3OW+vSEXw8XS5m2rl6UpiLfFWDokc9F3Zzc3
cD2FlxPHNPqvclHkpZV9UZZC301r3f01XNwsjG/pkZf0fa/5qTVz8f60sbq5
IoWBJyqxvz3lIqslRyyjSoH0qX4SreZh5syHDfu3U9APabySI8/Ddzq2+yM0
KBQ/Tv/MU+FhyW8LFwe0KVj82Jq8xYSHSy0uXRu+oeC6p29wyz4eesxWLDB6
FKRafxg6aMNDOV9/z3IjCuEVSRaefjwMyRAliU0o+MdZDnmE8LCjVUG00ZTC
OSkZYV00D+N025RizSnMsYbimjJ4OPpJp9eeobBNJexNaRcPrfQSpE5ZUbgQ
IHbf8IKHhX7Pd9VaS/blLZqZvufh0fb0TGJHoeZ4Sfe4Ah8r5940OzlQqHvh
LZOhxcd1+uyJREcKSSy9MpW9fMSsj47vnSnEO//zpKyAj6TDPl7dlYKZl2PP
Lyf5eGL+yg1XdwrXDdhVq3L5aHjMfX2TN4XGWK9nxvf5eMGgsVPIo/Dkta9N
l6UAn41H564KpPDY3E4o5gpQudyEGxNMIbVM1puXLMCL2r8v8sMorHled7fn
qQDz1bKM9p+gcGuKG2iYHIgvBh0Wq2MoXBQvuI2IApHkS3fqnKTw7EiVwZq3
gZi/9SRncwIFLy3ZjyecgrBAIShnPJWC7bnmVCODYBT3aHAChBTO/9z7JTYw
GFWFg4b9GRTmjSsUZ0uCsXCdy72WHAoCpaBEaxqChVIHPp8vorCpTbhVTL/H
SzObAmxrKOxY7K6pZ0LxZc0Dg6Y6yf8OS7+3SgrF7ZHJC7tFFPIuGwyv7QnF
4g9fstVuU3i9nLHzk08YlvxvrGO2g0JUZ0l0+YnjeHngjv7VZ5L74z86/HEp
AkfyYuaVBylUz7GLtYcjUNNtT0fGEAVPY+Nh302ReOVRuX/ciMTH0Vb/ShdJ
3ZWT5fKBQrTsjvLKB5E4kuzk3zlB4YPQqULrXSRq2n6tbzkl8Sc3JUt2bRRe
bTvVrjtHIXebzKQOE4VvEiyyLi1I8p0jV5x9olCbmfVTWqIwms7SfhUdhYLl
Kr20ZQqa8/lODzOisPT293MrKxToq69qaXkU/h/XO16l
         "]]},
       Annotation[#, "Charting`Private`Tag$2586#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"z[t] mais coerente\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.805557778776396*^9, {3.8055579613923683`*^9, 3.8055579721198235`*^9}, 
   3.8055581016365585`*^9, {3.805558182429786*^9, 3.805558202758895*^9}, 
   3.8055582835929546`*^9, 3.8055583442140446`*^9, 3.8055583989615574`*^9, 
   3.8055584442800198`*^9, 3.805558532478299*^9, {3.8055585698006277`*^9, 
   3.805558586578246*^9}, {3.805558724902242*^9, 3.8055587518088446`*^9}, {
   3.805560678624977*^9, 3.805560743740835*^9}, {3.805562194389422*^9, 
   3.8055622467625227`*^9}, 3.8055733493063116`*^9, 3.8055737137595463`*^9, 
   3.8055737574451714`*^9, 3.8072783246160946`*^9, 3.807280999568801*^9, 
   3.8072810766067734`*^9, 3.8075448224416714`*^9, 3.8075474465716677`*^9, 
   3.8075536316887608`*^9, {3.8075593283418336`*^9, 3.807559369140475*^9}, 
   3.8075594145488515`*^9, 3.8242114850952864`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"83e74f64-0ac9-4c0c-8adc-303c6be77c46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
yf4P7Kkz2A==
         "]]},
       Annotation[#, "Charting`Private`Tag$2636#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwUV3c8198X9sHnQygjhJQSRUn2qm/nHSpJ9kr23rLJCKmEsiUj2RQSElLX
yozsvTfJ3vPn99f79bze9zzPOeeee+855w3tlE2IiYiI+o4REf3/m6T56VsA
z7Ob2VnSwe2uzCh1h9EvJdoAuDpVyr6p49GDIDy3V7Q9tLDUqZPurdxMbvfc
s4j2hTWkbva1iB0+9LnnHe4+h6lnU/XfNa9AwqiLcZRBIHg+/mTWxyEAv13F
TPWjw0C0wNoAgq/D/V0R7Ep9BBSMS8xH/IdBg7cwy8ZuFNBHurZU10lC7XOB
5iCDWEg1Y47QZpGB0XuMcY+ik4DO5imRQKcSfAhiIK/4nAwS99krhvRUQL+J
3vlifQq8uHG+y2JNFdio6ceCxlJhA/OE9nB1GFI8qbC8mwYvNQX3Wa5rwvtw
ujJ1hgy4+ewO9a1/D0Gng5a7jDcTmCq+Ot/OegSsjLTR52WygJ7Ol4/LTgcG
NGhIXhp8BLrRlqkoWn2YF3gu/DD6C6Sl5UbW3TKD3+2k85QX8iFvJ2+a7JI5
ZDv5J//8nA9dtUK401QWEMxA+tD+RgH83dLVbgu1BKuiZ9Qc9QXAYuXaH2xv
BbIaJDVdaoVw6onJZ/L71nB5y8/z1VghjHNy99w+YwNz4n6zC7tfYUiFn4s0
2xYa+nAfkgKKgKbLWeG5uR1kefiqqzJ8gxc7tZPjJx6D+Q+fqhLeYvjqz24g
U/IYZHSJnlh/LwbzQ7v3lMfsgevwKR+bTAk8leF6cU3NHsg/HE61dpTAncgF
8a9L9jCNPU3wNyiFfAKHsLCAA9SMHqiILpTCanLioom1A6T7eVPMPfkOlBYG
FncTHeDFhYPyeLIy2NK0SO5tcADTai9Xhcgy+OHwLZZ10QHumOxfJT7/AzSK
7ivTUDkCJ8FrojDnB9RcuFhfeN4RSDP2Ys0kfgLV9zuHx/gcYeKupxJL7U/g
8sxZoxZ1hOqZXbImFQTMZlpZNSKOkPrK4+fTEQSjHg/O8F5zBMkoL4l3IuUw
gMk0Sks7Qr7Jj6gVz3KoVpC1PrjiCOwi+0v3q8qhSFI7opHCEcIJ/8mlHauA
r8zeWPaIAxB3e2YcKFTAz47Pjh9yHMA+o4xYM7oCOh2XeTLtHUD67FPR+LEK
CI45URFy0QGYom5Zj/BWwgmFNP2dFnuYpyRN4vCoBM23XylnHttDuV9Np3lt
JdjZQ6UmwR4itwMock5WgcKgpL9c2GMwe3wflvWqIOjSIzvdNTs4oduS6b5V
BeL8++cuIhsY6wgf/CFdDYptN5XrA6yh6L4aHXFYNdx80XhyHqxAR7zPI5D7
FyRfrLmb52IOfHnxec3Ov4D5pFCp0oYpkF7Sm6Sr/AWGdP/KHIxMoCfhPIvG
iRrw4VhWOPnTCLLpJ+TjtGrA5R7mKEgwBJ+g9GfD6TXAkiQvXyypByrEFsUX
Vmsg0texY+/9I9hZ/Hc+O6gWRHj+k0lkVoV7jZtrZWV1gCVhopd0+GDKlzJu
6GwjaMZskfvx6KPSraY/7FaNsOUFzOoPDdEbu1BSs2+N0Hhl4y7zc2MkrMNg
u6jwG3Aj+UQ2veaIvKM7WTD+N5hMFQfu46zQgGxst+vMb2AVu0QfSLBFeRXa
VGVCTVAaFBzkR/sY+Yux3SLybYKvT+bPOTLbI83Po87STU1waC7YwHjaAV25
mPoxgLkZwtUNXtowOqK2k9z0tPnNkHXN4T+hHSd0flFg+vz4HwjoNYu56OKG
dvJ3jhecagHZqZE4/7fuyHjhEVfnfy3QUC4glfDoCWrm/iG5adQCs9UJ7kwM
HkjM5KwOc2ALZK2ch40qD5T84anr9bwWIJNFESLmnohqYCRMp6sFSBudXXtx
XmhYOaUmib0V+u7xzt9h8EYyb0hHq2RaoeAunxdtiDfKrzfZnbRtBV67+wk3
D7wRK76WgTyqFe6VP5VrNnyKXmBcfJe/t4JCS3f7h8GnaMnjlazcaCukDaeH
3GHwQVrf5oxtydrgd2J32hthH1S9cv9p6NU2SODyzs5U8EG8vDnv8lXagOlJ
bEqkkQ9ywCjqH7i2wcE3RZ3Yxz6oSNlsaya2DUT9JapuuPmgHePqS/4/26B8
SKPT44kPuul6XoNtrA1iazMjNFx9kN8r7xel+Hb4dfPqwR9bH1QT1/9Vjbsd
JKUn6Sf1fRBFrtjkklw7XNQm+OlL+iD58ij64Mft8LpRCKd42QeFt61IXYps
B4KP2IjecR/UNaHgWPmtHdhW2W+e636KWDazk3X620H58VOPildPke4xirat
g3bIcH3hliLwFCWfNsNFsnfA2WNiwjWt3mjqajXftTsd8I0j8gu3mTe6jJ3X
b7DoAPuG2H9NK17IRtk7xOR1Byju3J/Nd/JCecb9P4m+dIByYUZqz7wnWnMR
W4jr6IAr7MbtivSeyDNuRa7tdCc8Ya9cLel/gspzFDxtoBNav6ovpgg/QaTl
2Z/IjTohjujaIOGVOwqeMKWAj53wpuxjiCirG2rZqBLva+qEoqvyqnhtV0R/
7LyF83InKKsLU8pFuSDN094xNAxdYCiiX0hZ54zir/bXfhLrgqmmZgXpNSc0
AmKbd7S7YITVd3Cd2QlxKEddHHvaBeeOfY+N7XJA5sYral4pXcBSGxZXtmaP
sl0UnjPVHtnD5+ABGnu0FJBdWDDXBc8dT9ruXH6MhOKOTcif6IaFKs+nPC9s
URmqknyu1g2pQy1mIX2W6De5GNHKeDe0vWVBF1SMEM3pqGuvyXrgacDSrTdv
9ZHq1RVdris9UPqvxbdIWwfFgMKbKvkeqEl978Ee9RANKGX/0HXogQsisvb6
PWpoPvacRyNRL7RTBD/hu/Mf4svx+mjK0QtUP87us2nwIifU14uT6YXMb0nn
XKtWf+6NR4qJhfTCJG9sT9I5CcA2ls3a83uhlnv0tqDmHfAnV3hr29ULAr/N
Lk50yEEdS3bNsZ1eGJgeWp56owRUV49tpJ7pA57Y5Ztu71RBEUw5sVt9QLlv
tcMZqAGRSlWq/cZ94E4jz7GkrwWsLl4FtNl9QHTvXlVvuR7oB/SNZf/pAypR
/vg9DgNIjRWlk1ntg+Gk5dex2oYwkx15a5yxH7YnJovuvDSCK2j5sbdEP5gn
nzwevGsMpp7BbaY6/TCS//SVDakpJItfElLw6QeccnHoqX1TGNyoiBJN6YfS
pz/YAyfNgKlQe5Otph/oboTArx/moGq/qUk+2w80L69O1z23gBDe8NIlygHI
1I9hjvrPEhr+8rD28g7AcN2fLu5JSyBk1XpVKA3Ad9R+9qWnFdwyNRzOchoA
gdupy9kk1uB5YR8LfzsAsg9vKcQ9sYbikbfJT0oHgGTvo6jyqDWsJgiQGg0O
QED4XthbXhvgfdRkcp9oEBI+WjyWdrYBSybzWsELgyC833f/fLYNpHUSc7Pe
GQSZQEUO3nYbGAlPCCS1GIQ+pYZtyzkbYFUUm58PGoR5FZnf3cs2oHG8/UFn
7iB4hDbEOc3aQHiDzecfrYPwikzJ/FarDTS/JKdNXxsEhpJ+/ptZNnDsdorD
m1NDcC7NcsvS3gakiW92uEgMwafG/e+13Dbgg3qE9XSG4AtPlKdqmzV893R8
e9dnCEo/H252UlrDhviJ7WspQ3D/pWXg9jsrENjM1GKqGYLRkwEmPqxWYFMo
VUY0OwS+apqvLCMsIdN+6Mws5TBwyfWvfzuwgAle96etvMPQuknzyVzXAtjm
T46WKA0f9YvbmZ755hBtei818O0w4MTHvJtFzaDtwgTesXQYaorH1KksTOH4
qLfZo8FhiPkX5ZrzxgQ4/gRPnCcaAf9iso1bx42h8qoWQzTt0akOxPqY2YxA
P/jSHYoLI0Boq2I9zWMI+3NrLt5CI7AVEvbjtpABiGWG9JhqjIDAAJMQr7Uu
XEzY0SUfHwF3k3rLef27UL1bG+K5NgLT9e00F0YlwVArqnwJPwoRMu95z3bf
gIRTfOy9XKOQPW/IeMbzItCHm0xm2Y7CTzbaL9SHIih/SYDxrM8oxG/O68g9
AqSgQHQ3PGwUgu1XOUJapdB8TpMrIWUUzLVJ1yeZZVEgVVzmk8JRCHi3wDpL
LY+4rMx7F36NwmHUsHHcsiKqqRemMOoehZlj372m65UR7mWL1f2dUUi2b3Sx
u6OOxEIOlCWOjwHLUoac13FNZPuWR4L73Bi0fufVZSs/uj8yAsjJ7oyB3fXr
QudmtBFdXtHiuuYY8CyWb3nr6KJ7xRNdE1ZjQP3heR/fFX3kU073s917DG7g
lMp1m/VRUR2WVhk2BpMXR9XtjAzQfItt8JfUMaCnFXlvOGeALvTGO374NgZ/
kEK0mJEh0hpt0AppOOIT5IXlJkMUOrt1y3twDJotW2OCLxuh2uWL3DZLY8Bk
Jp5C4W6EDrZVabRJxmHykqmuVYkREiJ+tinLOA5CORoNuX+NkBXFlyFx7nGg
2jw+3UFtjJLphn9x3RgHrvt2V93YjVEPy/GcUwrj8FgzWTHksjGivnA9kmA4
DtXX+fa/chijO1csPNadxoF9nUlwnsYYeQq+NZx4OQ4h/tor/ItGqOD6r3vt
seOAn9uReImM0JzUKl9lzji84Fyjmvc1QufkzjN9KR8HRlEZc30RI6SuqnCY
2D4OBWc35SYGDNFrba+pN1PjoDlA9N3V2RBVG39q8toeB8Jjk3wWIkO0Y91b
aE01AaWp5RpBfAaI35ks/hHbBFCtF1UPp+gjcy/hZ7ICE0CsK7Ulelwfdb4O
U+LSnICG1Rum0890EFU0EjtlNQERD/ucclm0keT7f2wE7yO+pRQarwQt5J5+
mmw9dAIYS96Jq1A9RHm59xbGUybge/73RT4zDTRV5NrZVjQBlYPHBBlz1dAZ
lFZWUT8Bu+L+JCSjKki1tj0lb2ACzpmtC4uQK6HAP7igxMUJsHw1xUh1Tx4B
rUM148tJqPv1YutF9QlwYf7wCR87CTVfyt+yIT7IPt8cvpY9Cf4k3+IV7onD
OPee+ziahAEraaIb/RiwCFw2aGubhA3GOAM5ktuwpjy2//rsFLikJ44IvlKG
y49oJj35p8Bcd/DlipsqGBjd/G0lPQXrG6137AzUIcbKukBLYwpwj73OfJTU
hGbH2Nh7llPAnh3x5CLhEeA963zFvKag8RY9mUWLNtzw3zC/FDoFjIj3r/VL
XciKVBbFF03BzWImnYFBfZALOMjMq52CxFXsFH2oASx5fGTR7j1aP1crNydu
CGJGxAf5e1NwiXyF28HJCAbUc+10T0xDxbWo1gt4Y3gqqzV67Nw06NG9XXN8
bQzsNwkqX/mngSJvM9zwuAnU8OdX60tNg2kIr5Z7pQlYcuqKUKlNg4Ybz9+c
q6Zwgpki85vpNCgsci8WvDaFfKoiZiO3aZBfu2gaNGYKakSGQScCp0Hp5QVF
IR4z2Fo9vl8SNw3amWw5uZZmED9dYmuSMw0OGqe9dhLMAOs3GaFB0xASyVh+
qsYMJppplctapqFAj9aFMG4GAZU/qszGpmG4mDKxZs0MeIoshE+uTQPtB/x1
zV0zaMliyPiJn4Er1Qfdb1fMwDGhgsny1AzkYRmeq2NmwBhmE8jAPQNkXnbE
inVmUOrPvFcuMQN87hoWOclmoOv2y8ZabgZ4hPW+UDqYAbG1/fAp3RnYznvR
ZyliBul6Z5Sq7Gbg3XzTRMOiKciq1Ffa+s4A5YxQy5X3prBwx1mIJWIGlFK+
x7++ZQphEufTf6XOgO1ZQ9mlXhMQ4m06ZV80A3oPuXpVzI7mrfPur1jrZoBV
9cS94llj8GTg3K3tnYHmfcsHkWeNj/q4VmvHvzOATVbd+PLGCKr3PIfO7s+A
9VUxptYNQzBf4lJsODELKl21w6vqhvC520fwvMAsPJIVF5Q81AflRp6031Kz
R7ynkc1dfdj42cPopjYL8X58tmLUehCb7x9wwWwWCuMMROKe6sDNdL6dZrdZ
kHSp7yIZeQRj7wasngTOgjSduYIDnxY8fx0wyBk/C44/qt1dwjWAy1dIoTXn
iD/6Q71GvRr8dhop90Sz8Pwvud21HRV4JBX68jJhDrT55Yu1iO/BgciN7c5T
cxBeGKeVdek2JF+esfTlnoPya8SZE9gtmKPF5Hvk5uDhGaEAyfcC4DaySP8i
Yg5Gfm12Cmbzo2gvheTRc38h8o0Sy9U8FdTGot1AJvQXFilfc9e9UEfUxeYr
V+/+hcxnXMKt9ppITs2ZRVXrLyy3+Outy2qhgBVfySc2f6FgNSlTiE4b/Qp5
Y/nB5y+cm39KE1Krg4ivxoXXRPyFs6Vn35Ja6SEPs8IxutK/oG2l4HPupgEq
Jq2gEG/6C0V05csk6wZoLalJQG/kL/zhCFtZSzZE/NCn9Xz1L5QkVfqt3jVC
tgNTfp8I83BG4lbJNU5j9NF99WMr8zyMsGjb6381RtOMRO2bPPOQ9NP4DZ+4
CeIopNo9g82DFucjmg95JkhfifmCtMo84BVgM/e0KYpf4LxvaToPmddppXSe
mKLeIAHHUPd5uPu3ZfXjb1PEyA1xRcHzMKTjfSyGzgwp19yvGkicB8sIZn8O
OTMUYqT5l7hgHpaCko0U3c3QbyKTk9w182BzlznzdKwZIn9vf12hdx5CVxi9
KTPM0O3r3kbO8/NQd+J2fuBnM+TXExgUdzgPIV7hwyeyzdBP57cFFXT/YPrm
IT4m3gzt0qX2T3P+gyblIM6LvmZILC+P5IT4P5AuEblZ8tAMOT34cUVI7h/I
OeAUlS6aoS9z9Spaev9gzOuv1sKUKVp42eXh4/APyAfWdEPjTNFlzvGU9Of/
oCL4jLaotCkyrVxs/B3zD6hCTZTHR0xQit7e6sqnf1Ag36l8wG6CRvbIWZnR
P5g6kUAxmGOMWGMZpKHtH2TPPDyxw2eMHoqyW5tM/oOtfkpdtWwjFN3BGxm0
9Q/aZvK3F9iMEDW1zET32QUQUhihH1w0QHLZqlQH/AtQmGkayS9ngALuGQhx
3F6AhtNjetUf9NGvKRttWc0FqFVMW7jcr4eI/Z/4P7ZagBNdJ4vjA3TQ2lY2
x7HiBfAMvfRtyVsD8UeXyF1rXIDeNwHE31fUkK1gjZPa0AKcv/ooMdZQFU3b
DFcnkS5CwD21pnciSoiDcn6+9tQisIdslzkIKyD9zC36hcuLINR4xW9g/T5K
uI3/j/7mIlQnKvL9vHEX9Y3RmkgoLUKrIzuvAbE0Qr9d0qzmFqFSSzmvOusc
uEGyqdj+InyyT/69VXwFmHqnIojJl0Ckln1qh1IYnMI918xpl8DRguObzF0J
aLlPp/aHZQlOj72w3FcF4MFnfhXmWIIYJk6fYBZJCPj5H2P81SXQuCJa1uQo
Dbf4LbrNsSXIC59/OTcqA+/nDkT/3FsC6emQUzUbsrCTEhkjrLIEHelGTJ1r
cpDPWP6Q2HQJGgWbi+6oK8KJFrVSc7sl8F87lh6mrHT0bv9l+eO2BBS1X/Af
zitDjaSvh7DfEtzKVxTLGFcG9j3GgbigJeAqmvovI0YFvL9m3yCOWoLyNkfG
D5gq9NlKJpi/XwJy8q2KsH5VEOHq2W/OWAJidUfM00INIkZtdIW/LEFp2WSY
3pwaLMWSoLjSJTh3Q6Houq46yKm+YyOuXgLujs85NL/UIfP4NR/zpiV4dq1r
MWdWHUhrq0eau5aggo//0baoBuj7aN0SHlkC/TJf1gUPDSgTX0qKm10Cg7Za
weCvGsC0+pyYeHUJqh1IktonNMAp+7SR+d4SBCQIGVcf04QWky9VzfhlyFV+
5KXLoQk8bHc5hKmXQTjcdT5JSBMCegb845iW4az2qy9vJDRhMsxhEse+DGZ5
ob85RDRB8j75HfMry0Ad8vo/40ua8J70fXqz0JH9ob9W0tF8u/NDkEz45jJo
V9K3fbLSAHXXerO4u8vweseB9dg9Dcjn06vDKS3Dr4xE8RJ2DTgxt8ZlrrUM
hIZY7rItdajRPjcnZLMMH2z2fEvfqQM7Y5FsnMsy7CwYzn01VgfvP/c/4XyW
4dHkW05SHnXoCxilNH91xKcYJ5i2qAaikq7WzeHLwMdvQ//usxpE7lI1CcUv
Q2l7yWdLjaP8FyZfjUtbBoXaY1ZtNGqQeal5wax4GQxbiKHIQxVIR40UmiuW
YXjyk4bAVVXQj93+LNS4DKpfHEIoBlSgTCWEJq5jGSoFNKZuBqgA83FOe9zQ
MrBZPtT+w68CLjWlrWbTy+Ck4b78vUcZ2p4qCjQvLUPDTlEaqZcy8IpPhQvt
LAOTKp171lllCFzxWI0lWQGVDHUaAx0VmPpEq4o7vgKeRpy6LNPKIGmSUWjG
uAI33h1nOPVQGd6f/Y+hmW0FwmWohTUKlGCnu81ZiHsFfOwv/+xbVwT1MPOu
WIEVIKXXy0s6pwj5sgciuBsrgOlrndI0k4cTpJFvzW6vQGoQ94dVHTmw+sG9
1SS/AltZV3YZOGXB2/ogIVxjBUIsRL0yp+9C6Ol2KQ39Fbh3w+T5vM9tSGnI
mD1tcbT+23+xUovSUOTuGTJivwJQ2Mr+7YIk1HEpCac9WTnqQw2jivluQn83
Z7/FsxXocC2+YBorCkQify6uRq6ApI7KVufgeTg5mfL7W8KRf5RxdTJif29e
jHRz8ExfAaeWC9VU82eRmNQDplufV6DwK7Iw+cOH7q+c/4kvPsqP7bCRsZEE
0k3aMGooX4HvJwqpfa5LoseKjcdC6legYIRHnvX5XfTsMPGzStsKqG0aWvct
KaPoXCc1pv4V2FukHvsdr4aydO7tDoyvQMZwDvdzEU1URnU2KWl+BdRrbkiR
/NRCo5a185cPVsDD7eq8YrQeWmOOD18krAJrcu1/oav6iFD/WKyQehUekdgv
9NEZIp5LLP7/nV+FFLEcCmYRYwRdC9zEl1chkApzoZIwQcrPq/7UCKzCyqPG
hjEhU2QsFOMcdH0ViFivrzFfv45cx61PK0qvwkAFw2CsyR0UGH6rgv7BKnx8
FhBgKauE4m8xmvWqrYJALlljAsND9Hlpjuq97ipc5ieNE5Q1QJWJKN/QbBWS
FH4ZG42bok75SM1Lj1fBU6BWUlfdBs3smx/8dVuFkXl/lnAlB7ST/V9qnu8q
iCTXJPQZu6Dj2nSyzoGrwFfK9Yl88gk6Rzm9KB6xCrpCnyRZ254igdLvUQdx
q0Bo4YzQznVFty1Cr1elrkJ4lf/O6JwX0mQyGX2ZswobrB3b/0X7Icta8Zdy
RatAySwDUSUvkJfLiau0aBU21d83uegFoVDO8bbO2lW4aGWlvCwVipI7vrnF
tqwCb6OboTVzBPr6LPisXu8qiMptRvPwRaM6AYPqC2NH/P+mFvkD3qG+UWHL
mblV2Pl818bzfAL6F0pBk7O6CsH1wWQE7w+ICBv+ar+3Cs73cy2PehJEt1jw
SAS/Bn6FCY12pzIQ5/sA3O7xNejqvxgufS8LiT3QyUCMa6B5MaJi1ucTkt3j
f+DPtgY1EWMP9X7mIJ1PhFUZrjVQCg/MaSPKQ37H8m62ia9BWzetXKtcPooq
9p+IllwDfOfhLI9rAco0exj46P4aNBvplT1OLUSljLx851TX4Lg/X1V8x1fU
9Iu4a0J7DUhFHA/yyL6hEadujyyTNYhwv2Sb818xWrmQfd7Wdg3Ib+ElSHZK
Eb7dp1bAdQ2k/HxuSpwpQ0x+ajabT9eAc4Kde4//B9p8rmXr/moN+nb1HpQ/
+Im6XunZ7YavgUNuf4i/JkJFr40fe8WvAcmBrBsHdzmKCrOwP0xbA36H2m8v
EsqRU5Stg+/no3gEjQgWxyqQ6jtHR5KSNfgneda40boCCSa4OT2vXAP7xK2W
nNoKRJfk5Uz2ew1M763I0bBUouVUP5dXnWsweyZS16azArVkvnSlHF4Dvk1c
hu/5SvQ5O9jt9cza0X2LTBOtK9GbvDB36pU18MpqSqgpqkQ2hdFPwnaP9sfv
itzmYSWSK47zOIlfB4dHvfb8MlWIsjzN6xTTOjAe57xQ2VmF5qo+er87vw7V
k5W5TKerUUPt56enr6yD0c+8L2561SjgT4kv2811UGvXNW8dqkakw03PLxmv
w7OBnDr98V9ofKztRZbNOjCo/YrYZa9BlVPdL6+4rsOjcdeL2wY1yHdh9NW1
wHWgvpWbzDpUg/RXpgK/RKyDM41AsOTpWoRt/A0STFiHa65XsuojaxHbzlLw
1/R1CGjy+jbfVIsO9tdfi+atg7nM7sBdkjo0iNt9U1KyDq3TKcz9QnWoDE90
dIDWofKTq026YR2KO4YP+/F7HSQiXXqyguvQk+MU4dC1DteTPmhN5tehh7TU
ERXD61DVtr6q2VmHxBjoI6Vm16GdyyWVdK0OMTEzR/1aWQfblPPWMyfq0Sbr
2ei7e+vwRnJLlvRiPeo6d+FtPX4DXmu6tyZBPSri4Iq5T70B1YYin1rk61EU
19V3TUwb0CBECB5/WI+ceARiFdg3ILF5xrFPvx6p8InGtV7ZACm+IcOvRvVI
QOhGvIrwBhQ/nNJ0MqxHtGK3EjpvbsC+LE79lE49Wrp+572GzAacJL2m9V6l
Hv2B+4m9Shuw5W9ncuxOPcqVUvzw6NEGZDdVumoK1aM3d9WSBo034NoQV1jQ
2Xpkc18rWc92A1huymsab9QhOQW9lFHXDbAb5svS761DPCrGqUa+GyDYUciK
K6lDlBoWaZOBG2DN2pd/O6oOzWnZpptFbgBD8QcrXts6VK/rmDGbcMSfQX73
u1QdyjR0y7TK2IDvs7S35xnq0EtTr6x/eRtQ8rTMpGKiFpla+n20K92ASxbk
WRJ5tei27ctPy1UbQJa+fkLTrRZxOARnOzZtAKGSfmznUi0ad4/OdR3ZAPdK
obPlWTXIzbFvTWN2A2TtXk2XWNWgEzZnr4utbECUjAFt6ZUaJKGfXrtFsgm5
PrEvmtJ+odA7RSPulzaBhExwE/OrRhexnYtafJvQfSqp2kaoGpWJ37SREN+E
a7WKA1FH9T/NU7O9I7sJcy+znmkLVKGbJ7voPG03AXc8PMRuoAJ1ULE81Hbd
BO3Uzd7SZxXIkqCbeMPnCLeeX/vOXYGitiev7IdtgsJ81dth+3I0P7wu7f11
Ezzu/1ylXfmBYrMZXH32NoHq+r0SOYVviC/94Q99/BbktdxitPUoQjWJCSS3
TmxBldesBU3kV7QczhmKO7cFTLlqUXdLCpCMu3CWn9QWHDRJbh+mf0brt9X6
/QO3oH770sjp0XgUCO/Om0RsHb2HVtInTWPQOfFBs9vxW3DVYuf2jeEIJMdj
sobP3YIcqs1bd7Sfo2Q65+MvW7dg6cvPzGvCvqA4HAmvmLZBOjYpwoo6E1Kl
zNtunN+GbR/G1kfBH2Ez47rJEvc2KK6R25IfzwFZKuqtFIFtiF5zs7QP+wzv
H48FalzfhpuTEw1OVHmw0vH1DKX0NvCSThmkG36B2+Kv8n7KbUOWVJsgeU0+
zOP4ujh1t2GIwzpAu/ArYKYkFr2m2xBXw0ypAN8goqFrN9huGwYC8uvsu4th
ivfjG8xtG5qtRCqqPUtBIsLr/JrPNqTYpa3dvVYGbzYVCzNebQNP5KHh7sIP
GHvEcfdR+DaY90pTDX9HIFK+2XsibhtKvFdDva0RvOJotK5MOdIP++E+/qX8
SOf9oXP2NlAoLA+eLa8Avn/24dxftwG3Se+8PFIJPV+ZikNrtmGHwHNDW+sX
8LDMy0r/2YZ9WzbrtfwaeOqNBje7t8GvgvjPhbN1cPGuKYne7JHexXdXZXga
4ckn8Wi6lW2wE5fj/u/Pb2iiPs5ds7MNiSKLGvX+zXDOaeS7O8kOjMW4TF7J
awGnngL5q1Q74JX4OP9iTCtUWuBid3l34E3MFftLDzuBsbmD57PoDsScCCHJ
UeoCC4FMZIjtAHGzRKDvg24oi/ZQZry3AzNdvPg0uR6g2ZWfrFfaAVNuK6dT
Cr1grMfu5qW1A4a/Frt7VPvgW9U6Bb/RDvz4WHZtVqcfKLjqEyasdqCQ6Ot2
udkg6AbH88U47YBy6azgtOUQ5C/ZVd332oHpKKUkGdNhwKtJqR8+34Hcexsf
VnhGIPvMnIfp2x24uKNzYoZ+FHZyRWuFSndg6aI+q0jRGMifpNSaqdyBpPiR
xHb6cUhyHZqPa9wBqZSdsjd247DW/+WpQscOpBvy0bhujoMM9pyOZHAHIgg5
bh53JyA+VTOtaHIHdD7GWTiFTcAiOY+Y5cIOHD7YGzPonABJm8OGM5s74Lvc
PCF1chKiW9t0Wg93YDbypB3L/UmYE05f8iffhWtiDb6TnpPwX6z7MzHaXVDo
X2FNy5yE0AM5xnnmI+z9GnvYPAkThueyEtl3gf987DxuYRLEalevq1zZhdUq
pvOJZFMQfKW2mSC0C3cCw6LUNydhJCTWoPTGLui+/fm0Hj8Fgms2aza3d4FB
t+TTT+opUM2xHxuSP9IXST7mxjAFTqbOLQqau2BdZTI2fYQj2dx/lhvsQgOe
VOQE7RQU9nhm81vtwoN9T9K/hCnoCPOJTXbahZWslgfeR3prsv4BJ7134Tvl
IW3d2CTQkwa4+L/chXR2cqW6ukkQ+hFkvB66C4ULfymeZk2CqkuIsmnsLozw
3yWfNZgEp2sRWHfKLjgwi9IyiU9C5Ew0r0zOLjTx0bbVUE1CYVIsa0nRLiy5
dsquD0xAh9Z7isvluzC48MwjJWsC1k4mb8XW70JEFKtxq8MECL3I6vAc2IWH
DlQ62TvjoAo5lf8md8Ei08jmYck4OG3l5eku7oLUiTThF07jUGhZHIwR74Gv
xjJdbdcYdFwoe/KFcg8ufbLP+PNyDNYGkDk7wx7kT0kbdwqPgZBCrTQp1x64
MUyo9wSMgip5o4Az/x4UkucFd14dBaeK5nNTEnvQOd489+fPCBQKdu3VPtiD
OiX8uTKKERBimiwMctwDL3muocmIAVBtnUne89wDLfayJ05f+sEpcD7U5sUe
lI7ERW039EHh3qq1wrs9wJ2BO9PLPSA0Ssx5Eu1BXgR9hCJ1Jwh9PBcVS7EP
JmQa7iFs9aBqxPGMkn4fthmKa3foasGJlcve88w+dPAzTXgQfkHhm2sPdPn2
wSCs8wX6Vw5Cjjfx7Or7cPG8zW/DjjwQvqHtnJW0D1NubT/oG7MQ1d/3mW4f
98GhMI5klC0Pjb0b7b9bsA+X03m9uB8UoNBNU8mp6n0I31pfCPEpQXP59tQX
ZvZh6PJz04dplajcoFByZWkfqBT0qeROVKO3NJvOFdv7YJP3Kf7b419I2tZz
QI/yAHrbtKxOydWh99wvs+J5D0AzKre38E4TcuqpH7ASPQDRwwcB1x43o/sv
qWiuYwfwyvTnMn/YH7Q1EebSq3QA/oyvdqYGWlBzREdWptYBnK55Ulug34rS
JE8NuhodgMVah730SCtS/hAvxeh8AEr9xCbpY22IS2HYZdLrAG4WsX8aVmlH
h/vnPxa+OABDsi330+XtKPtRBo1KzAFcoKr6EvuqAz2jmJNiTzqARlTMMjTV
gbRKeFyXsw4gcdaIigM6EZ+53cfy/AOIeFX9wjq8E5Gdyh8M+X4AKLHv1beR
TjT0a41Gr/oAGHjSGfCXu1Chk6g0b9MB8LiTvJPT7kJBF5647ncewKnArYgT
8V3IsK3s4++ho//f01g+dHchMd/DwbjpI/+oKK/iqLsRNZ8krdXSAdR6cTXy
S3ajqSF/aYntA1CnPljjt+9GZa9rXY8RH8KxiqCPuPhuFH6D4lMPxSFMhbf+
/VDZjSz+yg1lnDyEJf8/xdST3QiLDaF1ZT0EjrfPaeVJehDjvTbpO5yH4FW/
uv7oTA+a36R3Y+A9BBwri6m4YA+qStf4NCFyCOpTt4M0GXtQrFrsUAEcQpHS
E5cfnD3oMekg7TOZQ6gdNBHHH62/U8B2W1npEIIDyTuu3exBZwwN3c5rHQKp
puGd/+72oDWatE9Lhodw7Y5j6FX5HtSApoeQ1SEcV7ueT6TSgz7YXqYLcTqE
9/6ln4rUepDrGZvbul6HMNqx5Kmg3oPkf392u/riELpvD3E2qvYgDo+VT3tv
DsG32y+dW6kH7XALDze+PYTBV0MHlvd7UGuPK13chyPsITFjvNONMl+W3rbM
OoTh9S8xeWvdyFtk3008/xCY38x/vbzUjdQmIZv8+yEESc9B+3w34on0G+6u
OgRB5k8iH+e6EbHUL7qM34dAT3Ut9vNsN+pdJrvj0nkIvGdcLMePsOf6kw7i
4UOwbDrksv/bjc5t/zMMmTmE/0qkwXChG1Xt6S+fXjmEtBHpnKKVbmRK1PE0
c/cQUqSIHG23uhGp34WXscREWHrtaHl8fTfqItFp1icjwh6P/SOl6zzy/3k0
wyUqIqzfSTmwfKIbuZO1aP+jOZqivamVMo/sZV8dSy1gIML8iDgf1tP0IFZK
qb/uLERY/XZ48oWrPWgh2FMAYyPCPls+vPrtQQ9CJ4rcCRxE2FUVt+1nDj0o
NHSx/DcXESZTsEgIjOtBhnTc5BFXiTDKIKRWX9eDhCINFR4KEGG2fdOTt3Z6
EJ4xPppNlAjTxgf+VPnYi7redg5OXifCGoKDYjP6e1EmMzVnNkaEBWjrdhZS
9KH7Z/wKxGSJsLYOV7Ndgz7Emvh950D+yN7r50+hwD60cG791i8VIkzUtsvp
Ul4fKk/mfRWkSYRpZKBX7e19KIzDvEVJhwgr5nqyL7behwzTk04xGRJh+iv4
Fg36fiTE1a87ZEqENd+JeFs12o8IH+nTU62IsIc5smRtG/2o+4r8P8vHRJjx
J/Z8Q6IBlJnzUojfmQhbw07HOB/0oyfXKjw23YkwvK1QCcVyP5L7slP5w5sI
ixawZWDv6UdnBIUo/J8RYXlv6rK/F/SjhUIbJdkAIkzJT+pp97N+VC6SEUPz
mggzPz4c7CzTj8KLR4a7woiww2txnVG4fmQswXIpIZoIOzXn+lDscx8SKVOx
NYojwsbp9n7Wk/chspuvv3J/IMIGDmXTqpJ70cdbRNJFWUSYkNoUSRrqQZ5V
4kGeuURY6A8Bz2DJHvTgtmObZAER1rfNxVn1oxudrc1mPlZMhG0fqz+Q4e9G
SzJT+n/KiLCmf3THziZ0ocoGtsyoCiLMKY0gLYnrQhFyDxcf1RBh1Pypn7/q
dCLj5nAR9kYi7Gno3/tu+R1IRPG318wfIuzCiidbUmE7Im/D/8rtIMIEKnTT
3hy0oV4VoHLuJcKG9ofYkHQb8tTIj8WNE2E2qHRl5lcLqtSN+cayQYSx1P1k
KxdpRPI2xstyrDisV14fJK+VIu/UyaG9czjM+qfgq3czRehzv+nvbE4cFszh
JOOfWoBoZC0yqK7hML9cV3kumY8I852LLBPEYcq07DgphyRkX2zlZy2Gw/KH
Ow9a2aNR8uK8Het/OCxg8blkvOIz1HbRVuf3LRz2ODK1gEfTGIh1F2U97+Cw
pWdJisoLwSAY9ViM5z4Om41RimRljYVIEseTwao47Ms7fS9xmUxQG3Gtv2+G
w66RZVz1WS+CF6e2i3atcJhOf9Wenm4JFMk/Sf30GIel6Iqc2vn8HRh/eD6l
fILDyCROvM0llMOdtX3r7944jJlEhiGCqgJcrzzVsnqGw/hSeUo6CEf9/ztf
4cZgHBZks2Fv11MF5K3EFzzCcFhXVP+Lus/VIE7uT3MlGoexRFtVeHv8AkvA
H/TF4rBPFXzGUoo1EOvy4m9gIg5bRw3E0yS10JBD1iuRisMYxRb+Dnyshd2J
gJq5TBzGfzmOjfN2HfCwUhTG5uCws9GtCaitDrRVgpJk83FYtUeYabZK/dG9
TRWyU4TDpPr73P/W1sOPiteeH7/jsLzCnG7Paw2wsHXCUqv8KH9kFD76gQ1w
li9Ug+IXDlvtWHSI7mkAeTPa26X1OOzPab28syyN8PR9uIBlMw77hYmRC1xu
hLzOk+dY2nHYrSupY4sqjTBCFXW8oRuH7X+MmehzaAQaacZd9wEchi9nOLH6
ohFuebyd4R7FYRqWp/XEQhvBIZ+pq3fySD8rq/vjm0ZInn1X9WoOh7V7l7vK
+jVC27nTX8QXcRjRrB6csmoEYs3497OrOMx15iUv7b1GEAg5E/xuC4eJe4nd
FmNtBKOa9+739o9whv2z4IkGiNxnM9vGEWPq93dcdlQboFooSTWLQIwdRKay
AWUDrFmxSz6kJMYEUrqiokrrgSMl5doxGmJs2Tm0d9/wqD/r4zhTQk+MXT/e
NudKWg/PadMpLJiJsW3zuHqSxDqYepo5WcdOjHHZ/lpURLXA+I273e0SMRZ3
6qIo3e1auLvwsZyLhxjzen5CbrKqBtw4eXJ7+IixmW/evA3XayBTOycuQJgY
U7gRqb1396gexPOVZGSIsU//Um94bFeCy982gww5YuymbqnuW6tK8EtYtSco
EWPm211fTg9UwDuccHj1Q2Ls/WfOv9rF5VBX/60NsyLG3swZNlReKIMOj56x
RDtibKrGu8t9uxSGr26vHDgSY20fGqza20pgI0zi5A9PYkxLboXfNvQbcGr9
UBF/Q4yt+fnySIoWAB/VkFFMODF2UvaM3/HL+XDj54HjZjQxdvfErL7HuS8g
85jNXz2OGHPn835N+ewzqLJjkV8TibHshvsbTs9zQL9DP5U+lRjTTmbvW43+
BFYvfAsdM4mxjW/E4gHfssBvrrKD/8tR/uKGzJY50+FN/PhE6FdirMa8T7TG
MRVi5UnXF0uIsXHHYb+8lmT4kn+bIbeSGOt+TkEfZJcIZcamnMdribGk43LB
I8/ioY7xpbB1IzFWTP1hR7/oHXTUZdxu/EOM/SzQC2O8EQ0jT+rULncQY79Z
fL1ef42AeZ5Zk1c9xNizpSjtS+phsDV0zGVmgBirtrihU3f9DZCGXX5xd/Qo
X38Ep18yBwK11P3o9ElijIKeTuP17RfAsm6Vjp8jxmyEu7N7kB9czAguMl4g
xiJNCa3tNE9B4GFOTdXKUT2x8tD73XSHm5TNXeybxNjia7YLZeROIPtjYcp3
lxhjdazYJRm2BXU76s2RQ2IsFYZlMiZNwfA8HxlGSoJl/8E77LkYgk274qlE
chKs0hPLfRP2ENye2186oCLBbtFyRMs7KIK/aLioDi0JhvtmLWp/TgpCZ/Pv
ljGQYGaug7sCOYIQH9eucZqFBDOuFDvUYOWAzAdrZk/OkmDl6jxrsbXsUHhI
79bLToItdcpancrlh/IvwgFil0gwR76EWX+XW9BopB7z9goJlmq4oqkcKg9d
DK6ZG9dIME/fNpwEnSaM1b4tVhMiwSTx+5V28law4F5cVyhGgg3PFpFVNz+G
nSu9PSf/I8Gk2aPVpuWdgDC0PeNwiwRrucLamHTJDWhDWbZbb5Ng/vh75qua
nsAqef0YvywJdlrzDaOtvQ9wrT1iDpUnwQKiG6lyx/xAKN2Te1H5CP83EC3u
8xwwzQRxeQ0SjPVBeSGNbADIUfy8l/PoSO+Xq6kgFgQaZUMPqfSP/Esjzk4y
fAN1MW9PNRiTYIaak/bP9kNBwlmx86UFCabz1vT6UHgkZCsdi7htS4L1hGrd
53SPhrO8lYokjiTYdicuitIoBqYS0+7uPD+Kf1HB2/bUB9D01MUXB5JgV/8Y
FdgxJEGD5qkq5xAS7LOq0nOMIRlyaV/dXI4hwXiUSg4VWVLh3MKtvdyEI/3j
7CXKI2kQ3rBTYp1MgsX/pk9/35sOpBkFrpczSLDpczqrCQ0Z4PLMWnjmEwkm
RbH7QbEgE2b0OFfT8kiwLwELuUURWaB1YyjP6CsJxhcveqbF6iPcXFfgGf5J
ghn5NbCcIcmGvFbyufgqEoxBjf6jYmU2sOdWZGjVkWB9ZQXvRN1zIDLwiQlT
EwnWfRnHVvE9Fwhmghe6Wo/wbw7WWp3P4CY1PxLRdZTfqaKW8cXPMMeW9l6p
nwRT/f7oPaV4Hmjv6WhTj5BgN+BkHp9DHjT3MLI0TZBgdQe+ZwxS8gD7+qc7
cJYE29jOmIr/nQf5YQFRMgskWC3fc8qJf3nAYXtLhbB6ZJ/CHCxC9gWiZXdo
qjeP+JVMzCOZvgD5pYJm3z0SjPq6+Yf981/gCYl1MOBIsTo13uV27AvMD3PI
7uNJsZi/05tXxL+Abtkg2XcKUuzpF49PlFxfoCUm+pcbNSnmlTFL6Xj8C0g6
KzwToSfFQpv4mQ1n86BQifzWGhMp9v2CanvP9zy4yFtx8OUMKbaXpSjR7Z8H
MRRPyuzYSTEV/UvyOtJ5QDEt8OTqJVLs2eu8M11rn8Gz6q/o3yukWHBpzRaR
/GdYSExdz+Qjxcrvhl29HpkL+p46BabCpFgyCM2ZhedAmyajPYcEKWYyV3XB
7Gs2fKUNmE+UIsXsxxOI2ho+wsUF7KOOzJE9/0zKfz+yIKZh2+z0A1JsVf80
g1tiJlBk5HP2KpFimL2oqq99Bng+sxqPVifFMgxvGDwUTIcFPY4k1UekGJfw
5RtEk6mgf2NQl06fFKucIZp0fpECbUzRrC3GpJibV/mj0lPJIL0u3/faghSz
zk4rqD32AYpayWLu25JihrG597IJCcCVW652zPEov7iCknsz74DKTKDV35MU
o7qVKElwjYCOHoY6jxBSjJ+GceQUhSuc57PNnIkgxeK/qF8yvWEEti9rAtRi
SDFa99KTuZcVUdnQWYvKeFLsMc+fv91/XNExEdd715JIMd2bub/W//ihmxE9
DWP5pNiaR2bYqYtvUdAc3yeFb6TYSOdV3PmwWNRz61VQ2XfSo/PaHqS7k4Ac
l8TloqtJsVkubLvUKBmV3w3nIaknxXBpUtMZDKnoROIc1eMmUiwosUNl1T0d
PdqQ/DfQSorNrfO1TnFkoswHcU33ukgxVfkVw7maLLSeuppT1EeK/clkOnag
9wlJ7t1/c2GYFNPEp1adX8pGgx/35PenSbGJ6lnnd+ufER25bkveNil2Njdm
OrUhH+npFeWdOTiqr3GgsnMsQNlFJ8ICifHYiZylO9UahWj7uJn9JgGPOcfR
hT9bK0R3TJCSMSUeGz5O/W/q1VcUUXZKoJUaj8mRTmksnCpCIycf092kx2Pf
vd+2vXtfhDwqz7WfOoPHyg5fbQ5EfUN1zO4F/ufxmAChMcmJUIwY7Vsjljnx
WFXo1KM8u2JkVMftpHsZj91IHOAMbS1GeWx+qo28eKyEP+fwJE8J2nfpExIT
xGOiwmLtT2JLkGyzAEOaKB5zw7aYsyZL0FvOoHXaG3js+l2LZkmuUjThOd7p
jeEx73tBS3cNSxF/x/Wiv9J4TOqurk9xxNE8cCUyWvMeHgvExrwiy0rRb795
l18P8NhD4VOz/QOliLlPWkNAGY8lce5XvFkrRab8CaKJ6njMijaSPIfkOyoM
WD9F9QiPfd3qLxOh+I5wIw+23PTwmG9/x9AV8u9IXjS9Z9IIj/0u8bYN3i9F
cW8OipXN8VgGbvLu6Z5SNDOp/g5Z4zF6Jiq2Uz9Kkch/n9157PFYis5BiGJs
KXoWSab1zhmP6bd9j621K0Utf/UkCE/w2G0XafD8rxSdlSpmcfTGY3fuxXjZ
kpQiq1ia3WE/POZx/5va+4oSVLxs3i/3Eo/1eSbVUrqVIPy9iu8lQXjMYFC9
vehiCVL+wBx/MRSP0dp0uyU2FaMPm/aeEZF4rP3KheJf1sXon3yDNtE7PNbG
LBHGTVqMJNLZ/7NJwGNr/B63Xhl8QwH7T870JR35w/erNGC+CLFnXxkq+IjH
1jm8DthWvqKuq6zWTz/jMfLcKD5lg6/o1WeqHdlCPHap/F8JU0MhusG//5Kx
BI8JPnoe68hTiJby/zGM/cBjVE+12wwDClCq0FBKTiX+6P11NJgazEcaRc38
7rV4LNWg/u4BTz6iEENI+jceMzun9/yj8xf0s+TzA5pWPOa+u1VAsMlDD2sF
f1hvHu1nz5W0XMtURHWP477YHh4z2rpTLVh7dP4a6HtJcASswPeAFP/kA3KU
w5v9wROwizFxiTLpCehi8/paLAUBu3xPjVNFPxatdXzjqT9DwOQfREvM8gSh
TPXM0kh2Ava7jiljfcEfPeqJkdG/RMDu7SVPC/p6ocp+d+NNPgKW94rHTilK
FbnoWK5UChMwoTfF23FXTYF7WMvnjQQBo3n/reTOdxcY0L9/QgsIWNKWadMz
El8IHbsezylNwFySqBXJvV6AtDHP5WUZAqZZ1znB1xAEm5OsxWUPCBhr0cAv
b+dQ0J3db1fRIGAf386/rFCJAjqrBQM2bQJ2IyNwIyHpLfyaH1qc0ydg+s6i
tnK978DN9o9XkQkBiyBeXfi9Ewc8S4jSz5KANRMX+L4MfQ8j9nnvHtgdxc+5
Ifz7vw8QsfrhErMTAXtLk7L9giMJ7jiHfZ1wI2ATUiOUTntJsLPhK5XnRcAk
UI51xK+jfsLNodXDj4BZ+FGyTj5NAYMdQ727LwmY0uttZosrqUDvqfKPLpiA
MY24mrLVpULdvpTHUCgB63/yAkeungaeT4WOfYwiYG46nH/ZO9PgGo7zrXMs
ATtp8N/IlVvpMObHwHkrkYDZCLo9aUtOh2hSQgFVKgGTSdf9O7GeDrIvNrCe
TAL2umRJwEgiA/bJpptTcggYvw2v0oPHGZD3qlvbLp+A3a44dSflbQYYU9bN
SXw7iv9rNq1JXgYwvS52I5QRsArZfwXhpRnQeCKL0FZOwNh8enl4ijLAO/Rd
ZMIvAragZu/Jn5IBAnSB7BYNR/XzuzA52TcDJiOe5An9IWChxr/O5R3LgBgG
q5tEHQTswo2rIXXN6SD39tHvxh4CVp9EXcnyKh0OmeS03g4SsA9R1iXpYulA
p+j/Rm6MgO1myqvyDqcBx8uyStw0ARuWuS6h4pEGIj/XNor+EjAxZwErhuNp
ILPOc8V6iYCR8QpNO0WmghaPid75dQL2wBHLtadNBRujhIiubQI2K61RTumf
Aj6xnbVBBwRsI9ntjNR8MoS3Ht/DSMgwBgpqHefeJEglv8O3QUaGCXq74RsF
k+AbeBt/oiLDckLJU1+8+gADOQu/GRjJsAB28Zd68u9hYeIirpGFDKs9wF5J
DMUDEauesA8bGUbGFO06ahwHnIF/Eua4yDAxHBdzhHoMiFWQtSVeJcM4Wo1/
J1REg+wWENQEyDDzoQUrpwtRoH3NTYJClAyjyKxwiQ8JB1vTPFt0nQxjMifK
Z1oMhWLJMIiUJ8M6uLNDqBifQ4N7veM9FTJMXIP0M27VFwbzcJkHGmQYOcvH
O/OfvICYzYHGwoAMm+IqZyh9ZA/06h+lz5qSYaoxFlv/BZnCxddjbu2WZJhi
0GGjOv8tEKtmyQmwI8NmnDj0c/5H0XnHY/m9cbxhPcbj2QrJbCiSklnnKiMk
yU723mTvvffeIYRECqWQQ0RJ8VVUSEsppVIUUv2e35/ndZ/7nOt6fz7Xde7z
1z2ng0/81n992I8dnqV8Oq5qbIstZVPpP4LYIcuuTrCFwwN7u/Rp1YezQ5m+
0KfSel+c9/RACyWRHXZcX/2tqh+Oa4nu7wdT2cFLmbXoyacofEu9hj88ix3S
f6l+4qbF4uGwaV3ZfHY4R7z1a0gkHs+00mLnitkBHjzOaniViL/N67SXlbOD
mLTxm/LWZLxZNP7T6Wp2WGdrDOm3ScWMM7e3s9ezg6PR+BmBT2l4V9ayQVcj
U8+tY5HVpzKw0qBU0rlr7OCgX/XZPDMT6/x16Npxgx0aNoiNihllYUu58m9T
HeywmGP5cP9oFj7nPiGejdlB8NVmz2cK2TiumnhGo58diB8oLXyZ2bhgUiP9
9z126GpILf46lo3ryZG9Vx+yg3Gl8uU7m3Jwh2b7ssMYO0zK65yeFMnBw5Ff
dws8ZQddrFRcIZ2DX97YaTk6xfTTIfZYyu4c/H3BKif+FTv8PH+NeICcg1kk
igaU3rHD/mVFlY1z2ZhhPrr29SM7WKhUcoU3ZOPduRz7Ln5h5us7G1Z7Nhur
DIGd2Q92MClhywpfy8K6G4MLeVfYQfsam/qmxCxsrXDtQf86O0jfnC09uDEL
+3h9/Be8kQPcHmn7bWXPwIUvzjjPcnJAita9nmGDVByXuR9r8nLAHLFhyHgh
GfscJTCaqBwwdiY6bNUrCetevNnnL8gBStGkZ0ky8VjFJIt/UpgDblrci/b3
jMW7Cc7njkhwQFSP/+OQ/GjM6ET3qnZzgKX+/pL9JyIxiwffdnZpDiiUtn1R
fjgUfxf66u8mywFJjAjvw5sC8avRgeGRQxxQw2F/lfHBCz+KKRc7qMwBQ3R+
bVNOJ9x5MCCkCHHA8HrAfRMBc+yz/mR892kOEHRKrzvN74SsrzTuzTDigJ7K
3Sxjpt7opHVc7PczHCD8inHw+wF/tKv/wP5OWw54diYrp3BLJGIEcCVtd+IA
5YMfChvTYxHLrrczsW4c4H59440/xAT0/XmH3AcvDpiI13mvmJiEXqbmpOn4
ccB8zb1dNj9TkI6AnqpXIQfI2g6/M8wrQEoPd5Y8LuWAbyqhp84eLUI7I/99
k6/kgC+NK4d81IoRbf/T42U1HDBtKiL4S7kEbXp7pXzDJeZzWP77cWcp+paX
sGzfxFzf3u+lNkcZmtGw1Ll/jQNG+8tvb31Rhm418KxldzD3U1j22WhfjmrN
3+n97OaAlhMi2vyMCpRHvF1n1scB6qUrQhe6KpC3j7uR2DAH0AOfWIf5ViJL
cbXGxFEmL4PzBivTlejEhMDmz084QHzjVfcWxgWkkPTjjN5zDvjVrbc2rXkB
7VB6cLXtBQeUp0WuB/peQLTPVexb33AAl6uKb2zBBbSxPMQy/D0HqJgkWv67
dgF9OaV//fU8BxwytO7+dPcCmt4oya3xlQP+WA/maI4x79+tG+0afjD9Ft41
RX96Ad10eH6LuMIBLy+hYoMnF1At3zWS7zoH/H6n92Dj0AWUez/J6ekGAthr
fffUaLmAokKtu5VZCaD2fkBvc/EF5CmlQK8kECCH8fSpT9AFZP6S152FSAC9
SVGWfL0LSDt77o4zhQDR+xvGXUSY+anirQ8ZBBAX9NBZnK9EEssF3vsFCHC8
xM15T1MlotR5DuZvJ8Cryxd3b3GuRBvOaAitiRFgWk8gq12gEhnK3RC9vYsA
Llyve/WiK1A9ecfOKCkC3LxDjmXvKEfrC/l7VGUJcHHwnl3u6/NIb4hVhk2e
AGNsV6Sd8stQTa3/wfvKBLiq5ZBuf6EUrcS8U0gDAihLjTa5XihBFcp3j1K0
CZA30XMgO7wIfeeT0xjXJYBzmUbxtTOFSGOpRrvIgACNm6J6JncXoJJR2qmz
pgQoJ3hc4v6Sh740xhkIWRDg8DUew+O1uehY8pLJaxsCJK/a9KTo56ACB3vz
GkcC9P997OtumIWOCKk5SHoTgLj2KvAhSyrKWWt1WfAjwM+poylpO5PQ+wkx
z6vBBFhrkHj06Fg8ysjcHHgolgBlwp+f3LobgV5s6Es6VsCMZ2Dk0m9NMxT2
9mijWRcB/tFJ2GokHo/ia1e39RJA+pXLuG1JEhYvE7n+6i4BiivjNfedTcVB
Qdm3qocIcMzEbstdcgYeNtzY7ThCgPPSNArtcxYW3n/uzu4nBIj4qP7eWy4H
+/G8Hvj8jAAtm+jW+j65WGCgZ8TnDZPvqVS16oF87Fkl80RujplfrGwzZaYA
34mofLbyiekXRiBm+1iIXeWjXkcsE0DR+Nlo2PNi3E399u7oGgGaNy//97e7
BFO+Wc2z/COAP29zEGtRKXYcHvkyuJkTeKOtD5g1leGOevQjhYMT8Nc9y+ec
z2NifPOvkzycoDBEOCxPLce2NtvXSRROCCGtcTY0leMbhzM3PGFwQvyddcsh
+QrMyf+PpVCAE8xekRWLrlVgy5+eBDNhTlhvKxtO5qnELWMzPNskOKG5+RYS
UqrEbM26lFe7OUHz1Uv/ZMtKfCa1m1EtzQk9GrxeD5jf741O0gKOBzihUlzg
3pfUSrxBrXz7bgVO0EsWzP1RWIkNhYnin1WY8Rjt8/5ZWonr18N3NR/lhO3J
Bla/mM/Xny3s9dHghMPiydY/me/rXbfYL3eCE8Z3jPr+CKzENdkP5VZOccJc
1q7iL2cr8YrHYaVOQ07ws80ZnZOvxDvv6thIneGE5zZjlpy8ldhY0DypwoIT
rn0LeWvXXYHjfd2aybac8PJEHeW2XgVuGwqZiHXkhDGn68t34svxW5GUP8uu
nKBSo1JA/XseU4KLxZ29OOHJ22/erO7n8bmdN310gjjBzv3Vk+FdZbgyYrC4
O4wToq4LWFYFluLR8YkemWhOOL8xTmRrVwn+t/f9XFU8J5BPb92+/2cxlo5b
JtJTOKGlesp4XqIYW0yxHErMYL6/OnRP7UQRTpOlWazmcEKo/pwfOBbizmSx
OLdCTqi+InP2RUABnn8le/lFKSf05x4OHFnNw1sVjo2dquSEPwYciu2/c7Fm
5unV3hpOiBvYPaG4moNrD3sfr23ihIg73lW8c1nYrqTprSfmhNt7hNh+CyTj
aYNdghvecoJwwqL0Vg1HzHVZXtVnjhPCJcsrHTLMsNKm466znzhB9DnaFupy
FBdddbh5b4nJszopVzzHDA2y+79UWuUEjtDnp5v/OaCflnFsTX+Y/tA/waJU
44l23MiV2r6JC748A628DH9kxFNtmM3GBdmrrpcKbwajOPuW0M1cXEBY2rz+
4k44auvsrfLn5YLi2fjK1okoRHF99e3MFi44/+/A6QvZcejRwLZ0UUkuuKi3
24aolYr+bJNqy5PmAhm5/YaHR9LQXn+VKbYDXFCb4N2Trp6BzIdPbAqW54JD
0bpukgJZKFXs7O5Pylxw615Y973eLNQR4qpnAVzwbe/SRXWLbDT/X3DgiBoX
/G5qE7mwkI227k4uP6rFjOdE9/4pnxykGVV0t/UkF3xmJU/8+JyDAp/WfZbQ
54Ll6Ubip7O5qFa6nVpkzAWto9lTPTgXjccPKHGe5QKJ11jFf0seYnkxbhNm
xQU6RHlZDsc8dODgu6Qvdlyw2/RXZ3B9HrJNXWq2duaCl/5VKflv81DOm81P
x9y5wGlmT1wJbz7qVaT+VTvHBepBOR9Py+QjPQ3XB5X+XND4ZdtXN/V8NKPf
W7QezAUBAbwf6k/lI3erLY6mEVxwidfpCQdzvObmdaAthgvUOsTbUlXzUVLQ
wAZSIhdoB2gm7pfKR4z4bY/cUpl8VMdOrnHlo5psv9LBTC7IFL3D/v5lHpIt
f+AslscFo5Qt15eY8fY0iB6KLOKCENoTox1OeUi3PXjzVBkXmBT3Wj+fyUXT
faOjhy5wwf3Oxq6ClFzkOrqzPOciF5wrjfrFkM5FK9MRbl8uccFphcNks/s5
KOHjuIL2FS5wyXlDsDbPQVWb4h5vbOcCiJgrbHPJRjK8U5UWnVzwj/e41ObZ
LNQtIOt5CzP5W2ZeoBlnIZ1dycr0fi44PhH18b/ITDR58BXHuXtcQHVpO7lB
NQM5H5WfGB7mggQRzotvxdPQz5MZ1bv+4wLHmD1DdQ9SUJzZO++4cS6wNQ8m
sbklI4qTypFXz7kgrPlH4N9NSSj2wVJ99zoXMCqJXdPegYjy7EQA/0Zu2H5s
oZFf3QdVzlapBrByQ2u+YjXHaw8kvbhKGiNwQ+OIsPMRVSfU9UdvRorIDbtk
s+onrlqjpX1N1PPbueGkRS/Ly5P6OEaF5fWKGDfwb86+Or7BCpO0zl4x3MUN
C3vqW2IfOeC9tgQt7v3ckBnrtKYhfg53eFoznOW4Qe9HLTnviT/WDG1/26fI
DQN+AU0Px4LwRCLx2vYj3BDwxeWH/a1QbJ/nEBF6jBtsraPfnkmKwN8ru048
1eCGow4zRyYqonBUE3XrgRPc4M0g2lz5Go3LBnpb5w24QdyjWvyTWxyWfLwl
WsOUG+ophIFTRfH45ksv3SpzbtBqi1J5ezMBP1nZ9vGMAze8/XSxvmAiCduy
+t+47sINuZY5M1JaKfgbeTiW7MkNf7+yklYPpOIIIbHTHj7cwJU49G2AJw1z
7wkRuh/ADR1ir6IKJ9Jwifx/n8RDuYFzQKPHNSMd71LbdSsqkhvWPf5eAbkM
fEMvMmE6lslDgP3k1gcZWN1iwkAhiRteP7IuWTqViZXy7j76nsYNpDJ27ZfD
mVj6QZtWUzY3pB6cqXjHn4VFN9X0OxVwA3spPmyunoUZirlItJQbUsY1Kv5z
y8Kc3jEd0xXc0LLDoZwjJgv/qz0nV1jDDVKdUUmL6Vl46YX11dOXuOFHTrFF
WmYW/kDT28N9hbneleZtzxOy8PQJVDvQwg3u3H33nvpm4dEYaZHodm4QvvLY
Msk4C/ff2lam3MXkm/v65bx0Fr71jZvvZw83TAU8L/y7momv7FzPvnqXG1h0
59VTozNxleUnbrchJt/Ly/dDlzJwQf5kosQIN2iwbssxXk7HKcP3N716zA1f
tL0jJ1XTccTmW+Elz7ihQP90YU5MGvZRql8xfMENhwV7nkdcS8WO5wp9ed9w
w7u6Lo2K0RR8tj7hy/333GC8rDHz42Uy1nvp7xL3iRvusFhVhr1MwmoMh9kj
35j+mWBJVxxJxAonDa1Wl7hho6tCjWRzAt4bpzrZusoNFXj13anIeCzcKWvk
+Ze531NN/UsoDtO/i4zu2swD0k+ikw01YjDnbvKJt+w8oGLxStp8MQr/tdow
cJ6bB+Jaj6YPSEbiEeXb1xK388Djgs9KS92+uN+nce8xcR7Yynv0zXqPN755
qbRufRcP9Ey3THO4uuFKvpDz52R5QCHK5DEMW2CfH4eSz6rzgB6vWsq/B2bI
UXIHC0ObBybq27cXZtohMxt65KguDzQMfhOhN7og1ZEffuqmzPVwbcabGR+k
wPb26z9zHoA0hdTQ5/5o7+Ex1w4bHvjCKJtKfBiEhP163/k5MuOpemenKhCO
aJevWu9z44G//TMzv1ciEcebiqmPXjzwbbz3PMkqGq1vyTSu8eMBqz3zXWeu
x6B3CR46WyN4IDis6yTv4Xg0edt88HEMDwgFOeJQzwT0aOnEsYxEHog2en+h
PDcR3bCVVNiczQPohtMt9lvJqKF4a+vtfB4oU3T5cvJWCqoY5ZAOKmHyuq5f
V01PQ3nsK/WyFTyQfMCS3LyahpKOzIktVPOAYlp055bhdBTmP1FeV88D1J6u
i6/SMpB3492ttk08IDDCO8qmkons37blCbbwwMlbIUqpzzPRGf4a3qc3eMAe
R3y/IZuFdg3LNkEncz8BNWsO9yy0Et6r3YCZ/Amv7BvPZ6F7+/Q+UPt5ID5R
f0P1YBYqej0TH36PBzoKSmU/f8xCzrkeYnPDPDAooLasypmN5NXXe/T+44GY
61NbSNuyEduvFMuOcR5w/J7stLAzG03Ub10Xm+QB/zHd11OS2ajWrL44fYap
n5FkwpRENvLnlpf/9YYHCGGCxp+3ZCO17rtPrOd4IEtd4jSRJRvRvA19hj7x
gHKLWuDRuSw0K/KW9+A3HuC+E3Iv/k4Wan18run8Eg/w+A+qTeVnoZj4DSfY
V5m8Hkh+PmqThfTlMz94/+GByP6a7lviWUj047aEyY1EmHXQjsz3ykSLJY1i
amxEOJIm3SM0mYF6dJR7mziJcOOYh6WLQgbK+nvfko+XCCLJbGb+KenI+qrp
ehSVCDVWay3HRtOQjO1c8TwfEQ4PaLr8R0hDI3dZxm8LE2FedXlB1jQFlQfm
+uyUIMLGswZdrB7JyHO3KCl7NxH+bOT+UOyfhI5MXW1akyICr+L2c1/PJSJi
OjphL0sEhQ3pJmy2CWjmyKMPDw8RYcAyqV2vLQ41fTNPkFcmQobPZa6CvFgU
VvVJ7AIiQkXhL0tZrxikYxjSy6lGhNaH7tck1KKRIBvByk+TCEQ612ZvahT6
1F64/kKHCB+naupEO8JRisB1+WtGRLhQe/Pdte4gZPZQdZzfjAhJ+HDM330B
aHfkmE+cJRGyf9O2reb7ohUZG9IXWyLsNTty48I3b3TvzdcmEyci9M79ltIY
dUHq5xxKalKIcLN9UkLHyhrTxJbkiZlEMOrMa6ZFO+DZJzHjgblESPRn//64
xBW3JZB9XxcSYcc72YXkRi8cp1BJOlFGBG47H5PNab7YcF76SlslEfw6K06U
//HHYmW3TwhdJEK+2/WvURZB+M6/yYTFJiLIjBcf3/YhDOdccxE/20KEqgzn
3xOUSGxjt9Lbf4MIX0cy933Oj8IbBul/CjERRhzEBM7kxeDRoJqSjf1E4PGd
MlRPiMUVkgcU3O4RQbEx0dHIKw57TveOPxkmgq3NvxutV+LxkQw93yP/EcGa
/83sbGwC9nMN7GabIAJNOktkt3kibtAoJ4xMEqGI8q2LIJGEX4neNSx8yfTD
4Mb2hJkkTP/3qcJqljk+eZe3MikZa09RPu38SITbNUqDRmIpOKpd8dC3BSLE
DNu8qLuSgm/kWkff/E4E+l0l/QLJVPzZK3E46hcRAjPuSogUpmJRnSt8WutE
qNu1yVRzKRWb7hq3JW/kha/fWu9b6afhDJb1puesvLC6GA0iWWm4/5Xo6gVO
Xph7lPun+nYaXuvSUnPl5YVbiR83fJhMwzLF3pmyNF5wF4zVXphLw47+hZNr
W3hhc7r1ZOtsGi493S3Rt40XYp9HX1X+Lw2PSr3zThXlhYWNc8NxTWmYjZO7
y2AnLxxky9qXGZyGVd7Lsgvu5QXL92HPzOSY59mdM/qzMrzgVtU0OPcqFdeX
R51vlOOFoemz4yVHUvFMSN0HPyVeKK+rlFoZTsE0k0cHDiPmep375Y11U7D2
geUIVjVeyODj/d52JxlH8QoOPdTkhYYuBUuaZDK+8ekYveAkL6Q0XAn1i0vC
nwddrC31eWHva2/t8f8SsUhN1uUdJrzQaR05dIiSiI2j2n9+OcsLlN2Tv4vU
E3Ca+czRdmte2KQUPfPbLR7fUWBNj3TghRu5fj5W8XF4hbb32XFXXlB6/qXZ
e2ssll7UFyN58ULW+4+uh0VisP3DYM9nvryw9DajxFc0Go/ED7K4hPOCvGVT
s4JoBK79abs/JYsX2rk687qP+OPpseQw/XxeUNmpZ/R11gdTmq8O8pcweVfM
+pZc9sSaqU8pb8t5oVQpVoV3wgVHOP21uFzNC9TIqGIpVgds9Kw4ZfgGLyQ1
xOR4sOzDKW0943mdvKAgyClson0I9WTNCVv08ILJTpkDwysn0V4tufaF+7zw
uFT9AtukNbKVMN904xEzHykON9UiJ1S0MfZkxGNe4H/wrf6giDt69OJSkcYz
Xhg82C7ZqOaNWDpG3xJf8IJOHCiYOPsgpYJf0k9f84KQIS28NNQPefsIhVS8
5wXFGtnVoIgANCXpTpL5xguL/bqF//RDEIk99+zKEi/k5uvcqhcPQxpvb9X2
rPLC7Ps8yqd34SgMv1pM+ssLUTd3Vg8URKLnD2PL6zeSwKv31MMP36JQDUO5
cCMLCeKmvxZvvRqNPK2+Z5qxkUCzu0SZ3S4GKdRfSmrlIAGPk17LNUIs2rRo
Hc3NRYLxCdLfLTWxaFhxS4gDDwnKeaaFDsvGocKYEZ9uXhJUcLXQhJj91fZB
ghsfhQQFozkvO3fHo720I/beNBKcNY+IZOTGo5/my+b3GSQQa/ZbkvoWj3ov
NhqJbiUB933/I5uOJqC0L3a6oQIkcBqQ5d1QlICM5QWOP9lGgpaOhj3UkQQk
HDWGpIRJYHONX35xJQHN30tWSBAlQVBDzP4SeiJqIx/d/1KcBEsX3/ATJRJR
pNnKboWdJHhSrfRDZ2ci0q5uFs3eTQLempQOY8FERPvsKDC/h7l+7Zj3HpZE
NHNQiKYqTYLOyxTGg5kEVB8+zl0mQwLJVu0GucYE5DOQxrosS4K/XSFSbu4J
6DCv2t+TciQ4eIzvpMzXeMRh+vtnrTwJ/hjEtfgWxaOxypav/xRJoChz792f
Q/Go7KPLB1MVEvRNvHn/aCgOOcmKvL52hASOx59cf28Qh2RDnz3nPEoCvZgy
ffWxWLTelzlmp0qC24nKt+fVY9EA9/EHXeokCDa5tjxxJQZlGf3to2sy9Vz8
85vAE4PMyq93eWqT4IWRyGisdTSSmHO/PqhDgkNxAj5ql6LQt33iV4RPkSDt
zTczfUIk6giaqg0+TQKp1xxfd0aGo7jenIoxAxIkudEX8cdQpMupXbTHmAQX
ohk2/FohKEhqZ2imFQn6T9a7Cxr7oge+r8HEhwQ3O4m33/86jgq6ihSv+pFA
7aGSynv+/ciaVU+WEEiCD26Gc0Mn9+Clgm6xzlASDE5Zpmh36ePul/6CtAgS
oI/PHzhbmuHkXVJ0jygmr+Fm/3+Dttjw3CzPQAwJqhU6G2LjHLFQRynb9ngS
uLyoOxKz0xV/2GTwLzCRBOJd/vt/X/XArSc4V0aTSbDDLedoYJY31nwR9DEm
gwR+Z3NFRCd98bkNxsPvC0nAVjjNb/wkGDewWRjzlZCgXk6Gv7ElFL/htn91
vIwETVsFZhTnwzA/1c01qJwEzVpaxtykCKy/1WepvpIEV+92xIiJR+KU7cER
z6uY9THQfg1Ro/AdiSgOzoskGBs9sJ6ZGoXX9iTmKNWR4GHUf5WbfkdhWdkM
QbdLJLg7kVVRaBONXRXya0svM/UdO7eii6Nx1ZEymeEmErT6+V3eRYvBk2rV
HevNJKjrKropbh2DKSca1KRaSFDcMLNdtToGa5++9siijQSscf5GjosxOMbk
pmnGDRI8Ivw98lokFndY4DfdN0lAP9x4+bxmLP5uN+D+tYMET7dFlZY6xGJJ
14c/t98mAV9jMHEqKBbbej+J0sPMepkrYjGPicUlAVOc0b3MfvDfi3Ah5ngs
7E3etT6m/k6aIaLM+ZyxH4Xe3CXByuVnq072sfhY8rd6yj0mz/MZ6180YnFI
5i9Z1SEmHxXXmPbtsbgl/2+X7zAJopLdUnu/xOD5UtbjNY9I0Kblv1cqMwaL
VnH/92SUBFMhJde+6MRgs3rqWdbHJKi6Hn2+YFMMzrnC/05unAQca5LfxK9G
46E2ES/Hp8z+oVlwqdgoGm/q3LVa8JypT0Xf/aXvUdhn8BDPygvm/m72Ryzp
Ubjh4eHCXa+Y+vY0Szw/GInfPFYTOfOGBAtd/GV3pCMw/+SJy8mzJHAfJrwK
2hKO9V/py3W8Z9broOfBfdqhOOX9GTz/gQQSGiVnNbeE4DufrbUEPpHANOHg
QNqLICy76mkR9pUE+3WuOxSeDMCu//znGheZvP8rLbFY8cNVrOHnXvwgge7W
RcqpEl88yRX3m+cns1+KXn/kdoB5flFS44+sMP22MPewtc8ba2/J4fVaY663
TBHRLfDEMULFxRXrJKjNOSCVmuuGO8QrxUb/kqC7dX+PUKQz/i5Z17RhIxm6
pk4s72qxw5L7r8jv30wGiSc2zhpp1thW/nqvDSsZysyvKPc8MsNjqn3jdwhk
cNsehURidHCL+cs/cRQyRPQYd+vFq6N52/eJ12lkiDEgGFz6q4dEXRbI7xlk
0Irddeeaggky81oqZWwlQ/7XpMZebwuU4/9b4rgAGZ6ViDaHWdihodBNVwO3
kSHtos+lszaOaFMMQal+O/P9o/7pN/VdkE8Gny5BnAwze3Ion/94oheX5qVd
dpCB5Z1dwOcVb6R59zbv/V1k2HLpxcMNzPNSaN3uvyQpMiiRvijHSvijZD75
lg/7yKDZGqe/6BuAlmQ5czVlyWByIsQgvD0QWeu+8K0/SIaHQqXOtgHB6IHL
VUMOeTKsuf5tsywLQYfiY+WcFckgtedNVfDVUFRVacy4p0yG/6w0ZFtbwhBP
1+5fO4+QgYtjjx1XdTgKerr+NBHIcEI8Sy4mOgK9/T5yc+4YGXLb/C/x6UYi
XWJ18XF1Mpyb9njpwBKFbu0OCKk7TobSLa+VRkyjkLi61ll2bTIMZdDmjtdE
oUxrQRUnHTKsH+GYHXkfhdZCvwoO6pLhfoD9o2sHopFD4Z0/O06Twbady/2v
bTQabcmfSTAgg+eXvXeNk6KR8iNn/N6IDF8E7j3vqI5GtR+VKzVMyfCaSVLy
ejSisPJG15ox+Zi5y9V2RaNw4Tc2bBZkEHLzD5PqiEYflK8fc7Qig5PPSkRP
UzQyNEkSG7AhA5/3sopVYTTCPmdZdtiTQdXe/QYhMBpJZki/i3ckw06ntZJT
0tEo/9LGgXfOzPFxzoSva1Fow90ntepuTP2l43ykcBRye1WXeNGDDPJCztaE
0Cg08TvEmdWbDBr0G6dipaPQUT5dLQcfMnDumo461BqJGmVFJO/6keHDQWGH
qpUIxKe7xCkRSAax0wo62lIRKMZl8FNcMBlwmPgh6dPhaCGuZHg2lAyd7bOi
uvZhyLTSo0ktggz0TcGUBsdQ1N8JGTVRZHBdnXQVehCM9j2lerHEkiGu/HZO
zrUgVPL9/Sn7eDLYT4W4ZmYEIjZih0x/IhmSmynfabYBaFrN+ntsGhm2Co+R
Oj77ouPWBx6/zWDG27Va97zaB7WEsrWpZjPj+fr7S/Tpc2hb4fO86lwy+ARc
e+DwyQsltTT6by4gww8V4a3PhT3Qj4eRxnZFZPgtqzZgoeqKLD/qy/eVkEH6
8NqmqAUHdJ9lxxax82ToMdITSFy3RQeFV1diKsjASvrZLMNljV6nq4dtukQG
Z7GLAZjjKFJymYnZ2EUGq5p9gx+RPaYe27is0E2GLOVlI4luR/yZX9zJu4cM
OX2nRaWkXPD5YZcTL/vJsFoz4nvhhQcOuJh2mzFIhpuRQesJvN5YN6J5n+59
MryoeWJRvesc3mkydiH+ARnmj62/kFDywRtklqm3H5LhKOvRSze7fPFzji0J
SyNkiA4ppv+75YdbXiut7Bkjw12h0QiFBn+c0mHhaveEDHWLs7P26QHYLjdq
umSCDEs/nh6PswvEKu7VumPPyKAmcamuYG8QpqkP9BCmmON4U5ayD0F44CfX
xaCXTF5jp9siFUNwxYg039XXZDDrKWW3fBSCg+pPJ8+9Zeo/3WeyzzgU60X7
/RZ6z4x351DNj9FQvNus0MP4Axk6EjTSZZ3C8KYDHS/T58nQ7LiuoXc3jNl/
X5y++5m536N0wQRaOG6d/de3/oUM3bfXeJ4YhuO026KHDi6S4edBVQGlhHDs
UKBe7/aDDAsHnNRu1ofjI17O/NXLZKjqcEzW7QrHDM3UtMlfTL/cPzq/3hOO
vwpf+UteI4O+1Ypj341wfG911Ftrndk/wlP+XTgfjivHfryJ+susN7GV1iL/
cBx8mWF0cwMFHt17fFCJwjx/4hQHv26iwLWzT4U4HoXhPRbmijtZKUBxmVr6
EhaGWQ5FXrZkp8DSt5c3vgiF4Wli1bYCAgUSf8zas7eF4utz/ZkPuSjg7j3/
V0ElFGf0zG1kJVLgP6dvcbHtIdixmNNPhUSBlec/f76XCMFbTuiZXqZRQEuK
tWJlKggvivkOvWFQoJnIM14rFoSH1vNV+LdSoMCV/svDMhBXjd+8clqAAi2n
eMpubQ3AoVemhJO3UcDgRt9l86P+eIbs9NFxBwUappPcRXLP4fb55LPluyiw
gSB32zrPG2f1NT4cl6SAhHDqpncCXti5bATxSFHg9qzfuaZ/7vio//dravso
8NJi5yD/E1fMr0sXD9tPgdC0qs1SxczzbodCQesBCmhkv9xkwO+AH/wz4/gk
R4HXkmulA0O2uOZZeIioAgWEsz3C+oOtsVtFHteMFgWS6h53PmbIoiX9KT1O
HQr83Pxnfb/hMRTGJlpwSJcC1Zd8Lgfu1GPe15ynbPUo8GKHAbtvqyFK82gW
ztSnwN9lC1bxXWcQTeSnQ6chBVj5ci+mxFugsicql+eMmTzVVn0fv7NGjcpD
cnCWAj2yRbs3EBzQwa+kUHcLCvA6sXcLEZxQV5VJT5EVk1d/qljRH2f0kPBO
e9GOAulrj21K+9yR8e09WdscKRD0uFBJIt8TzXj7jGs5M/P3ru/LKfJGjuK3
+ANcmesZfm446nUOfXn6z6rKnQKL6rMVLso+KCBV4+IjTwqIamRVcf7xQX+P
pM+veVOg0vBbi3ibL0r4/njfTl8KeJxj+a/d2g/x1vL7G/hTYKRseL1vkz8q
OmPTERlIgcAJzUNaJf5ImKf+3+VgCogJBYcf3xmAZPzkUlgiKOD8bPlgs0gg
urkzbEQmigLzkps81m8EIpi6Q7OIoYBZYpH71JYgdC+DYJYcx8zvv50rwZ5B
6PQxvYrrCRSoIVzlfdYehCaXC2ZfJ1EgYN/+1uWlIGR76cVuYioFPh+7/GZM
IhjNm4t7KaVTYJeaULmXdjDyIbm1OWYyxwdS3j2wDUZrfddWc7Ip8IX36805
z2AUE7hyBOcy+U3qbOljjjn3oLhP+RQYzKnebMmcnzsTf5+viAIPFX6E3NQK
RoI5w0S1Egr0a/1yCdsUjGrUqYbeZRTgXtBjTR4LQntXzxSXlVNgtdXy83+F
QaitsXLmXiUF0sqFt5voByEV6zmx5Srm+40F57dsCkL9VGkXkYsUqJrpcWLU
BSKdQb8rJ+soIH6wIlzvaCAaD+n8EXyJAoym/S8HRgOQpfQmxdrLTB5aQWnB
RgHo/WvNiLEmCvBw+sY7j/gjz/zMvr/NFBD8IjKUe8Qf/dSc4NjTQoHR5Tiz
31V+KGJdUNekjQLR3v3O2WW+iO2qXW7sDQrEZuPeW199UIZdw7PmmxS40f+4
64SKD+LjW9w23cGMl7DR7HjMOVQ5JG/HcZsCf6yPFzM/6NCuiIj6g5gC4fkn
l38ueSGFd1wH0vsocOmSzfHGq+6op0g/6NZdChjO35joW3NFmjrFt98NUsDm
1JGGK/IuyLR1h+aRYWY+CW+3/U12QK8cPdJdH1FAbbfSo6lyW+TM3zZWMEoB
PeUTxoTr1ujbwzW+vjEKXHGbKE3IsUDB0Uctvj5h6rnvoCu1/Qw6qG24qv2U
uZ6HZ7pUrBH6RnHKr33OzIdrSL1Z+zRyrEl7aDFDgd63Q5/GCo8iUY8Kl1uv
mH56nncjkVnvL+RaWOlvKQDO+1T/WC8cKfrbf8H7HQVMzKbTn+vLYMPBp4eH
5yiwQ2vXlc9japg3a/75znkKfJgLOdeifRIPmf7xj/1MgX/e7r8iH+jjo/Oi
V5QWmfz8p7iKJ8ywNI+n0KU1Jp/RiHvrP+zx/HhUB8sfCnTsc2360+GIL5bn
Glv/o8CU/bMo4UBnbO1U+71zIxW8XOkcve9dsaDMrQw+Fip0bPodwhLtjp+u
PJD0ZaOC2pVNLwvYPHFO78zAIw4q9HnsPRgU6IUJBiz/4nmokEn78SyX5xzu
F+Arfc1LhUMU5YW12nM4ana3/GEKFcj8tBDCIR+s3KTyuIhGhbo9EZG4wwf/
9D/ltcRgzj8e/EdQzhe3HLHl0ttKhQV31iWRi77Yg92/7rIAFYwmB54+lfHD
u0YTVdmFqDDUYsPpm+yHZ4tKXtoKU+G94Lxk17gfrrRpCu0WpULMFmvFVro/
PivZw8cvQYXUi31yplr+mPFjrNV/JxWE+mnCl7398Vjnu1P/7aaCup/ByuVU
f5wet/Jp714qzF2P7DYr8ceaJ7mSkqSpQEsu9mkv88csDCHxWRkq9C9U0u7k
+GM8I9ODDlChOidsJsveH4fUqZqXylFhi/+1quJj/viQt/HKT3kqGFtrf05k
xrOo4JKnr0SFKMPjnWdf+OHGjWEyV1SokHy6npde4oedhzKGCYgKWiYeH1tP
+GGx3AvODkepwO5YoKnw3RfPnG1j6VWlwoVwMamqdF9cIj5YKajBzP88rXBx
my82WniuEqRJBblBl4Qd1T6YdOPzs8faVLBeFf0N23zwcMQ/v30nqRD/z3A3
OnwOJx6nkFNPUYH6SnnbaLU3PkaSaHp/mgps5xOwzmZv/PeZvNYxQyrsc3cV
dm33xH6uFtGrplT48js0OPuLG5Y54L3N6CwVLE1l9n/wc8WffsfcumpBBXnP
RnXGgjOu7c834ramwrTKtxsCJk7YNr1+0cmWCsV9v+NWWhzwNuPO9D57Koxu
Hmlu3GCPnwk92r3diQoa785EhdjY4Ly5V3dDXKhwtGGGl0fBCp+6+sNmwo2p
p9BLk4y6szjokHEmwZMKbWl2z8RPmeLKrptdKt5UaLkm++TFoiH+fi+cr9qP
mc9+21DP0zq44DX7Q69wKoBHMdfPjb+6sZPrWlUkFViIXU6e/LvRh4XhnRPR
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
aZCDTW75bnZAi+kbhj1e08Cq1zDMNtURdbyPeF33lgb2+84kbkNOKA79+fn6
HbO+lLmvsH5wQrpFodyCH2jwJCAQn2Ked1sWV0WM52mQnmvieN3EBb3RCpLP
+kwDnb5pRZXnLqix6qfO0BcakNjYlWZ1XFHAbz9blkUaPDs74djU4oqQ4Y/A
Iz9oEN2v3VPI6YY4ms6lBy3TQAXsNaoN3dAY67eqll80EB4RXR3JckNllp43
P6/SgHAu4dk27IYc2z8/3LHO1EsiczbtpRuSIbm9tf5Lg08LKtu2fXdDa84f
V0o20OHT5qOdMh/cUH+vE3F8Ex16d47VJDDnp/O/F+NlpUNN5qt3dffdkLGv
vaIWOx1ylN0j8mrdkPDwG91YAh389vh76gS4oXlxG/vbXHQwtvp9fUTBDbWF
vwz+xUMHxad/DYW+uKKICYvM/SQ6COZGnlAoYN6H9k3XuFHo8C8nvHjbfldE
STLruEijw5uJlSOPul3Q1KtnIy8ZdNhotaisjVxQjaLJu61b6SC1xykru8UZ
eeaMrxkI0OHP1JUplTtOaJPamMS97XRowUW3Z/0cUWigH/GXCB3+6qgkbux3
QEsNjF8S4nT4RXNJQZwOaI589l7sLjqkGVoe3h5mh6zV/1xtkaRD3PCOhZ46
WzQZVFH8ei+TR0TQROyQDTJoPBpD2kcHHneDVadZazT88q0r2k8Hrl1elyfn
rZA6NcHA8wAdynhcLr76ZI66NXapnJejQ7xY6fmyRTMkHzIkPizPzI+jxtJn
0RRdbXLn+a1Ih+u3Yz/YfDJG+aHLzTeO0WGH0cNRVZmTiNhcWPROjQ6Gz791
iX/URElvFKNpx+ngsdarpFighkK0IvR9TtChUGlyYrVYHv0IE1a+cJIOG7Rj
peWOiyP3q3fERk8xxyrRhyXuLB1599ae+99pOvTYpWmf7NmGLfnYl6UM6UB7
vc+cjSyDd7VuUbroQAe1jf0So3qG+ML7DtEnTnTgdZJduLjTBPPzW3BtdqWD
cJfEk65/pjjv5L8f+92Z8e1TCS0fMMM80RemrT3pwIn932iHmeOENtW7md50
YLiPEe4IW+INH941dfvQYZ+8/uLmNiv8XVcyUjCQDsvZFhv8DGywW8yw04lg
OoiL6dPUN9vi2eueeiGhTH8cM00KbbDFE4KtIs8i6XBTujhry0s7fErPiJM9
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
         "]]},
       Annotation[#, "Charting`Private`Tag$2683#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.805557778776396*^9, {3.8055579613923683`*^9, 3.8055579721198235`*^9}, 
   3.8055581016365585`*^9, {3.805558182429786*^9, 3.805558202758895*^9}, 
   3.8055582835929546`*^9, 3.8055583442140446`*^9, 3.8055583989615574`*^9, 
   3.8055584442800198`*^9, 3.805558532478299*^9, {3.8055585698006277`*^9, 
   3.805558586578246*^9}, {3.805558724902242*^9, 3.8055587518088446`*^9}, {
   3.805560678624977*^9, 3.805560743740835*^9}, {3.805562194389422*^9, 
   3.8055622467625227`*^9}, 3.8055733493063116`*^9, 3.8055737137595463`*^9, 
   3.8055737574451714`*^9, 3.8072783246160946`*^9, 3.807280999568801*^9, 
   3.8072810766067734`*^9, 3.8075448224416714`*^9, 3.8075474465716677`*^9, 
   3.8075536316887608`*^9, {3.8075593283418336`*^9, 3.807559369140475*^9}, 
   3.8075594145488515`*^9, 3.8242114851929913`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"1a884786-c7ee-4a22-a21a-4051ff466035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xC1", " ", "=", " ", 
   RowBox[{
    RowBox[{"xot", "[", "t", "]"}], "+", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xB1", " ", "=", " ", 
   RowBox[{
    RowBox[{"xb", "[", "t", "]"}], "+", " ", 
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yC1", " ", "=", " ", 
   RowBox[{
    RowBox[{"yot", "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yB1", " ", "=", " ", 
   RowBox[{
    RowBox[{"yb", "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xC2", " ", "=", " ", 
   RowBox[{
    RowBox[{"xot", "[", "t", "]"}], "-", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xB2", " ", "=", 
   RowBox[{
    RowBox[{"xb", "[", "t", "]"}], "-", " ", 
    RowBox[{
     FractionBox["lb", "2"], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"li", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yC2", " ", "=", " ", 
   RowBox[{
    RowBox[{"yot", "[", "t", "]"}], " ", "-", " ", 
    RowBox[{
     FractionBox["lot", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yB2", " ", "=", " ", 
    RowBox[{
     RowBox[{"yb", "[", "t", "]"}], " ", "-", " ", 
     RowBox[{
      FractionBox["lb", "2"], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"li", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", " ", "=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"xC1", "-", "xB1"}], ")"}], "2"], "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"yC1", " ", "-", " ", "yB1"}], ")"}], "2"], " ", "-", " ", 
    SuperscriptBox["ls", "2"]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", " ", "=", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xC2", " ", "-", " ", "xB2"}], ")"}], "2"], "+", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"yC2", " ", "-", " ", "yB2"}], ")"}], "2"], " ", "-", " ", 
     SuperscriptBox["ls", "2"]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1expaux", "=", 
   RowBox[{"Expand", "[", "h1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2expaux", "=", 
   RowBox[{"Expand", "[", "h2", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1dot", " ", "=", " ", 
   RowBox[{"Expand", "[", 
    RowBox[{"D", "[", 
     RowBox[{"h1", ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2dot", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"D", "[", 
      RowBox[{"h2", ",", "t"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1dot2", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"D", "[", 
     RowBox[{"h1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2dot2", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"D", "[", 
      RowBox[{"h2", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"xot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"yot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h1dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "]"}]},
      {
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"xot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"yot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{"h2dot", ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"At", " ", "=", " ", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "At", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"\[Lambda]1", "[", "t", "]"}]},
      {
       RowBox[{"\[Lambda]2", "[", "t", "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qdot", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"xot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"yot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]ot", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qdot", ".", "At", ".", "\[Lambda]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7961500148839192`*^9, 3.796150237310034*^9}, 
   3.7970109658837156`*^9, {3.797012751850441*^9, 3.7970127580700893`*^9}, {
   3.797012957969314*^9, 3.7970129817186265`*^9}, {3.7970130153486032`*^9, 
   3.797013322187457*^9}, {3.7970136067248955`*^9, 3.7970136090573673`*^9}, {
   3.797024682533675*^9, 3.7970248479569836`*^9}, {3.7970249945322046`*^9, 
   3.797025000152942*^9}, {3.7970251611791534`*^9, 3.797025168033781*^9}, {
   3.797026013098591*^9, 3.797026052538904*^9}, {3.7970370337253857`*^9, 
   3.7970370814833307`*^9}, {3.7970373949546824`*^9, 
   3.7970374166822095`*^9}, {3.797079266176948*^9, 3.797079439248556*^9}, {
   3.7970795579365315`*^9, 3.7970796995065804`*^9}, {3.7970803830964203`*^9, 
   3.797080448321601*^9}, {3.797085100731135*^9, 3.7970851483473597`*^9}, {
   3.797085214256007*^9, 3.797085231866709*^9}, {3.7970852635164757`*^9, 
   3.797085267567282*^9}, {3.797085314790662*^9, 3.797085501042686*^9}, {
   3.797085540889643*^9, 3.797085577354436*^9}, {3.797086056757043*^9, 
   3.7970861063511887`*^9}, {3.7970865975658884`*^9, 3.79708676475274*^9}, 
   3.797086808562425*^9, {3.797087626567214*^9, 3.7970876671528807`*^9}, {
   3.7970877114310274`*^9, 3.797087769957935*^9}, {3.797087849970097*^9, 
   3.797087919271596*^9}, {3.797096723830722*^9, 3.797096743600049*^9}, {
   3.797096775378889*^9, 3.7970967758034782`*^9}, {3.797097091231843*^9, 
   3.7970971544207373`*^9}, 3.7970986739787846`*^9, {3.797098908869074*^9, 
   3.7970989927624464`*^9}, {3.7970990508709807`*^9, 
   3.7970990928969975`*^9}, {3.7971053609901295`*^9, 
   3.7971053914225307`*^9}, {3.7971054949090323`*^9, 3.797105501194956*^9}, {
   3.7977920016607475`*^9, 3.7977920085499697`*^9}, {3.797849096670327*^9, 
   3.7978492936785927`*^9}, {3.797849331575965*^9, 3.7978493495653367`*^9}, {
   3.797850394033223*^9, 3.797850409812121*^9}, {3.7978509331310654`*^9, 
   3.797850975089986*^9}, {3.7978541671151247`*^9, 3.7978541708743715`*^9}, {
   3.7986515694531236`*^9, 3.798651628928774*^9}, {3.7986517274809084`*^9, 
   3.798651812834546*^9}, {3.7986518653489027`*^9, 3.798651867181385*^9}, {
   3.7986529535913963`*^9, 3.7986529563906517`*^9}, {3.798653160234*^9, 
   3.7986532415705633`*^9}, {3.7986532865133195`*^9, 3.798653369541637*^9}, {
   3.7986534058624907`*^9, 3.7986534067073193`*^9}, {3.798653449794532*^9, 
   3.798653565389599*^9}, {3.798655687645901*^9, 3.7986557335853767`*^9}, {
   3.798655790529843*^9, 3.798655892164824*^9}, {3.798656184658167*^9, 
   3.7986562800695877`*^9}, {3.798656325777157*^9, 3.798656505489358*^9}, {
   3.798656540062578*^9, 3.7986566527088284`*^9}, {3.7986567005359707`*^9, 
   3.7986567013964405`*^9}, {3.800179611001259*^9, 3.8001796127727604`*^9}, {
   3.8013381458654175`*^9, 3.8013381481707935`*^9}, {3.8021161343688455`*^9, 
   3.802116141459276*^9}, {3.802118641938096*^9, 3.8021186424572515`*^9}, {
   3.8021186806777334`*^9, 3.80211890948668*^9}, {3.8021189828106365`*^9, 
   3.8021190855173225`*^9}, {3.8021191602361617`*^9, 
   3.8021192712005568`*^9}, {3.8021193223967695`*^9, 3.802119324401766*^9}, {
   3.802119414053112*^9, 3.802119540886101*^9}, {3.802120148615127*^9, 
   3.8021202071178513`*^9}, {3.8045452232491817`*^9, 3.804545241844062*^9}, {
   3.804546307049661*^9, 3.8045463164717703`*^9}, {3.8045810790789423`*^9, 
   3.8045810821303215`*^9}, {3.8045812825324955`*^9, 
   3.8045812833971806`*^9}, {3.8051888781060457`*^9, 
   3.8051888817059813`*^9}, {3.805189391889347*^9, 3.8051895027633524`*^9}, {
   3.8051957470631943`*^9, 3.8051957646832323`*^9}, {3.805195841085389*^9, 
   3.8051958450159917`*^9}, {3.8051976722161074`*^9, 3.805197680465746*^9}, {
   3.8051977116649995`*^9, 3.80519772399159*^9}, {3.805197986479168*^9, 
   3.8051980259473195`*^9}, {3.8051983344447947`*^9, 3.805198345045067*^9}, {
   3.8052089292276897`*^9, 3.805208952157153*^9}, {3.805209413572955*^9, 
   3.8052094176068287`*^9}, {3.8052097657140484`*^9, 3.805209782023794*^9}, 
   3.807547656731267*^9, 3.8075540033287888`*^9, {3.8075605719115906`*^9, 
   3.8075606102061467`*^9}, 3.8075606424808598`*^9, {3.82421147284877*^9, 
   3.824211473154711*^9}, 3.824212064419693*^9, 3.824212967868552*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"46531b23-8898-4625-8c24-005ead5ef8e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["ls", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["lb", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
  RowBox[{"lb", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["li", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"li", " ", "lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["lot", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["li", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"]}], "-", 
  RowBox[{"li", " ", "lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["lb", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
  RowBox[{"lb", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["li", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["li", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
  RowBox[{"li", " ", "lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"li", " ", "lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["lot", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], "2"]}], "-", 
  RowBox[{"lb", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xb", "[", "t", "]"}]}], "+", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xb", "[", "t", "]"}]}], "+", 
  RowBox[{"lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xb", "[", "t", "]"}]}], "-", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xb", "[", "t", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"xb", "[", "t", "]"}], "2"], "+", 
  RowBox[{"lb", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xot", "[", "t", "]"}]}], "-", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xot", "[", "t", "]"}]}], "-", 
  RowBox[{"lot", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xot", "[", "t", "]"}]}], "+", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"xot", "[", "t", "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"xb", "[", "t", "]"}], " ", 
   RowBox[{"xot", "[", "t", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"xot", "[", "t", "]"}], "2"], "+", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yb", "[", "t", "]"}]}], "-", 
  RowBox[{"lb", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yb", "[", "t", "]"}]}], "+", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yb", "[", "t", "]"}]}], "+", 
  RowBox[{"lot", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yb", "[", "t", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"yb", "[", "t", "]"}], "2"], "-", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yot", "[", "t", "]"}]}], "+", 
  RowBox[{"lb", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yot", "[", "t", "]"}]}], "-", 
  RowBox[{"2", " ", "li", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yot", "[", "t", "]"}]}], "-", 
  RowBox[{"lot", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"yot", "[", "t", "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"yb", "[", "t", "]"}], " ", 
   RowBox[{"yot", "[", "t", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"yot", "[", "t", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.8075606434921293`*^9, 3.824211491288774*^9, 
  3.8242120659160676`*^9, 3.8242145995119066`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"cb6eb787-0695-44fb-b6d9-d7d4a9a4576c"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7970374095603204`*^9},ExpressionUUID->"1dcee5cb-537d-40d6-a9d6-\
cd562d630c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Para", " ", "o", " ", "lado", " ", "direito", " ", "da", " ", "maca", " ", 
    RowBox[{"\[Theta]1", "[", "t", "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h1exp", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["ls", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lb", "2"]}], " ", "+", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
      SuperscriptBox["li", "2"], " ", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lot", "2"]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"xb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"xb", "[", "t", "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"xot", "[", "t", "]"}], "2"], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"yb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"yb", "[", "t", "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"yot", "[", "t", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"E1", " ", "Cos", 
       RowBox[{"(", "\[Theta]1", ")"}]}], " ", "+", " ", 
      RowBox[{"F1", " ", "Sin", 
       RowBox[{"(", "\[Theta]1", ")"}]}], " ", "+", " ", "G1"}], " ", "=", 
     " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E1", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"h1exp", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F1", " ", "=", 
     RowBox[{"D", "[", 
      RowBox[{"h1exp", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G1", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "h1exp", "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"E1", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"F1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F1"}], "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F1", "2"], "-", 
         SuperscriptBox["G1", "2"], "+", 
         SuperscriptBox["E1", "2"]}], "]"}]}], 
      RowBox[{"G1", "-", "E1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F1"}], "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F1", "2"], "-", 
         SuperscriptBox["G1", "2"], "+", 
         SuperscriptBox["E1", "2"]}], "]"}]}], 
      RowBox[{"G1", "-", "E1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta11", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["u1", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u1", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B1", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "interna"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta12", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["u2", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u2", "2"]}], ")"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "configura\[CCedilla]\[ATilde]o", " ", "B1", " ", 
     "posi\[CCedilla]\[ATilde]o", " ", "externa"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"theta12", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "\[Rule]", "2"}], ",", 
       RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
       RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
       RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"xot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"yot", "[", "t", "]"}], "\[Rule]", "0.4"}], ",", " ", 
       RowBox[{
        RowBox[{"xb", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"yb", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Para", " ", "o", " ", "lado", " ", "esquerdo", " ", "da", " ", "maca", 
     " ", 
     RowBox[{"\[Theta]2", "[", "t", "]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2exp", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["ls", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lb", "2"]}], " ", "-", 
      RowBox[{"lb", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", "+", 
      SuperscriptBox["li", "2"], " ", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["lot", "2"]}], " ", "-", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"li", " ", "lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"xb", "[", "t", "]"}], "2"], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"xb", "[", "t", "]"}], " ", 
       RowBox[{"xot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"xot", "[", "t", "]"}], "2"], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "-", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "+", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yb", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"yb", "[", "t", "]"}], "2"], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "+", 
      RowBox[{"lb", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", "li", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "-", 
      RowBox[{"lot", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"yb", "[", "t", "]"}], " ", 
       RowBox[{"yot", "[", "t", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"yot", "[", "t", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"E2", " ", "Cos", 
       RowBox[{"(", "\[Theta]2", ")"}]}], " ", "+", " ", 
      RowBox[{"F2", " ", "Sin", 
       RowBox[{"(", "\[Theta]2", ")"}]}], " ", "+", " ", "G2"}], " ", "=", 
     " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E2", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"h2exp", ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F2", " ", "=", 
     RowBox[{"D", "[", 
      RowBox[{"h2exp", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G2", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "h2exp", "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"E2", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"Expand", "[", 
       RowBox[{"F1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F2"}], "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F2", "2"], "-", 
         SuperscriptBox["G2", "2"], "+", 
         SuperscriptBox["E2", "2"]}], "]"}]}], 
      RowBox[{"G2", "-", "E2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "F2"}], "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["F2", "2"], "-", 
         SuperscriptBox["G2", "2"], "+", 
         SuperscriptBox["E2", "2"]}], "]"}]}], 
      RowBox[{"G2", "-", "E2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta21", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["v1", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["v1", "2"]}], ")"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "configura\[CCedilla]\[ATilde]o", " ", "B2", " ", 
      "posi\[CCedilla]\[ATilde]o", " ", "externa"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"theta22", " ", "=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["v2", "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["v2", "2"]}], ")"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "configura\[CCedilla]\[ATilde]o", " ", "B2", " ", 
      "posi\[CCedilla]\[ATilde]o", " ", "interna"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"theta21", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lb", "\[Rule]", "2"}], ",", 
        RowBox[{"ls", "\[Rule]", "0.3"}], ",", " ", 
        RowBox[{"li", "\[Rule]", "0.2"}], ",", " ", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]ot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"xot", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"yot", "[", "t", "]"}], "\[Rule]", "0.4"}], ",", " ", 
        RowBox[{
         RowBox[{"xb", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"yb", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]b", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7987472771833405`*^9, 3.7987473587904406`*^9}, {
   3.7987474082213583`*^9, 3.7987474611587763`*^9}, {3.7987474987232275`*^9, 
   3.798747637254788*^9}, {3.7987476688807435`*^9, 3.7987476786099987`*^9}, {
   3.798747759050618*^9, 3.7987477778051147`*^9}, 3.798748002717452*^9, {
   3.7987512595453496`*^9, 3.7987512836727257`*^9}, {3.7987517640025597`*^9, 
   3.7987518879428906`*^9}, {3.7987519520156784`*^9, 
   3.7987519819396534`*^9}, {3.7987520532350435`*^9, 
   3.7987520773164797`*^9}, {3.7987521647215786`*^9, 3.798752171812319*^9}, {
   3.798752320686392*^9, 3.798752324694767*^9}, {3.798752368219489*^9, 
   3.7987523939088435`*^9}, {3.7987526053419466`*^9, 
   3.7987526119682474`*^9}, {3.798752985779747*^9, 3.7987529913730125`*^9}, {
   3.798753064459014*^9, 3.7987530658345017`*^9}, {3.7987531447774887`*^9, 
   3.7987531517039404`*^9}, {3.7987531993062944`*^9, 3.798753234780369*^9}, {
   3.7987532674551964`*^9, 3.798753281516276*^9}, {3.798756543940822*^9, 
   3.7987565461815968`*^9}, {3.7987575119828615`*^9, 3.798757594390726*^9}, {
   3.8001797246904917`*^9, 3.800179755884306*^9}, {3.800179940859518*^9, 
   3.800179942216119*^9}, {3.800180095710779*^9, 3.800180149444025*^9}, {
   3.8001802621873984`*^9, 3.800180362081149*^9}, {3.800180399833151*^9, 
   3.800180471938245*^9}, {3.8001806597916746`*^9, 3.8001807645693593`*^9}, {
   3.800180816818575*^9, 3.8001808992400703`*^9}, {3.800181273215073*^9, 
   3.800181308640296*^9}, {3.8001813739964666`*^9, 3.8001814272041183`*^9}, {
   3.8001818461323457`*^9, 3.800181964998339*^9}, {3.8001819965299816`*^9, 
   3.8001820030425587`*^9}, {3.800182573214054*^9, 3.800182593042007*^9}, {
   3.800182634523034*^9, 3.800182714578855*^9}, {3.80018319144109*^9, 
   3.8001832651608667`*^9}, 3.8001834303535748`*^9, {3.8001834981561813`*^9, 
   3.800183508955289*^9}, {3.800183705290534*^9, 3.8001837416382923`*^9}, {
   3.800183999602153*^9, 3.800184040711172*^9}, {3.8001845940034504`*^9, 
   3.8001846016639543`*^9}, {3.800785951904145*^9, 3.800785975133509*^9}, {
   3.800786406417*^9, 3.8007864178127837`*^9}, 3.8007894529647107`*^9, {
   3.800789578982834*^9, 3.8007896099360476`*^9}, {3.800789671680832*^9, 
   3.8007896782612066`*^9}, {3.800789711191165*^9, 3.800789764958418*^9}, {
   3.800789832320367*^9, 3.80078983916407*^9}, {3.800789905086034*^9, 
   3.8007899258185673`*^9}, {3.80078997955394*^9, 3.800789993146569*^9}, {
   3.80079002650937*^9, 3.8007900871312976`*^9}, {3.8007901404767323`*^9, 
   3.8007901549559684`*^9}, {3.8007902737956696`*^9, 3.800790352394539*^9}, {
   3.800794883647307*^9, 3.800794897783482*^9}, {3.8010009889138317`*^9, 
   3.801000998874222*^9}, {3.801003978475292*^9, 3.801003985318049*^9}, 
   3.801004241334572*^9, {3.801004298360117*^9, 3.801004337792693*^9}, {
   3.801008758418641*^9, 3.8010087625765305`*^9}, {3.8013392491953983`*^9, 
   3.801339328960471*^9}, {3.801339366863848*^9, 3.8013393774883127`*^9}, {
   3.8013396544910884`*^9, 3.8013396746689186`*^9}, {3.801339767836833*^9, 
   3.8013398132019567`*^9}, 3.801339936438534*^9, {3.801351562118303*^9, 
   3.801351594111581*^9}, {3.802042146293869*^9, 3.802042153549081*^9}, {
   3.8020422595551577`*^9, 3.8020422670037127`*^9}, {3.8020430437857265`*^9, 
   3.8020430478968725`*^9}, {3.802043114523828*^9, 3.802043122370268*^9}, {
   3.8021202484965277`*^9, 3.8021204063235607`*^9}, {3.802122197986263*^9, 
   3.8021222215308194`*^9}, {3.8021228621118107`*^9, 3.802122907546113*^9}, 
   3.802123020853615*^9, 3.802123166536572*^9, 3.802124350087191*^9, {
   3.8021248015508175`*^9, 3.8021248064825935`*^9}, {3.802124845888503*^9, 
   3.8021248481285114`*^9}, {3.8045452725290737`*^9, 
   3.8045452962354045`*^9}, {3.8045453352315006`*^9, 3.804545336328273*^9}, {
   3.8045453752906165`*^9, 3.8045454048266697`*^9}, 3.8045454395332727`*^9, {
   3.804545618397917*^9, 3.804545623731288*^9}, {3.8045456831474624`*^9, 
   3.8045456966687446`*^9}, {3.804545819761959*^9, 3.8045458233401947`*^9}, {
   3.8045458775120707`*^9, 3.804545964996994*^9}, 3.804546042241974*^9, {
   3.8045461036693482`*^9, 3.804546105373272*^9}, 3.8045461748404474`*^9, {
   3.8045462415244493`*^9, 3.8045462562301817`*^9}, {3.8045463271458006`*^9, 
   3.8045463361696196`*^9}, {3.8045463984005933`*^9, 3.804546400050576*^9}, {
   3.804546461131978*^9, 3.8045465016996355`*^9}, {3.8045465410922065`*^9, 
   3.8045465695704126`*^9}, {3.8045466804017115`*^9, 3.804546683924264*^9}, {
   3.804581132722577*^9, 3.804581544575041*^9}, {3.8045820112824144`*^9, 
   3.8045820406490583`*^9}, 3.8045821413353376`*^9, {3.804583049828171*^9, 
   3.8045830773434024`*^9}, {3.805198089519393*^9, 3.8051981010723343`*^9}, {
   3.8051983632997613`*^9, 3.8051983786405015`*^9}, {3.805198411496668*^9, 
   3.8051984592524962`*^9}, {3.805198517070976*^9, 3.8051985964668345`*^9}, {
   3.805198635267267*^9, 3.805198710741084*^9}, {3.8051987475960445`*^9, 
   3.8051987579984217`*^9}, {3.805212520457553*^9, 3.8052125246656294`*^9}, {
   3.805557345047286*^9, 3.805557441282953*^9}, {3.807278342817509*^9, 
   3.8072783518141065`*^9}, {3.80754687486067*^9, 3.8075469312936974`*^9}, {
   3.807547109648714*^9, 3.8075471132560663`*^9}, {3.807547151563619*^9, 
   3.807547160900649*^9}, {3.80754732588642*^9, 3.8075473298029456`*^9}, 
   3.8075475449026947`*^9, 3.8075475961612196`*^9, {3.807547670166305*^9, 
   3.807547688202071*^9}, {3.807547747802679*^9, 3.807547750609173*^9}, {
   3.807547875687707*^9, 3.80754791089156*^9}, {3.807547949346718*^9, 
   3.80754798403096*^9}, {3.807548066272021*^9, 3.807548088346983*^9}, {
   3.8075481282293234`*^9, 3.807548170633951*^9}, {3.807548201911273*^9, 
   3.8075482454428544`*^9}, {3.807548727420938*^9, 3.8075487376256795`*^9}, {
   3.807549094301774*^9, 3.8075490962316437`*^9}, {3.8075491967562885`*^9, 
   3.8075492267750072`*^9}, {3.807549351098524*^9, 3.80754936211403*^9}, {
   3.8075495396043596`*^9, 3.807549546314417*^9}, 3.8075510243183994`*^9, {
   3.807551126790347*^9, 3.807551135376399*^9}, {3.8075606623052797`*^9, 
   3.8075607893586035`*^9}, {3.8075615004843793`*^9, 
   3.8075615039391394`*^9}, {3.8075618048616915`*^9, 3.807561808978801*^9}, {
   3.807562251268332*^9, 3.8075622536898575`*^9}, {3.82421196769451*^9, 
   3.8242119800276685`*^9}, 3.824214678631983*^9, {3.824215216026686*^9, 
   3.824215235576417*^9}, {3.8242153730917697`*^9, 3.8242153754866257`*^9}, {
   3.824215439992052*^9, 3.8242154831690626`*^9}, {3.8242155150368977`*^9, 
   3.8242155173268003`*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"58440a08-1239-47e6-86c3-bbe4465df837"],

Cell[BoxData["1.059805579497851`"], "Output",
 CellChangeTimes->{
  3.8052076217554197`*^9, 3.805208831041794*^9, 3.8052089594095526`*^9, 
   3.805209424296728*^9, 3.8052125255254364`*^9, 3.8052146074725485`*^9, 
   3.8055500624866047`*^9, {3.805557353206849*^9, 3.8055573800861917`*^9}, {
   3.805557435524724*^9, 3.805557443116413*^9}, 3.805562122575598*^9, 
   3.805562256290996*^9, {3.807278335100236*^9, 3.807278352242951*^9}, 
   3.807281016125523*^9, 3.8072810861034102`*^9, 3.807544830020404*^9, {
   3.80754687804116*^9, 3.8075468936264315`*^9}, 3.8075469329482727`*^9, 
   3.80754711499741*^9, 3.807547161791267*^9, 3.807547331770684*^9, 
   3.8075474619605107`*^9, 3.807547545707543*^9, 3.8075475976093483`*^9, {
   3.8075479600800133`*^9, 3.80754798511207*^9}, {3.8075480674977407`*^9, 
   3.807548088988268*^9}, {3.807548133666814*^9, 3.8075481427315397`*^9}, {
   3.8075481741345572`*^9, 3.8075482469698057`*^9}, 3.8075484568165703`*^9, 
   3.8075487392503023`*^9, {3.8075492082784395`*^9, 3.8075492275219755`*^9}, 
   3.807549362904915*^9, 3.80754954794705*^9, 3.807551136052538*^9, 
   3.807553632125591*^9, 3.807556687394351*^9, 3.807559427342662*^9, 
   3.8075607932981024`*^9, 3.8075615055199137`*^9, 3.8075618096162276`*^9, 
   3.8075622545724955`*^9, 3.8242114974268827`*^9, 3.824211982409753*^9, 
   3.824212071544656*^9, 3.8242146833816805`*^9, 3.8242152367864747`*^9, 
   3.8242154876666665`*^9, 3.8242155188570147`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"6af21107-762d-449e-949b-24c80e262e23"],

Cell[BoxData["2.081787074091939`"], "Output",
 CellChangeTimes->{
  3.8052076217554197`*^9, 3.805208831041794*^9, 3.8052089594095526`*^9, 
   3.805209424296728*^9, 3.8052125255254364`*^9, 3.8052146074725485`*^9, 
   3.8055500624866047`*^9, {3.805557353206849*^9, 3.8055573800861917`*^9}, {
   3.805557435524724*^9, 3.805557443116413*^9}, 3.805562122575598*^9, 
   3.805562256290996*^9, {3.807278335100236*^9, 3.807278352242951*^9}, 
   3.807281016125523*^9, 3.8072810861034102`*^9, 3.807544830020404*^9, {
   3.80754687804116*^9, 3.8075468936264315`*^9}, 3.8075469329482727`*^9, 
   3.80754711499741*^9, 3.807547161791267*^9, 3.807547331770684*^9, 
   3.8075474619605107`*^9, 3.807547545707543*^9, 3.8075475976093483`*^9, {
   3.8075479600800133`*^9, 3.80754798511207*^9}, {3.8075480674977407`*^9, 
   3.807548088988268*^9}, {3.807548133666814*^9, 3.8075481427315397`*^9}, {
   3.8075481741345572`*^9, 3.8075482469698057`*^9}, 3.8075484568165703`*^9, 
   3.8075487392503023`*^9, {3.8075492082784395`*^9, 3.8075492275219755`*^9}, 
   3.807549362904915*^9, 3.80754954794705*^9, 3.807551136052538*^9, 
   3.807553632125591*^9, 3.807556687394351*^9, 3.807559427342662*^9, 
   3.8075607932981024`*^9, 3.8075615055199137`*^9, 3.8075618096162276`*^9, 
   3.8075622545724955`*^9, 3.8242114974268827`*^9, 3.824211982409753*^9, 
   3.824212071544656*^9, 3.8242146833816805`*^9, 3.8242152367864747`*^9, 
   3.8242154876666665`*^9, 3.8242155188769417`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"e8f3391a-c54e-4b1e-b532-b8a85e5230fb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], " ", "Mot", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"xot", "[", "t", "]"}], ",", "t"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"yot", "[", "t", "]"}], ",", "t"}], "]"}], "2"], "+", " ", 
      RowBox[{
       FractionBox["1", "12"], 
       SuperscriptBox["lot", "2"], " ", 
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]ot", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", " ", "=", " ", 
   RowBox[{
    RowBox[{"Mot", "*", "g", " ", "*", 
     RowBox[{"yot", "[", "t", "]"}]}], "  ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"kb", " "}], "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"xb", "[", "t", "]"}], "-", 
        RowBox[{"xot", "[", "t", "]"}]}], ")"}], "2"]}], "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"kb", " "}], "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"xot", "[", "t", "]"}], "-", 
        RowBox[{"xb", "[", "t", "]"}]}], ")"}], "2"]}], "+", " ", 
    RowBox[{
     FractionBox["1", "2"], "kA", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["Pi", "3"], "-", 
        RowBox[{"\[Theta]1", "[", "t", "]"}]}], ")"}], "2"]}], " ", "+", " ", 
    RowBox[{
     FractionBox["1", "2"], "kA", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        FractionBox[
         RowBox[{"2", "*", "Pi"}], "3"]}], ")"}], "2"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["cb", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"xb", "[", "t", "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"xot", "[", "t", "]"}], ",", "t"}], "]"}]}], ")"}], "2"]}], 
    "+", 
    RowBox[{
     FractionBox["cb", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"xot", "[", "t", "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"xb", "[", "t", "]"}], ",", "t"}], "]"}]}], ")"}], "2"]}], 
    "+", " ", 
    RowBox[{
     FractionBox["1", "2"], "cA", " ", 
     SuperscriptBox[
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}], " ", 
    "+", " ", 
    RowBox[{
     FractionBox["1", "2"], "cA", " ", 
     SuperscriptBox[
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], ",", "t"}], "]"}], "2"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"qdot", ".", "At", ".", "\[Lambda]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//", "First"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7710708339960613`*^9, 3.77107083780488*^9}, {
   3.7710709098058157`*^9, 3.7710710436231127`*^9}, {3.7710711048923817`*^9, 
   3.771071139011381*^9}, {3.771071348419466*^9, 3.771071406987405*^9}, {
   3.7710715579164705`*^9, 3.7710715821435604`*^9}, {3.7710722942201223`*^9, 
   3.7710723204598265`*^9}, {3.7710723598204527`*^9, 
   3.7710724395573545`*^9}, {3.771072588753183*^9, 3.771072620344256*^9}, {
   3.771072669992793*^9, 3.7710727274043074`*^9}, {3.7710727966898427`*^9, 
   3.771072872479864*^9}, {3.771072913757844*^9, 3.771073033524934*^9}, {
   3.7710735013545737`*^9, 3.771073589662245*^9}, {3.7710736209745283`*^9, 
   3.7710736307451878`*^9}, {3.771074106757812*^9, 3.771074159438382*^9}, {
   3.771074637159964*^9, 3.771074708722269*^9}, {3.7710754519761086`*^9, 
   3.771075470627987*^9}, {3.771086689274866*^9, 3.7710866907859383`*^9}, {
   3.7710869105856*^9, 3.7710870500617266`*^9}, {3.771087147374815*^9, 
   3.7710871509765944`*^9}, {3.771253391677907*^9, 3.771253405677308*^9}, {
   3.777228238217062*^9, 3.7772282799553485`*^9}, {3.7772283162190056`*^9, 
   3.777228340214219*^9}, {3.777228421549562*^9, 3.7772285042659826`*^9}, 
   3.7772917658571043`*^9, 3.777291897956624*^9, {3.7774024744665985`*^9, 
   3.7774025306599913`*^9}, {3.777402562085614*^9, 3.7774025652276754`*^9}, {
   3.7774026268796844`*^9, 3.7774026367605977`*^9}, {3.777402725927675*^9, 
   3.77740273086961*^9}, {3.777402791378333*^9, 3.777402803530838*^9}, {
   3.777402851632204*^9, 3.777402868513795*^9}, {3.777402918476009*^9, 
   3.7774029271626577`*^9}, {3.7774029815501595`*^9, 3.777403016538587*^9}, {
   3.777632214024818*^9, 3.777632231513698*^9}, {3.777722095346839*^9, 
   3.777722102019783*^9}, {3.7806905474852257`*^9, 3.7806905509546986`*^9}, {
   3.796150251792301*^9, 3.79615044106409*^9}, 3.797087018832646*^9, {
   3.797087477622899*^9, 3.797087507215741*^9}, {3.7971003054287844`*^9, 
   3.797100314299059*^9}, {3.7971028520466013`*^9, 3.797102858456749*^9}, {
   3.797102957314667*^9, 3.797102968667633*^9}, {3.797103118712126*^9, 
   3.797103120966442*^9}, {3.7971031588007593`*^9, 3.7971031951751757`*^9}, {
   3.7971032536591005`*^9, 3.7971032740377493`*^9}, {3.7971048525078*^9, 
   3.797104862548818*^9}, {3.7971049284386263`*^9, 3.7971049957248244`*^9}, {
   3.797118734941372*^9, 3.797118757816075*^9}, {3.7978504278170214`*^9, 
   3.797850429135762*^9}, {3.7978504617691813`*^9, 3.7978504623861637`*^9}, 
   3.800797378580963*^9, 3.8007978868917603`*^9, {3.8007979284494066`*^9, 
   3.800797948121763*^9}, 3.8007983451525154`*^9, 3.8007983793049273`*^9, {
   3.8007998273323345`*^9, 3.800799829461918*^9}, {3.801007803170352*^9, 
   3.8010078400138874`*^9}, {3.8010079190916348`*^9, 3.801007925273144*^9}, {
   3.801008815964772*^9, 3.801008826393865*^9}, {3.801008861556857*^9, 
   3.8010088623178215`*^9}, {3.801008919177868*^9, 3.801008919996661*^9}, {
   3.8013204280548773`*^9, 3.8013204290249395`*^9}, {3.8013354011588435`*^9, 
   3.8013354042834415`*^9}, {3.801335597970683*^9, 3.8013356053519545`*^9}, {
   3.8013358451010275`*^9, 3.8013358541801753`*^9}, {3.801338194412949*^9, 
   3.8013382009245367`*^9}, {3.801338363079425*^9, 3.801338363596286*^9}, {
   3.801338441706807*^9, 3.8013384462188416`*^9}, 3.8013389097398224`*^9, {
   3.801339113445095*^9, 3.801339128556987*^9}, {3.8013394138031282`*^9, 
   3.8013394156381116`*^9}, {3.8013399566451783`*^9, 3.801339969991335*^9}, {
   3.8013400138178854`*^9, 3.801340033373307*^9}, {3.8013501583668594`*^9, 
   3.801350158922138*^9}, {3.801350957355009*^9, 3.8013509912431746`*^9}, {
   3.801351513142573*^9, 3.801351513850819*^9}, {3.801351671472398*^9, 
   3.801351693755477*^9}, 3.804583583557273*^9, {3.8052051089532614`*^9, 
   3.8052052874137535`*^9}, {3.8052064386259713`*^9, 3.805206443861613*^9}, 
   3.8052094278499746`*^9, {3.805209738096653*^9, 3.805209752707383*^9}, {
   3.805212548697358*^9, 3.805212551483933*^9}, {3.8052146268195686`*^9, 
   3.805214643329731*^9}, {3.8072783601654797`*^9, 3.807278361328601*^9}, {
   3.8075563327836094`*^9, 3.8075563531791005`*^9}, {3.807556600235443*^9, 
   3.807556621940397*^9}, {3.80756139069775*^9, 3.8075614247117877`*^9}, {
   3.824214912697469*^9, 3.824214919312081*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"94c95cbb-ae66-48e1-bc2a-c1accdff1c6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckQ]", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xot", "[", "t", "]"}], ",", 
     RowBox[{"yot", "[", "t", "]"}], ",", " ", 
     RowBox[{"\[Theta]ot", "[", "t", "]"}], ",", " ", 
     RowBox[{"\[Theta]1", "[", "t", "]"}], ",", " ", 
     RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckE]", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"T", ",", 
               RowBox[{"D", "[", 
                RowBox[{"#", ",", "t"}], "]"}]}], "]"}], ",", "t"}], "]"}], 
           "-", 
           RowBox[{"D", "[", 
            RowBox[{"T", ",", "#"}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{"V", ",", "#"}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{"R", ",", 
             RowBox[{"D", "[", 
              RowBox[{"#", ",", "t"}], "]"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{"H", ",", 
             RowBox[{"D", "[", 
              RowBox[{"#", ",", "t"}], "]"}]}], "]"}]}], "\[Equal]", "0"}], 
         ")"}], " ", "&"}], " ", "/@", " ", 
       RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}]}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h1dot2", "+", 
          RowBox[{"2", "*", "\[Zeta]", "*", "\[Omega]", "*", "h1dot"}], "+", 
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], "*", "h1exp"}]}], "\[Equal]", 
         "0"}], ")"}], " ", ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h2dot2", "+", 
          RowBox[{"2", "*", "\[Zeta]", "*", "\[Omega]", "*", "h2dot"}], "+", 
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], "*", "h2exp"}]}], "\[Equal]", 
         "0"}], ")"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckE]", "[", "t", "]"}], "//", "TableForm"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797852586927451*^9, 3.7978525929291716`*^9}, {
  3.7978526302509017`*^9, 3.79785264723812*^9}, {3.7978538071023755`*^9, 
  3.797853826593302*^9}, {3.7978541472921305`*^9, 3.7978541504731894`*^9}, {
  3.801000812466301*^9, 3.801000866791662*^9}, {3.805205294294631*^9, 
  3.805205302437644*^9}, {3.80520533336254*^9, 3.8052053403771505`*^9}, {
  3.8055500376485014`*^9, 3.805550041718566*^9}, {3.807544990884091*^9, 
  3.8075449989953966`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"7b841b07-b8ce-4a4b-8b42-0c93944af92a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "kb"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xb", "[", "t", "]"}], "-", 
           RowBox[{"xot", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"kb", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"xot", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "lb"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"xot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"xot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "-", 
        RowBox[{"cb", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["xb", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            SuperscriptBox["xot", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"cb", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["xot", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"Mot", " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "Mot"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"yot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"yot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{"Mot", " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "li"}], " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "12"], " ", 
         SuperscriptBox["lot", "2"], " ", "Mot", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "kA"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["\[Pi]", "3"], "-", 
           RowBox[{"\[Theta]1", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "lb"}], " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]1", "[", "t", "]"}]}], "+", 
        RowBox[{"cA", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"kA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "3"]}], "+", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Lambda]2", "[", "t", "]"}]}], "+", 
        RowBox[{"cA", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["lb", "2"], "4"], "+", 
           SuperscriptBox["li", "2"], "+", 
           FractionBox[
            SuperscriptBox["lot", "2"], "4"], "-", 
           SuperscriptBox["ls", "2"], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"xb", "[", "t", "]"}], "2"], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"xot", "[", "t", "]"}], "2"], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"yb", "[", "t", "]"}], "2"], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"yot", "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["xb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["xot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["yb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["yot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "\[Zeta]", " ", "\[Omega]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["ls", "2"]}], "+", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["lb", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["li", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["lot", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["li", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["lb", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["li", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["li", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["lot", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"xb", "[", "t", "]"}], "2"], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"xot", "[", "t", "]"}], "2"], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"yb", "[", "t", "]"}], "2"], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"yot", "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["xb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["xot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["yb", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["yot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"4", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]b", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]ot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", "\[Zeta]", " ", "\[Omega]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "lb"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["xot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yb", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["yot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lb", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", "li", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]b", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"li", " ", "lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"xot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yb", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"lot", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"yot", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]ot", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["xot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yb", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["yot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lb", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "li", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]b", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "lb", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"li", " ", "lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]b", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"xot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yb", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lot", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"yot", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]ot", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.797801772772564*^9, 3.7978017899882154`*^9}, 
   3.797805927379837*^9, 3.7978497239163756`*^9, 3.7978504549679937`*^9, 
   3.7978504856987658`*^9, 3.797852650372779*^9, {3.7978538153200636`*^9, 
   3.7978538275023513`*^9}, 3.797854068842256*^9, {3.7978541522848616`*^9, 
   3.79785418186302*^9}, 3.800794758107277*^9, 3.800796198257*^9, 
   3.800797880263479*^9, 3.8009994159124703`*^9, 3.8010008860372095`*^9, 
   3.8010078549072294`*^9, 3.801007933188945*^9, 3.801008078555448*^9, 
   3.8010088355384164`*^9, 3.80100886949367*^9, 3.801008928706335*^9, 
   3.8013202263883333`*^9, 3.8013204376312227`*^9, 3.8013330779636393`*^9, 
   3.8013354113689365`*^9, 3.801335610804299*^9, 3.8013358592773175`*^9, 
   3.8013382240795135`*^9, 3.8013394529730387`*^9, 3.801340118596836*^9, 
   3.801350164972628*^9, 3.8013510279816184`*^9, 3.801351520547223*^9, 
   3.801351701571916*^9, 3.801606525204318*^9, 3.802033301363752*^9, {
   3.8020825941799183`*^9, 3.8020826079880457`*^9}, 3.802116198130125*^9, 
   3.802116483941861*^9, 3.804583596118224*^9, {3.805205349218895*^9, 
   3.8052053774814596`*^9}, 3.8052056736124744`*^9, 3.805206485596917*^9, 
   3.8052089753753366`*^9, 3.805209438516138*^9, 3.8052126079693365`*^9, 
   3.805214659730638*^9, 3.8055500716039047`*^9, 3.8055621313241587`*^9, 
   3.805562261147004*^9, 3.807278363619594*^9, 3.807281019630149*^9, 
   3.807281090597359*^9, 3.8075448353830614`*^9, 3.807545018813398*^9, 
   3.807545161746009*^9, 3.807547268572698*^9, 3.8075484613065615`*^9, 
   3.8075495804591*^9, 3.807553632474658*^9, 3.807556362772442*^9, 
   3.807556626154127*^9, 3.807556692444278*^9, 3.807559433559043*^9, 
   3.8075608305315275`*^9, 3.807561429002313*^9, 3.824211508822695*^9, 
   3.8242120757676*^9, 3.824214690342224*^9, 3.824214923557308*^9},
 CellLabel->
  "Out[200]//TableForm=",ExpressionUUID->"79c79a12-f34f-4360-8d29-\
b1ffc0cd0783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[DoubleStruckE]", "[", "t", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Zeta]", "\[Rule]", "0.9"}], ",", 
        RowBox[{"\[Omega]", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"Mot", "\[Rule]", "125"}], ",", 
        RowBox[{"g", "\[Rule]", "9.8"}], ",", 
        RowBox[{"lot", "\[Rule]", "1.8"}], ",", " ", 
        RowBox[{"lb", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"li", " ", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"ls", "\[Rule]", " ", "0.3"}], ",", " ", 
        RowBox[{"kA", "\[Rule]", "5000"}], ",", 
        RowBox[{"cA", "\[Rule]", "200"}], ",", " ", 
        RowBox[{"kb", "\[Rule]", "40000"}], ",", 
        RowBox[{"cb", "\[Rule]", "3000"}], ",", 
        RowBox[{
         RowBox[{"xb", "[", "t_", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"xb", "'"}], "[", "t_", "]"}], "\[Rule]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"xb", "''"}], "[", "t_", "]"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"yb", "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"z", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"yb", "'"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"vz", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"yb", "''"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"vz", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]b", "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"angle", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]b", "'"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"omega", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]b", "''"}], "[", "t_", "]"}], "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"omega", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "}"}]}], 
     ")"}], "/.", 
    RowBox[{"Rule", "\[Rule]", "Equal"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", " ", 
      RowBox[{"ti", "=", "0"}], ",", " ", 
      RowBox[{"ts", "=", "7"}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"sol", "=", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"eqs", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"xot", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"yot", "[", "0", "]"}], "\[Equal]", "0.4"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]ot", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
             "1.059805579497851`"}], ",", " ", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
             "2.081787074091939`"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"yot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            " ", 
            RowBox[{
             RowBox[{
              RowBox[{"xot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]ot", "'"}], "[", "0", "]"}], "\[Equal]", "0"}],
             ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
            ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", 
             "0"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "xot", ",", "yot", ",", "\[Theta]ot", ",", "\[Theta]1", ",", 
          "\[Theta]2", ",", " ", "\[Lambda]1", ",", "\[Lambda]2"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "ts"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xot", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<xot ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<xot [m]\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"yot", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<yot ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<yot [m]\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ot", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]ot ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]ot [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]1 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]1 [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Theta]2 [rad]\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]1", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Lambda]1 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Lambda]1\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]2", "[", "t", "]"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Lambda]2 ( t )\>\""}], ",", 
         " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[Lambda]2\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Pi", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], ")"}]}], "/.", "sol"}],
            ")"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Pi - ( \[Theta]1 ( t ) + \[Theta]2 ( t ) )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[rad]\>\""}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xot", "[", "t", "]"}], "+", 
                 RowBox[{
                  FractionBox["1.8", "2"], "*", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{
                    FractionBox["2", "2"], "*", 
                    RowBox[{"Cos", "[", "0", "]"}]}], " ", "+", " ", 
                   RowBox[{"0.2", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "0", "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", "0", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"yot", "[", "t", "]"}], " ", "+", " ", 
                 RowBox[{
                  FractionBox["1.8", "2"], "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], " ", "-", 
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"z", "[", "t", "]"}], " ", "+", " ", 
                   RowBox[{
                    FractionBox["2", "2"], "*", 
                    RowBox[{"Sin", "[", "0", "]"}]}], " ", "+", " ", 
                   RowBox[{"0.2", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "0", "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", "0", "]"}]}]}], ")"}]}]}], ")"}]}], 
                ")"}], "2"], "-", 
              SuperscriptBox["0.3", "2"]}], ")"}], "/.", "sol"}], ")"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<h1 ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[m]\>\""}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xot", "[", "t", "]"}], "-", 
                 RowBox[{
                  FractionBox["1.8", "2"], "*", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", " ", 
                    FractionBox["2", "2"]}], "*", 
                    RowBox[{"Cos", "[", "0", "]"}]}], " ", "+", " ", 
                   RowBox[{"0.2", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "0", "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", "0", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"], " ", "+", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"yot", "[", "t", "]"}], " ", "-", " ", 
                 RowBox[{
                  FractionBox["1.8", "2"], "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]ot", "[", "t", "]"}], "]"}]}], "-", " ", 
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"z", "[", "t", "]"}], " ", "+", " ", 
                   RowBox[{
                    FractionBox["2", "2"], "*", 
                    RowBox[{"Sin", "[", "0", "]"}]}], " ", "+", " ", 
                   RowBox[{"0.2", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "0", "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", "0", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "2"], "-", 
              SuperscriptBox["0.3", "2"]}], ")"}], ")"}], "/.", "sol"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "ti", ",", "ts"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
         RowBox[{"LabelStyle", "\[Rule]", "\"\<Subsubsection\>\""}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<h2 ( t )\>\""}], ",", " ", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t [s]\>\"", ",", "\"\<[m]\>\""}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}], " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7711032597452345`*^9, {3.777229137668547*^9, 3.7772292092240295`*^9}, {
   3.7772292438387227`*^9, 3.7772292703563766`*^9}, {3.777229312618336*^9, 
   3.777229686930296*^9}, {3.777229745465228*^9, 3.77722982820563*^9}, {
   3.777229864603204*^9, 3.7772298686527147`*^9}, {3.7772299210404334`*^9, 
   3.7772299975902653`*^9}, {3.7772301438135242`*^9, 3.777230154139162*^9}, {
   3.77723024666118*^9, 3.7772304010754623`*^9}, {3.77723047872213*^9, 
   3.7772305094062233`*^9}, {3.7772305411312065`*^9, 3.777230643216278*^9}, {
   3.7772307153638163`*^9, 3.777230716332221*^9}, {3.7772307558058977`*^9, 
   3.7772307646124716`*^9}, {3.7772308003224735`*^9, 3.777230821619346*^9}, {
   3.7772308704162755`*^9, 3.7772308875976925`*^9}, {3.777231358028452*^9, 
   3.777231390965167*^9}, {3.7772900529132905`*^9, 3.777290086647379*^9}, {
   3.777290708134918*^9, 3.7772907098071547`*^9}, {3.7772907528432145`*^9, 
   3.7772907592042656`*^9}, {3.7772908171195836`*^9, 3.777290826802956*^9}, {
   3.7772913639494123`*^9, 3.7772914223539467`*^9}, {3.777291454533947*^9, 
   3.777291600986794*^9}, 3.7772916743515005`*^9, {3.777291829230736*^9, 
   3.7772918428614864`*^9}, {3.777291928055847*^9, 3.777292014180521*^9}, {
   3.7772937717388315`*^9, 3.7772937975730057`*^9}, {3.777294049431409*^9, 
   3.7772940542768993`*^9}, {3.777294085020687*^9, 3.7772941374166865`*^9}, {
   3.777294239660467*^9, 3.777294245412338*^9}, 3.7773960028736773`*^9, {
   3.777396034995957*^9, 3.777396039573142*^9}, {3.7773960909105706`*^9, 
   3.7773961363085947`*^9}, {3.777396167472395*^9, 3.777396193784176*^9}, {
   3.777396492880782*^9, 3.7773965348928995`*^9}, {3.7773972534609175`*^9, 
   3.7773973605025277`*^9}, {3.777397465365197*^9, 3.77739757360781*^9}, {
   3.7773980025445104`*^9, 3.7773980583940973`*^9}, {3.7773981423034086`*^9, 
   3.777398157272171*^9}, {3.777398238597056*^9, 3.777398246849975*^9}, {
   3.7773983618261433`*^9, 3.7773984015446544`*^9}, {3.7773984664486604`*^9, 
   3.7773985724753327`*^9}, {3.7773986067492275`*^9, 3.777398609653426*^9}, {
   3.7773986910822506`*^9, 3.7773987376785393`*^9}, {3.77739880095455*^9, 
   3.7773988079232564`*^9}, {3.7773989267223706`*^9, 
   3.7773989314754457`*^9}, {3.777399098337624*^9, 3.777399119784937*^9}, {
   3.7773991505789423`*^9, 3.777399313286698*^9}, 3.777399755568903*^9, {
   3.7773998144949546`*^9, 3.777399842005004*^9}, {3.777399942856861*^9, 
   3.777399979672177*^9}, {3.7774001318460655`*^9, 3.7774001685134745`*^9}, {
   3.777400251941069*^9, 3.7774002779160676`*^9}, {3.777400460608494*^9, 
   3.777400463400776*^9}, {3.777400554626306*^9, 3.7774005903942685`*^9}, {
   3.7774006376611395`*^9, 3.7774007360951233`*^9}, {3.7774007955924635`*^9, 
   3.777400798097912*^9}, {3.777400841366256*^9, 3.7774010210345645`*^9}, {
   3.77740106471863*^9, 3.777401157349557*^9}, {3.77740122341485*^9, 
   3.777401223869565*^9}, {3.7774013896214323`*^9, 3.777401399463372*^9}, {
   3.777401446638316*^9, 3.777401453178274*^9}, {3.777401485068638*^9, 
   3.777401527161455*^9}, {3.7774015635920057`*^9, 3.7774015701909404`*^9}, {
   3.7774016074919543`*^9, 3.7774016077098255`*^9}, {3.777403266661922*^9, 
   3.7774032795669713`*^9}, {3.7774033930380545`*^9, 3.777403452566428*^9}, {
   3.777470690173753*^9, 3.7774706904706163`*^9}, {3.777470757011529*^9, 
   3.777470813980076*^9}, {3.777471058987892*^9, 3.7774710612073655`*^9}, {
   3.779204999136982*^9, 3.7792050032674475`*^9}, {3.7792062765348816`*^9, 
   3.779206282990938*^9}, {3.7806904113014555`*^9, 3.7806904242096233`*^9}, {
   3.796150657210005*^9, 3.796150674235469*^9}, {3.7961507132461348`*^9, 
   3.7961507156177936`*^9}, {3.796150746934743*^9, 3.796150788376909*^9}, {
   3.79615092855001*^9, 3.79615097163681*^9}, {3.796151029800264*^9, 
   3.7961510311885014`*^9}, {3.796151098771779*^9, 3.7961511341092377`*^9}, {
   3.7978527616068277`*^9, 3.7978528475655923`*^9}, {3.7978528806527166`*^9, 
   3.79785298382959*^9}, {3.797853222149555*^9, 3.7978533021191654`*^9}, {
   3.797853412408317*^9, 3.797853432340622*^9}, 3.797853657681137*^9, {
   3.797853693472251*^9, 3.797853713475763*^9}, {3.797854210297761*^9, 
   3.797854274055241*^9}, 3.7978543175254116`*^9, {3.8007948659057074`*^9, 
   3.800794871906663*^9}, {3.8007949125629687`*^9, 3.800794938324152*^9}, {
   3.8007961390189056`*^9, 3.8007961392203803`*^9}, {3.8007962186614523`*^9, 
   3.800796256441477*^9}, 3.8007966475289087`*^9, {3.800796723806085*^9, 
   3.800796727056574*^9}, {3.801000663236514*^9, 3.80100066413511*^9}, {
   3.801001410903571*^9, 3.801001413966439*^9}, {3.801001494254734*^9, 
   3.8010015530106487`*^9}, {3.8010063988629627`*^9, 3.8010064280010614`*^9}, 
   3.801007711094735*^9, {3.8010080024148664`*^9, 3.801008013903206*^9}, {
   3.80100839455367*^9, 3.8010084446935773`*^9}, {3.8010088458947296`*^9, 
   3.80100889654731*^9}, {3.8010089489721546`*^9, 3.801009002587813*^9}, {
   3.8013201993689585`*^9, 3.801320202445305*^9}, {3.801320256095974*^9, 
   3.801320259586964*^9}, {3.8013204499460382`*^9, 3.8013204550735397`*^9}, {
   3.801321880995309*^9, 3.801321937162984*^9}, {3.8013327897803326`*^9, 
   3.801332796675138*^9}, {3.8013346297296915`*^9, 3.8013346458367667`*^9}, {
   3.8013356454424496`*^9, 3.801335692567593*^9}, {3.8013357369066763`*^9, 
   3.8013358140009065`*^9}, {3.8013358878209343`*^9, 3.801336000518237*^9}, {
   3.8013360319644575`*^9, 3.801336039666568*^9}, {3.8013360770769076`*^9, 
   3.8013360833293095`*^9}, {3.8013368925897427`*^9, 3.801337012767351*^9}, 
   3.8013383988688107`*^9, {3.8013388786775665`*^9, 3.80133889369818*^9}, 
   3.801339461392099*^9, {3.8013395014693775`*^9, 3.8013395107551727`*^9}, 
   3.8013401248326344`*^9, {3.80134017345061*^9, 3.801340177206092*^9}, {
   3.801340256523858*^9, 3.8013402631709075`*^9}, 3.801349658501953*^9, {
   3.8013503046565866`*^9, 3.8013503082676086`*^9}, {3.801350343599225*^9, 
   3.8013503683222036`*^9}, {3.801350406155237*^9, 3.8013505474454556`*^9}, {
   3.801351059113801*^9, 3.801351080396869*^9}, {3.8013511719691725`*^9, 
   3.8013511777999325`*^9}, {3.8013512275151277`*^9, 
   3.8013512449597626`*^9}, {3.801351275465909*^9, 3.801351275967569*^9}, {
   3.801351343013339*^9, 3.8013513726011305`*^9}, {3.8013514301857843`*^9, 
   3.8013514487607636`*^9}, {3.8013516226790977`*^9, 
   3.8013516231133575`*^9}, {3.801351749726103*^9, 3.801351795268758*^9}, {
   3.801351886309238*^9, 3.801351904970434*^9}, {3.8013519644369807`*^9, 
   3.8013520197534676`*^9}, {3.8016064478015585`*^9, 3.801606496759121*^9}, {
   3.8016067652249413`*^9, 3.8016067727444167`*^9}, 3.8020332047573605`*^9, {
   3.802033235092001*^9, 3.80203327833521*^9}, {3.8020333669307437`*^9, 
   3.8020334094058247`*^9}, {3.802033460231169*^9, 3.8020335262493763`*^9}, {
   3.802034359261326*^9, 3.8020344343314605`*^9}, {3.802042006245019*^9, 
   3.8020420389646206`*^9}, {3.8020420828438187`*^9, 
   3.8020420989946995`*^9}, {3.8020421665445814`*^9, 
   3.8020421818335447`*^9}, {3.8020422757927475`*^9, 
   3.8020422891185207`*^9}, {3.8020430151182404`*^9, 3.802043015806149*^9}, {
   3.80204306717737*^9, 3.802043091881366*^9}, {3.8020431325315523`*^9, 
   3.8020431741897*^9}, {3.8045838369499817`*^9, 3.8045838621898813`*^9}, {
   3.80458390084377*^9, 3.8045839639178505`*^9}, {3.804584603896513*^9, 
   3.804584610289295*^9}, {3.804584652970418*^9, 3.8045846881606755`*^9}, {
   3.8045848058405128`*^9, 3.8045848265317698`*^9}, {3.8045848635818563`*^9, 
   3.804584875512005*^9}, {3.8045850699892726`*^9, 3.804585073442424*^9}, {
   3.8045854965227118`*^9, 3.804585498857544*^9}, {3.804585774220763*^9, 
   3.8045857793436155`*^9}, {3.8045858191435003`*^9, 3.804585838830865*^9}, 
   3.804586110157668*^9, {3.8052066706692743`*^9, 3.8052067183628993`*^9}, 
   3.805206812921834*^9, 3.8052068698136225`*^9, {3.805206917509697*^9, 
   3.805207067203763*^9}, {3.8052075146733313`*^9, 3.805207514845163*^9}, {
   3.805207742269285*^9, 3.8052077850351496`*^9}, {3.8052078276962385`*^9, 
   3.805207835575364*^9}, {3.805207872773484*^9, 3.805207897907053*^9}, {
   3.8052079441384816`*^9, 3.805207944733749*^9}, 3.8052079891890087`*^9, 
   3.805208019580535*^9, {3.805214697498328*^9, 3.8052146976973133`*^9}, {
   3.8052147664468265`*^9, 3.8052147812412677`*^9}, {3.8052150160901165`*^9, 
   3.805215016513115*^9}, {3.805215070255104*^9, 3.8052150704737673`*^9}, {
   3.8052154441568604`*^9, 3.8052154561463437`*^9}, {3.805215813913601*^9, 
   3.805215848287221*^9}, {3.8052159024656725`*^9, 3.8052159896853943`*^9}, {
   3.8052160843955946`*^9, 3.8052160884444003`*^9}, 3.805216270364705*^9, {
   3.8052163056936674`*^9, 3.8052164224582653`*^9}, 3.8052164636601315`*^9, {
   3.805562037393922*^9, 3.805562100028158*^9}, {3.8055623123601456`*^9, 
   3.8055623500709476`*^9}, {3.8055624238186417`*^9, 3.805562439559527*^9}, {
   3.8055730299800014`*^9, 3.8055730309467316`*^9}, {3.8055731110154*^9, 
   3.80557311173936*^9}, {3.8072783768214645`*^9, 3.8072784066474805`*^9}, {
   3.8072787485535464`*^9, 3.8072787617979317`*^9}, {3.807278884646222*^9, 
   3.8072789411869287`*^9}, {3.8072790343906636`*^9, 3.807279168168044*^9}, {
   3.807279242266388*^9, 3.807279271016368*^9}, {3.8072793026454706`*^9, 
   3.8072793192194915`*^9}, {3.8072794060090256`*^9, 
   3.8072794531319447`*^9}, {3.807279658917652*^9, 3.8072797668134713`*^9}, {
   3.8072798525921736`*^9, 3.807279856440877*^9}, {3.8072799020798225`*^9, 
   3.8072799288023252`*^9}, {3.807279995084101*^9, 3.8072801779520454`*^9}, {
   3.8072802091675324`*^9, 3.807280218950369*^9}, {3.807280947634692*^9, 
   3.8072809706561227`*^9}, {3.8072825301006784`*^9, 3.807282539023768*^9}, {
   3.80728345174642*^9, 3.8072835137496023`*^9}, {3.8072835637947636`*^9, 
   3.807283578766756*^9}, {3.807283836792673*^9, 3.807283842910345*^9}, {
   3.8072838767667694`*^9, 3.807283950763875*^9}, {3.807544861874215*^9, 
   3.8075449288281574`*^9}, 3.807545013474701*^9, {3.8075451646014075`*^9, 
   3.807545198445861*^9}, {3.8075454467762456`*^9, 3.8075454788983727`*^9}, {
   3.8075455365262556`*^9, 3.8075455466451635`*^9}, {3.8075469946562433`*^9, 
   3.807547010631553*^9}, {3.807547176771205*^9, 3.807547185570672*^9}, {
   3.807547233547366*^9, 3.807547256496991*^9}, {3.807548262189069*^9, 
   3.8075482695414066`*^9}, {3.8075483108778586`*^9, 3.807548316917739*^9}, {
   3.8075484255312376`*^9, 3.8075484354327564`*^9}, {3.807548749183737*^9, 
   3.807548759922019*^9}, {3.80754923751924*^9, 3.8075492469220924`*^9}, {
   3.807549340922703*^9, 3.80754934388877*^9}, {3.807549379613264*^9, 
   3.807549389852846*^9}, 3.8075495577488346`*^9, {3.80754966005224*^9, 
   3.8075496720062714`*^9}, {3.8075497202422714`*^9, 3.807549726666092*^9}, {
   3.8075509773828754`*^9, 3.807550985700631*^9}, 3.807551038746767*^9, {
   3.80755114750394*^9, 3.807551165763082*^9}, {3.8075524596905823`*^9, 
   3.8075525751517982`*^9}, {3.8075526297068996`*^9, 3.8075526517728877`*^9}, 
   3.8075528959254804`*^9, 3.807552941976325*^9, {3.8075531113274703`*^9, 
   3.807553137595172*^9}, 3.8075531681614275`*^9, {3.8075536224175887`*^9, 
   3.807553624763307*^9}, {3.807557303817646*^9, 3.807557324337804*^9}, {
   3.8075577751726174`*^9, 3.8075577821050777`*^9}, {3.807559121075862*^9, 
   3.8075591306821704`*^9}, {3.8075591654503164`*^9, 
   3.8075591734768734`*^9}, {3.8075594398053074`*^9, 
   3.8075594541986785`*^9}, {3.807560811882369*^9, 3.8075608215435314`*^9}, {
   3.8075615208937964`*^9, 3.8075615373148823`*^9}, {3.8075618181164603`*^9, 
   3.8075618496242385`*^9}, {3.8075619399584928`*^9, 3.807561947734695*^9}, {
   3.807562087529546*^9, 3.807562088143774*^9}, {3.80756226151892*^9, 
   3.807562272473705*^9}, 3.8075624617464504`*^9, 3.80756250257127*^9, {
   3.8075627078240747`*^9, 3.8075627093585944`*^9}, {3.8242119974697013`*^9, 
   3.824212015205279*^9}, {3.8242155303218727`*^9, 3.824215542176944*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"87574f49-9512-4c1b-9dd6-3e489fe520e5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","pdord",
   "\"Some of the functions have zero differential order, so the equations \
will be solved as a system of differential-algebraic equations.\"",2,252,18,
   23725111413170292244,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.805215992807378*^9, {3.8052160657276025`*^9, 3.805216090168143*^9}, {
   3.805216447672305*^9, 3.805216465346618*^9}, 3.80555029093312*^9, {
   3.805562066338176*^9, 3.805562086031474*^9}, 3.805562266080806*^9, {
   3.8055623139816165`*^9, 3.8055623513355236`*^9}, {3.8055624247211933`*^9, 
   3.805562440227084*^9}, 3.805573032625635*^9, 3.805573113918173*^9, 
   3.8055733754132457`*^9, 3.805573764982135*^9, 3.8072784075461226`*^9, 
   3.807278762767672*^9, {3.807279278455905*^9, 3.8072793345938916`*^9}, 
   3.807279932014737*^9, 3.8072800057276*^9, 3.8072802195228395`*^9, 
   3.807280971873866*^9, 3.807281024065288*^9, 3.8072811007781315`*^9, 
   3.8072825395334063`*^9, 3.8072835273552485`*^9, 3.8072835800123925`*^9, {
   3.807283861601327*^9, 3.8072838790925484`*^9}, 3.807283952988956*^9, 
   3.807544931789239*^9, 3.8075450256600885`*^9, 3.8075452001941867`*^9, 
   3.8075454813438005`*^9, 3.807545548889163*^9, 3.8075470143665314`*^9, 
   3.8075471865171413`*^9, {3.807547258519582*^9, 3.8075472734686036`*^9}, 
   3.8075482747464876`*^9, 3.807548320344574*^9, {3.8075484369287553`*^9, 
   3.807548466783914*^9}, 3.8075487667138577`*^9, 3.8075492516195307`*^9, 
   3.8075493909758434`*^9, 3.8075495854128513`*^9, 3.807549681132865*^9, 
   3.807549728196999*^9, 3.807550986597233*^9, 3.807551039872756*^9, 
   3.8075511673937206`*^9, 3.8075525889239674`*^9, 3.80755266033499*^9, 
   3.8075529429078355`*^9, {3.807553113579399*^9, 3.807553138438918*^9}, 
   3.807553173744497*^9, {3.8075536326571703`*^9, 3.807553640273834*^9}, 
   3.807556367435938*^9, 3.807556630288072*^9, 3.8075566971247625`*^9, 
   3.807557326219735*^9, 3.807557783474416*^9, 3.8075591346276655`*^9, 
   3.8075591745041046`*^9, 3.8075594554034185`*^9, 3.8075608441251397`*^9, 
   3.8075614328959384`*^9, 3.807561540387664*^9, {3.8075618268939857`*^9, 
   3.8075618504688177`*^9}, 3.807561951442779*^9, 3.807562089346179*^9, 
   3.8075622733473344`*^9, 3.80756246275974*^9, 3.807562503632432*^9, 
   3.807562712704974*^9, 3.8242115148472185`*^9, 3.8242120183547506`*^9, 
   3.8242120799347515`*^9, 3.8242146954467325`*^9, 3.824214931107075*^9, 
   3.8242155431267357`*^9},
 CellLabel->
  "During evaluation of \
In[251]:=",ExpressionUUID->"b3667f3f-75af-4d13-ba91-2c9764ca37d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwUV3c81t8Xf57H3ntUyt4qiaLh3Oy9ZUVaqFAZkSQkm+xk9U0lFYUkFc81
KlkZSWTvvff++f31eZ3Xufec93nf+znnfQUv3jC5QiIQCGO0BML/v88s334K
lXmgTLjR3ghTJSUv1rkDnyddgFWGUx65DPbK+hFUkveSbsE7Tu8rh87dU9Z6
shOTfcEH3qwLX1E7EKWc+dt382pSAHyOprjTMJSo/N+/O3k7Gw8h210y6szd
VOX0vtuXEy+EQzZRX6P2drpyyqg7r3RVNLS/LN/+jy9Fuc5L0cE+KRZoVGOZ
OD4+UtbdOIakq+NBL5BDuijyCrnGT2Hv8kYinKWj2dL6lEHWIskvlh1Khjnh
IxxjevnkqodyvyIupMDv3M/U1SWlZA26I9lnE9JAIsXhyKO4H+RvkYcDBasy
gOHGvUP3mhrIQrQ8h5Z9/wPVmOokV5M/5D5t7lSbpGeg/+Gx72ZoB/m/CC7a
8veZkFfEvB6m0Ue2r+f0FKt+Dn1atUwNh4bI/Cyc/RH9LyA0vcl3/e4YuduI
w3Bu4yWEHnR8QyczTc6IYy85y/UKLrh1HpfNmCPbtrBJlhzKhvuuZ95Pmy2S
Oy1YKUIuvIFsc4X6Wo11ctoTlpuTPm8h/M+fI5X3tsg2Hcxdxgk5sP3s+Acf
FwL+Z8f0ia/qHZgYZpArtynwpNxDBaukfNiof/DudA0DrvtNOckgXAD6N5pt
/v1lwjkeQZnk9wXAJnXARW2KBV8vesAiUv0BrhTEbIxzsuNxpcCx6Y2P4Pjz
ghrjBW5c84/437PQIphmdOrf586DX98NOGvG9Qm8N30O2D/gxU6l/pWfDxVD
8jGzgMHUvXgE3U8PuvAF2Oh+bbOlHcA/+rZNj09/gVfM2p8ro/lxVqAf/bjP
V2icyi4MPy2AHb7d8zJMKIFqjjcP9PgFscaVrYMkwVJQXmY+4BIuiEWp7w0W
5pZCH80XXdc5QTyo6Wu8t4oMJy1qjQ0KhPC30Q2aelMM7kMaPq0MwvhF2F3y
/V4MLNJOnbH2wlgl8d6JJ8fKQCci45x9njAuuFKaOO9bBrn+B7pFN4Sx0LGt
Wd3KMih92cX/E4ngOOrTei/pysEvV+fS4QARTPrr+2rbsBzwTcU5jRIRfOtV
CckyqRwk2ff5bM2JYLUD94+n9ZdDW8F9Zi4xUcybeMa591AF2FPvPVFqKoon
GSifidytABzeKzbtI4rLAn/8caqqADfPA7UvUkVxwloofS5HJSy7TFX1fxTF
jjd1Ye58JYTq123mVoviEyNMHgo5leBm4GvP9lcUM9s1Zt9ZrYStfeXNfN2i
uL8lrqtU7RuIbvleH9q1i3TN2Umx38AqvfF2ULsoDq/g0dTo+gaZ6mV/uH+J
Ylulf3fDJb9DMOX3myUlolg2Ly3vl+d3GFpnaXn8UhRTip8fYq/4DrraJY31
oaK4LV1wrwXzD1gvrJR96CCKczgHDVKtf0CI0Vv3YWVR7B+R9aAn6wdYZia+
3ccuik1JV4uFF36AxgxRyKRXBIvdkZ5yhCoQmTMH8msRvD4zJZgTUQU+PqGe
T1xF8C+HvLOzf6ugU6JcQuCwCM7scouQF/kJND73VWImhLF27cpiSclPeDsQ
KyNmJYz5VL5IEumqgWPS5E8VvTCeLfa1UzevBqfRkm/an4VwchbxZ/1UNez9
eJCxg0kIDwcwpHYfqAXhhExGyTQB/GW1vkHoei3cZz7fWn5SAEffiKF0/FQL
R75EJT0v5McKtlyuM4Z1sLmhx/RT6gAOUuQ/Qwioh73bqZTcnPuw5fs+T7X6
emC4VqMVYLQXS4u9eBO65xe4xt3Nqojeg5s5JDnZCn7BP7rikmp2Xiw4Izci
ONAAL77eYnurzoXXC9aZPvA0QoXik5f/pXPiy9M2En9ON0KVD0195ToHVrxy
wHZPeCPwp3wlLH5nx5n/3fc6mdcIw9pKwYXy7JixszfWtrUR+rsOp5DesOEe
k+c/ngk1QfGeudh7r1mxVjRlX6VWE4yUipHk5VlxQfWVjSHXJmBuOiHNFcWC
+aiquGgTm4A01JXmWM6Mg5GErNTXJlj6cuNZERUznr0bpqPX1wTfb00OGFgz
YetP45ddaZohvPMGty9mxN/mde/HHGwG4qLAxSAFRnzoUO6TAtNmsEh2ksgq
YcBuiL5a32t3vaeO+lUbBlxk4rg6mtIMuKPipAMdA16//E08iNwMf969P1D8
gx4rewla8Pc3w7a2JKNbPD0ODPML/kL1G/TWx+2e3qDHP1I7PppL/oZRwvqK
qg09pn+nODSr9xuMdJUf2Z6lxwZliZyRN3/D4dcRhd329DiueV5VPOE3CB2S
K833ocetg4buFZ9+g7LEQemi5/R470pOpm3Hb4hXXw2p7KDHdnT0zavbvyG8
6GLtGyEGnLnPkZgg1AJLewYnjnsz4OGD32QPa7TA+Graf3KdDFgKCdrXXG0B
9SGnBDsDRuxi4vfoSlQLBHw5puX7ixHnXe4gE/JbgN6iIVT7HBNevK04ndrS
AuVNws6BK0xYMSxx//HVFoBTuS+7njJj39R5veZ9f+Ad5S1+GnMWXJZr6OsC
f2BL5tFJPQZWTFmW85b20h9YsonuZHFjxZGDDvTw5g8cJd7NSDBiw43LlUr/
6v9A9dt09vYqNsxJJ3jVc+4PXNNQ/Sigxo7TDnZUvVVshYYUTaEKHQ6cc9vw
IW9VK3TOi958H8aFZ0NzCj+Mt4LtEziuIsSN5VPpBg2Y/0KocjBdeSk3LsGV
Kg/N/8J8olKx3CYPrqNVJMwP/AW1ieV7FNF7Meu+xMNRNG0gXW+ZyqOwD5sd
nLeTkG6DWwvDEW879+FO45xSO7c2uCeWIiMisx9PpgjcrSW0wxkuB9+lCn4s
m3vvjYNIO5iM/vwvUE4Ae+B/7UStdrAW4qT2DxTAmwMJioqP2oGiUPxZ7QFB
jJbnHH8XtINM7Zurf68J4iBaw8eure1wrNg42OSjIGY8SLf8Yv8/SKF6mc2o
LoSNwEEUnfkHPP7S8RThQjjBuNKs4/I/WNWRVOqsE8J8t+99YMv5B0tC7H9z
dIWxfei//pyGf6C5wjnpELI7T1KOs2st/IPTKcg0pEwYS+O5m34nOiBBtSMk
WUoEO/hGNjvYdsD2UDHrTevd/qUkLm/o3wE0X3Vr3UJEcNdyeeLx5x3Alqwu
F5UvgnkLz63w/+iAQhZ925w2EWx2a8WSdqwDlIPVrMibIvjRobgvswydwOPm
/LxgvyiumZDhaz/UCX4ZKg4+J0Ux9euqe+XGnUBndSGZ9qwoPuNwsee1Ryc8
XtBhMHERxb7CWyjucSfEfnxyUz9AFBf3Ps70+dIJV7YOnF2IFcUL6XKUl7o6
gUMyYer0U1F8yKb+ii6hC6yrc55LvhbF13idqo4KdwHNYW7Nwvei+OUfkiSf
Rhe8U5KP6ioQxb1x6eGUV7vAK3euLmvX5jNSnJyM6IIwCp1+9t31Fky/9f+8
64LEAR5esWxRHFfj8r60qQuSsx+xDKeL4l8htGxZi13wfCI60ypGFNOpP3eL
5ukG8+TzraH3RbEaSbnl9oluaNrz+Ifv9d35gtsUztt2A+vpP4/BTBR/9XV/
rOnfDd9HvOg7lUTxshLz2uHn3UD8EJVznk8Uy61kW/P+6IbziceO/9sQwS6F
qiWEsW6oVjwUYrfLd/at7v1jDD1QmpHuRSwQwYOH7txvOtQDhu7uEu2hIph/
kqPvs3EPfPZtdN88J4KTHLRfhD/ugTH+r+QHW8K4WXiQyv1LD9AIBMjy1Ahj
pj4/R5uuHtjmYe8wSxDGFQetuZLYemH2Ynv0QSFhrJj9qM3Bohdyi0sqVMWE
cCu1LV2HUy/wSRBZeAcEsccVqROGPrt+W+33gRmC+L3Q99Tj6b1QZzSb+JRN
EIulr9vRDvRCcyM10882fvxto+qR72IvbBhpbJJV+PFF68SyWao+UFgfiPn7
9gBO55EVapfoA+vOuqRw3/2YM+7K0GvXPmBMutWTwb8PE0Mar+uu94G078LW
2WfcWPHRtskJpn7YI3g6eD8rN3Z9LHNCUqAfMit/ndUP5MKdr0JpaTT6wfL1
Gd7WW5yYPa9oZsmyH8Itnucnz3Bg7eLB1sHr/XDijfC+5FscuOgnelkR2w+X
q9XmpgLZ8WSja2T+i36Y7fn5MYGdHQu3p7n/96kfnOQamXhfseGYsdUzfl39
sCNiNaDSw4qr5sQkXWb74UZgkKHEA1a8vWbGeo5iAM5ncsRdkWHF1+nzu5Uk
B8D3TZyM8wEWnMne813i1AB8mFC6WR/LjNv2MuXyGA4AfRNHvwkrM2YRPplA
fXEAPh4JYaNJYcIa0lfvLnkMwGK5HMPUISbse/TxxcGQAXDkrj9DbGDEH05+
1/6dMgCu5WcFTvgw4nHVBdmK3AEgR4/fDJVlxAJ6grz5ZQOA/oxU/Z1jwGfN
DHee/h6AqWtUM8xkBhx17t5w9PAAUExc0GdNZMDfLr+tv7c2APzljxS+3N6d
f87thc6Mg2DhYxQzepEBH/GkSbPhH4Rhj0QeFysG7HRP4YGO3CAEK9uGs1gz
4IyHl64pqQ/CZ8OdkfDLDPhPVKyxhOUgOBQ42cTtzifGJKzIc30QGrM7glt2
86lkTPFT+w0CH/3Pyq2vDPhO1j6apZhBKBXmnC4eZ8B577SnB54Pgs5H9pg8
QUY8XOT1p7loEIaUhAIe2TPi/fhlSXn1IGTNeisQXzFis6rfz/M6B+H2ThJD
wSIjDm8gRjydGYRPlbEiWtpMuOzvYbdo0hBMs7aaWb5gwis9tlb3uIYgoepH
xfVdPXF59rO4zckhKN8ccX31lxkDm9s37pAheHckf+SmBSu+vee/t1QpQ3B6
+4WfbhIrzhH8FbeYMwRd49R9+q2seK+c1IXm5iE46vTp6oAlG1406d+KOjAM
313150kX2LGUDeuQ75FhOF/OYCCUyY4vXFKuu642DJG2Rd5O/ez4l3tKiva1
Yfj7StUr8jwHfp1gcpyqaBjahev7wzQ4sV7odnZe1TC4UKadTPDi3NU/b/ae
ax+GH9+arjplceKEG2cjaSaGITENujqaObHiJdJ2weYwxDxoqvqxyYk7z767
Ycc8AtRPZAwoRbjwfR3rPjqBETiyLvCfmxYXFlKmNv14ZATqn34hLlzlwj+O
FHyzVx0ByliXB1dDufA1UbtjjOYjIKmnrVDynAsz76HP/uQwAjMF+3MbvnLh
AsaiPZe8R6DE+eJcaCMXNidcjGAOHwEzYdMDv/q48OoC09bn1BEYM9SWDpnh
wmkjn12v5I7A+cpy/Yw1Low6rvSy4hEI5EuRJRC48eAvNpOSxhFoSpjhSiNx
49CK0krH/hHgTWvpukTkxjJFVxU4FkcA2JwmdDe5cONrrldkqlHoelc8rrPA
hd3Ty3mv8YxCWbTge+thLswd6xLOJTkKLkM0E7f/cOEvQXs2y06MQm3T4fr0
Mi5s5/3dxVlvFJ59afnT8IoLk5xv9fDYjUKSvUkUSwQXzjq/37jyxiiI1U1e
v3CNC+uYVle4BozCa4bNotpdvTyt4Sm/N34UTH6Onz+7nwvHnhDM+v5iN7/M
9DD9HCeWP1TPc6toFD78EYDFMk7cJngnjO/nKGgbFxYeiOLEAnRNzu4To8CV
7Hbqxl5O/G3Tt/vA1ii8VZQgfOngwE6zEkY1zGNQd17PL+YJB37/1/+ooNwY
XNo7nmvIwIGVs2TXf3mPwYBTI7ddDRvuf9J53Sd8DG6pZHiedmfDD6NCu0TT
xqDJMMo0eQ8brvPoLfPFY3Dj479Lp8+zYhvVmBAp6nFIw7QRsi+Z8PaxU2t/
eMZh3JGvfLyVEWdKjV4LkByH3oFSV0nq3X7Dhgza9MZBSZRfLcSOHnv3znAG
x49D5PdHlFd3qHHSPcPMPoEJqPGfa2AxIODmvedqaOQnoA4m5mO7tsksxU7z
BzUnoMGJw/ex6BY5dD5AxcdlAlKSXxrL1q2Rvz+Kvvaf/wSY/VVYM5NZJZMO
psb9iJ+A9TQFtT1Jy+S7joX97F8mIHO0RiwgbIFcTFlOr1Q/Ab/rm7KDOOfJ
i8/q5c73TkDEKeuzg29nya6dw4FvqSd39ZIH2zOKSfKbOwtvmvZMQkeCyNXQ
wDHyCDfh94rMJIT8dyBteP8I2d54j7Ca6STUOR22Ts/tJ6dNi+pec5gEVupl
p1fPe8ntEXLuMXcmgX3neOuGWxeZWxJSiyIn4YDIibmInnayyQ/dys6nk/D0
mTIzT3Qr+dElywnSh0mQpu2RDLz/m1xHuMIh+WMSPFUntPwLG8m0GbdOGrZP
gqmm2RtkU0dWP+l3yXNyEpQka88ca60iB7aFR6TuTMLS+X7S8X+VZLLn4w/l
7FNwWKi7nM+xjLzB/qJjRHQKVNNn8jpWv5AV8/IomJWm4PUkV8VPuSKyh36p
tLzeFDDTVjvM3Ckg549Xm1qfnwIS82JJ5OP35OmQ1rv+blOQXGQf8F4nhywl
OvA86+EUPMJREsnUb8kOFTO1dclTYH8ksHCs8i35+fnNhfm3U1Dwtf7UJ593
5N5NWr49eApMs/YIW8bkk/lSuNSgeQqo82duCLYUkq2OCzlfGdrF58j+8Cnh
Mzmp5VBCxOoUkJ8hg3lGMrn51smSfIZpOHXHK3NmpZzMwqI1+PfANJhnZjVS
GH0n6+WYMW4fmQZO1wpKAn01OVT7gryI+jSMrHWknBKsJ5OCfIJuXp8GdsqO
ymyp32RlwZCcJL9pKBEUkk0r/EO+S45vKYmdhpq5wNShS23kxdUcEbriaXiG
rU10xbrJR5I+6x2unYb443SBN570kl2P/vAw756Ga4YqKRvS/eQRl55vzyhn
4I747RveN4bI//rZrpwwnoF8o/0Z0xqTZG7/A1H2l2eA9UrJVjTVNNl0v/TH
YK8Z0DN1Eyr/NkOus1Cj+p0+A/yHPk2pP50j47rbL6+Pz8Akj6i81MYi2Rsy
HRS3ZkCnnV3K7tsSmbd9OJ5EOwve7XLHkkOXyY267OYNe2chI4e+UZywSpah
yv6oIDILgt4zTR4Fq+RQ8mnutIOzEHy4e6vcdo185sjVv05oFoZ+tkl5pa+T
M8a3jzdoz4KWlP9e0pEN8vrzhGQF01mgAZXklq8b5LO2Umup52aB9t3n8OTT
m+QC7jIrksMs+AylZRCLNsnMjeZfnG7MAs5XbqkV2SJfC5vY2+A9Cx7nuDhK
w7bIP1QC7ioEzsJYjilD+uAWWWiTuzM1YhauBkKqosI22e9jzilS4izYCvqE
X7q7Tf7nqpLulDEL7BXMgqtF2+RjEm1bv17NgjDn4Mu/I9vk+D4XO4X8WSjx
GLEfZ9ohz6ZQ4NQvs/DoCVznl9wh65k94Sd9mwVZ3q92zko75Gymw/5O9bOQ
LhmkWae8Q6as+tb7q3UW9l3Q+qiy67f3tz6j0DsLN3ckU/5J7JBLlGafpY7N
gqPd1rWc3fi8Cw9JpIXd+k/HV//bze+Rs++S0+YsRC7KKD36tE1uvJJf+Ytq
DqopqmNWfbfJMvyaIgosc/DIuilZW3GbHNrWGZTKOwcXLkQwF49tkYdi3YaI
QnNwyY4wdzd2i6yiS6vhJD0H04QkuobDW+QMyoysX/JzcPH9Mt/Et03yeulR
GgXlOcinqAZW403yWa9qx1TNOfhMt/04uGWDXCB7/ifReA7uvm7bm2O4QWYe
X5Rwsp6DQ6G5bWMV6+Qf5wTG5V3m4OjOwKBL/BpZiLtIJ/X2HCSH53g9nlsl
+zXoviX6z0EUj09fqvYq+biKl/OvuDmIiSu8MDS6TM4W/zXtWDwHERzN6gEz
C2TKvkuGv8rn4MnXpmdvxBfI9ilr7+Vr58CPOCVUem6evIdJ9Baxew7qWpua
x8mz5PD5uwspFPNALSlravV3nHy9VHK13mAektTrphc728l+ztvpcRbzYHVz
dvC7Sys5Zt9vVQv7eWgTk+R2m2kmF93xfdR7ax6+3BJx0A6oIhOONYgtJMwD
u51Tr6lTjjLH0PO6T+nzcLtSUybTjawsluDt5ps1D/KN0Wc/PapS1p0XJFMV
z0PN5twpCa8W5aR3Hua8HfNwQv6CMzl3QPm1rfZG58A81D0e+csmP6xcwnjg
2bPJebi+KeG3/HNUue9a1aTU9jy8c9pf2Mc5rSwjvjfotOAChP/YG33YY1EZ
WqclSVILcJ5p/XF33ZKyycPKhh9yCzBSk6FuKrSi7DXgvM9IbQFu6R98cK58
TTk87kw5p/7C7nv7FwuZbUM57Qy3Y7v5Ajz3v+Kd6bKp/H52nDHDbgEWfcBw
vWdLueIpLrjouADRcgN733jsKP8xSLAUv7kARCGdk3OpBBjdctqe8F4A/YON
Km0pRFjPOf0iL2ABTO+/yGovIQHTOXYdz/AFyL1SIHmbhhIEGEZmlOIXYIyC
QqPpPhXIffmauJ26AOIBnsTXUjSgfjXmZOWLBSjac8YlmJEOLHmv9IXkLkBY
/ZtzZGkGuFalFKJXtAD5sTd5+WOZ4N5t5oNseAFm65k6bgizQozoQPOfqgVY
lyD0j75lg8yWT94pjQvQeJS76JojB3x8EHngfPsCdPYe01S24YKfche+Cfcv
QLmFNckxkgf+9SlcGx1fAP9Z3PVoZw9MxdCz5i4sgIK/2T7CZz4goJ6PtzYX
QL3R0COxhB/YZz7YHKNahCg9cmVfsCCIZoQSN5gWgezsgmMshEFR3/YV5t71
U7o9umUkCjqbR/SD+BchZHMpJeCmONi+pV7QklgEA+P4j6QiSQiky1NuVloE
hezU66eyD0FicdBgksoiZC5dU554JQvZjlbhNrqL8K8p+qIrnRzUfye1Dp5b
BF1lG79Ts/LAG2jusnJ/EZYtm6oDxE/CykNr1zthi/CE2zskeOAUtIadv7ER
twjxjxYpPmQoQ2Ls1Vs7Lxdh1OnB9hzxDHgkuroFvF+EZo+UeMffZ8Dsibs7
xedFeM2ydvdaugqwP7vnSVO3CLKPXG7v2R2lcy8Cb4f9WYQPBwVkucrUdt9R
IV4MPYuQeOR5uIOdOrzPifSOGl0EthdJDx/MqEN0XuwdlvlF+E+r8fMJdw1w
KUzyid1YhF8fTgkmjmmAXnHqXQ6qJeB6nH+/3EQTZEr+801kXoLUMyGXqd9r
AkPZy3s8vEugePnd6+JtTRivfOP3RHAJbhwqoFZQ0YKaqvf390kvweX+z7jj
jha8ri30T5dfgtvy0p+YsrQgtOFzAL/yEoyvqnVKVWmB429y4DPNJYjuEVOJ
79ICjb+VD4SNl+CROX1P9pgWiHb8DHppvQSnc8C6fkILKHvqH4pfXoIrNA1B
9oNaMNDfHPzaZQmqcIQN/q0FFcN/Q6S9lqDOP99T9YsWZI53hub6L0FESvZn
lWQtCJjuCzscvgRP+/cDi6sW2M8Ph+fHLwHLrXKjlZNagJYnIo6mL8GlHrWH
6iQt4F+fjfyYtQQpsdWPT5VrwvbWUtTxvCUYiU622vLWhC7iRvTnz7v1+tmt
P5DUhBIqwu4PtAT5hatXi5o1IJWOKra0bglU+luvunpogA8TfRy0LkHC1h1l
f2YNsGJjiS/vWQJdKwUO/J86KHJxJqiOLQEvf0brjpQ6rPAdSNLcXAIvRb4f
U2Jq0Cog/LiaahksH4z5WierQpGIRLIuyzKcjnj7VYuoCh4ycimGQsu79/xC
psHnM2Aqezy1SXoZfNSlXijTngE5+VNppgrL8Kk1KPGSAYLZkxoZFlrLkF8k
/83O/zQ0gO7TduNluMEW/f3t35PwTtXoPxubZSh1jhu8sP8EuOhaZ553XYZy
kQDlMI9jMG7tmuWYsAx072LuPSyQgWo791dj6csga5s/R39WArIvemdff7UM
r9pTbut2CoPDtcA3N74sQ0jEpRQzGS4YuJP0zqt3Gbb5XqswybFjb/d/ixZj
y3DOi5dyoGwfZnY5cFJxfhkki98ZeRUJ4RP2WVWrFCsgW3BOTzBEBsdoFPXe
EV+B53uvmuqqKmIxtC5mLbsCm+I3goOqTuASJWWXE0orkCyQnR+nexqPyPxY
W9dZAaE/isRc8TNYmaOV3dd1BeK+G3zm5NTALYx7rc55rUBCuLmLtKYmvkZt
9/SU/woUs5SrE25r4cS1Iemt2BVwG6j5NPJNB0stSLp1paxAsC49Fe2gLi6b
dCkufb4C2Q/PV1Ns6eHJniU1v48r8DVtaP/8XkMc2K4UYUdeAb1KP6V4FiPM
+/tek3LVCtQUP2LoijLCqj+o7HbaduN/rbru4GeM27D2i56+FdAvEm+5OGuM
XT9HjePxFZjSEF+jtTPBKTlcXv6bK3DH7diLNWlTLJtlVWpPtQp/RMZqhCJN
8Y+n6RRnmFdh5VrR7IcRUzwXJxpDFFgFv6OWdRSxZjg48mprn8QqxBsVylV3
m2G+4Fy+iiOrkJ7eu0ohYY617ii8DlRdheNCQ8/35Zrjbrc7Mxf1VqE0ivBY
dMwcuzuXKqiar4JyaeTOtsBZTOtA9BW2W4XeQkvzGrOzOOO8egWF4yqcKk4q
fBd0FstbhdEO3liFcD7V13/zzuIak3qDb96rkDv03d+9/Sy212NLfBGwCjVp
H9byt8/iJXXzjqDwVYgTuUX4LmCBw+GJ4JX4Xfx8Pup9YIEFlLoc1dNWAf6V
hSmfs8BFcoLvRF+uwtGRQ594bltgPZkri1TvVsHss8yfN1EWuF/09Ynhol1+
5LoHFJ9bYC/+Kf8feBUuvd2bRfXJAmeyezKFNK2C+LzA3dv/LLAi42dTx3+7
tspJ+pxxC/yLauuJ5sAqHPlZUX5m3QKvrQaJ0S6tgvQ0x/QXXkscPf/TeXRr
dff9ZJZ0TMISi0wyfvhJvQbI/OqbM4qW2KgnAcJ41+By6h3lIzaW+IWqU/Mp
wTVoif90/4yrJV55dfLKrOQa2H5wejAXaIl1GFlWn8utgXDamQD/J5Y442Z/
uMXJNYALTnOyBZZ4vuXjfga1NZipvpRnXm+J1ZXC8sh6a0D7Xy6SnbDEyenn
VN3M1+BocUnLLIMVniTKtorarYF2A4Gm/LAVRg4UV9sd1oDRfSSp7qwVjq9p
3Yi8sQbU9fJhWgFWePjQm2jkvQZ0wc2z3u+t8In4e4KL/mvg2cOS+LHPCkev
GBW+CluD2btWT114rXG/jYimTdyuP4/3qpSZNT5WttLOnLoGny7JP4hNtMZh
IrXOFc/XoCdswvlilzXuDM3Y8cxZA+azlh+zZGyw7NStOMmPa3Cbvk2qL8gG
Bxmri3aVrkEVS57z5IgNbvvIWxzzYw1YmLcvdVqcwzJ7J3XUGtbgi3+61Wjr
OXzfD3et/F2DOy9tFW0cbXFzf9zNt71rQKXZrx3KYIfFNB0ozo+tAad49fHK
73bY561SEvv8GuwZN3honXwe17MwSf5YX4PWLw8nq1XssYBH79c7FOvwk2/1
ZUuVPfZo+2BwkHEdmqTvpVidu4B/ngrp6+VcB7Nk9MeYeBHve2btkbB/HQx/
MNO9/3QRu1IdotESWweDbeoEa/9LuOIqMWXj0Do8MT8TevTcZcz9q0Xm/fF1
uCL3dY5R7wq+KpeNL6J18Ll3zT7HyAGXJN014dZeh7lvIT9+XnPErBsGQ9XG
6/BvjDuLLtUJXz4v5H3Peh14ZPv8qfuv4k+VS/RHLq3DV8OBQA10HdtFpskm
e6xD462AQB01V1wwe6NS9946qA0mivuN38BU5qpndx6uA8ddTmzbchPn7B+/
6/B4HTLyefKoi9wwIbCUee9/6/CsRvrC3mJ3bDoc86w+ex0Sz776p/PdA6+/
O14l/2UdChJgO33nNjbgYLAerdjFMyBOuyLtjZ95dU+m1q5D9hsZ0/YLd7AW
eshO0bXLn3e9w7HRuzipqdm2aWcdRNx+Viy89MdHF10WXdQ3QCVi8fSoVjA2
y73V322wAarDTziTqEOwh4Nno6HlBtw+6idiXhaCC9t8c45c311PZ2j7UyQM
t8T6p2R6bEB7LU1Xe30YXtQJCuXw24BWpdInn26EY/nSiMtLMRsQ0rvtF54S
gc1uPzJxSNkAkekYvg7BSOxxOB79fb4B7Kuvz+dnROKE0aRDWrkb4M+9Z1yN
NQoXPkvh+1y0G58m9t1fzyjcYp1BL1W2AXOOz7KLfkXhRY7M1ZTqDWh4P5d7
Ym805qx/OczwewO+jLqWVVtEY/ng1y2+nRtQQXv1eVtwNDaD3IqpoQ0wFjTP
ncyKxh6reXl2Mxswpkr6lP4pGifkF2Y0rG5A1qoze3JxNC68VhyJSJuwHGbk
mPE6GrcIl/jkM2zC5T+/myLCo/FiJ3YS4tqEi66p8+Y2u/mTKs/GH9iE7ABv
Fxa+3fyGVWqUEptwjXfp0mhdFDajrZXzPLIJBvcE/x5yjcIe5b8Ehk9sQrAn
gWRIiMIJPs3MFmqbUD4YMdH8IBIXHm3drNLfBNNrlR0X1iJwy2T7uKLFJrAG
6RvhCxF48WVX22v7TajRqfWpLt3lm3eoMMJ9E3ym3kz/MQvDZk2jmZu+m6Du
dcmSNi4Ue4RPxrgEbwKhx1hLrWr3PDcXnA2fbEIl56W4+QPBWL6PJMqBN+FJ
wJtDo68CsVkKNUfQz01w8M/nzKwOwB6m9MSlpk04ZFeWEjbljwu/s3W1Dm6C
R4/Ymri/H5Z/I5CYQr8Fl1kShCOMvbHZJZEHDJxb4OfD8Hl07Db24JO45bt/
C1LfPgt3j/PEhdGH9e1kt2DepsKnmssdt2gePdmgtAVfJz4GTc7ewouE45JI
dQsap5nerXbexPLuylRCZ7dgPKTD7Um9CzaTUVmIO7+7/3ZLSSKNM/YYUu+j
uLoFh2hFY7Tsr+GEDO0GD7ddv7W/0s1WJ1xooV86dHcLqtemtrOdHHELq/Hb
sw+3wLvmC5UnlwNerDZ7UhW9BWkc1OWqHZexwqlznq+fbYFZ75tTbm8vYsaJ
jGzvN1vwK1Kq6mnFBdz/pK9D88MWGCKeB9Tj9vizlggLT8kW1KS0+FkK2OOY
FQeV4W9bEHW9dyXtpx12yHrt+bF+C7aspt+aX7XFp80ns4Nat8BEmNrDS+Ac
Hi+4xSI8ugUlNtXvZ39a4bILhSrzs1vwcad4jaXIEj9mXfEsX9sCSpXDnlL5
FljN1bfzPMM2eBywrVWuMccZkiGv0w5tg/e5ymmNXb3i0Vbdef34NtA0nDaN
jDHGuiGMrCfRNmR4WEUK/zDCq4Oxt9uNt+FaWLylwk0DbPJfmiq35zbU/yzy
89DVwjQ8BV2Pvm5DeOfi/Hv347j7+yLr+W/bIEPUE55SkseFHsfVDtVvQ8w7
Hy3Spiy+2Fzypq57GwT9v2/4TIjgkqgqLzrSDhTY6j+T/UwFNym72B5o7UCk
TEWP+qnToPGBX93EeAdim8tknM8g2H/xoreg9Q7MZd/66dt/BmrwSDe+vgN6
39zDj+5XB5G78283o3eAIuU4Tfh1XViXVOipfbwDVbl7Ttcu6EFTmxd76n87
4JZAd2LF0wD8jm15KxXsgD5bVZBNgRG0z9Fo3P6zAzkp1PwlLqbgu+TTQurZ
gZQ9wWup+81AYG3q4qPRnV29pdXb+MMMKjft5/bN70Dhtgrpl5M5OBBa7mdv
7IDgSkf1MuksUAYKh6SQCIhwWDr5v4Sz0Eph+8uehoDs8//ZHthvsatLk7jE
GQmIWEdvVZdqAXdoGs9NsRKQw5z0fiZWS9AJo3vxgYuAFGwa2bTvWAIfg+rE
nb0E5BooWTvTagnTkb5yiJ+ANpsFzvtIWAFmLrpDLUJAU2Nb4OpiBTExM2V1
EgSEVCcM7F9awUV2Sdr4gwTE4iywtNJgBfIJFw2t5AhoUldIcH7SCqi405L4
jxNQc/omn8SmFbQ+/tM1dJKAvkx2Dt3esoLsPSyiOYiAaDzqjlrOWoFPqpaz
mzoBhe3pl6NqsQLd/YEfFHUI6Fq8anjeKyvge/p1fduAgOjjAovfXbOCaYGl
M99NCUjZ3OZyLJ8VlGUeCouw3F3vMPBXsdQSYkWcGo1tCYhK0+tPl54lXMx6
xsN7kYBu37DU4KqzAHmJDrtuBwJSYh5u+nXSAqjfcGa9uE5AwxmaF7XSz8Jf
aYOpazcJyJSv63jdnDlk54bIH/EkIAu6AqPIE+bgc7j87sodArrJT+Ob720G
+4/K0wc9IKCPLh8dyttNYLrQxVgnlIDeD3wKGdk2hrJjr5JZowgoLUvd7d9+
Y7h8Yq94ehIBFeobXjR8YgBvzhDUil4TkBxvT2b2hgb4VipF+L4joAG5yKa7
VOqgr+7erPKBgDxfXdTzoVOFWa1h+4YSAopqpfvSv3oajhnV3RttIKAP/Fr3
aW5KAm0z1fd3LQRknTe+x0NEANpNgdGznYD+61MXO7xMB74WBSnEAQLikYg7
rL+XDxu0T/RVjRBQsdeCGD+1JOa3EZWMniSgoSKesGAVOVxhl/xp7zIB+TS9
+rr8VBkn9DZt964T0KU9uvaXXqjgKxcZNF7tEJD7wMNCXlGN3feCX8tROiIa
bovzq/+oj/+NfNq3zkREFjqD9/iHjPDbq3MXy9iJ6H1XUuEUnSk2cLk8p8dH
RObrRWTLLAvs92Koe1OAiO4/JKZ7cVjj9x0OdTmiRMSrMXKkLu0cZtW5+orx
MBFduVxns0i6gFHAeELJUSLqUUkzl3e/iG8VXw90ViSicYqw72rzl3CzmKtt
3RkiutYiElfA54hJdjM6vhpEpEDPP/akygkfTbypKKNLRB9ttRI8/Hf7OYU7
R6QZEem63Ome3uOKzXu9qnUdiSg2dKzu1aQbDuZZK9q4TkRFLbZDfbPuuMjA
58Xbm0SULNvDsnfNA3OX+t5n8CEiRiwWac7hhdueBCjURhLRtHORxXPbu5i2
iSR8N5aIFg83MHy/6YuVaINYpZN262048vVZ4D2ccjt4IvwpETW/nNQyf3of
nzONeKZTQEQNjFUlMs0BODKc8dF6ERHV38nk+E8nEJeWR/m++bobX2VdvIUc
iKdXma9ZlxGR/BYhVPvQA3xANsaC/jsRSepcifBPfoANHNnUv1QTUYZKG8f6
5gN8PyNO7tovIhJ7fEBZ0SYI5/3hENj7m4i+e18swQVBuJcxkanmLxEJ+yhK
8FI8xKxq3Bt3OolIudvwW53uQ3zm7uNRyT4iminKcHSJfIjdCnhb24eI6FG3
W9Sjbw9x5tiTyrBxIkrN9nVqWHiImwX25SvNENHLDOf1xj3BmGSZljG2QERm
f28JnjkWjOUe7Y98skpE6qYRz1t39eKlHxl3tLd28X8bFzY1DsYJW/yOa0QS
+hKdSQgyDMbf5J+ZvaYmoaf+PTGqqsF48bqQihUDCaX7fuG7KxOMRZ4/P0zH
SkIZcquZwgy7+vOfyP7PnCQUef/FV/Weh/ghWxb91T0kpMyfGLGW/RAXaYmv
8h4goWY2108OTg/x8P3soZ9CJPRE01b92/6HmPuT5G9vcRK6d1fromV1ENac
flMmIUNCVUciSN7Xg7C3qMy7NlkSch59YhVMGYSzz+WmhiqQ0Ke1/v2LCQ9w
W/yhMMUTJKTSSasE+x9gutr3t0eVSajGKVFoMT0QX1MqMNbSIqGIetktpogA
fHui+cIrPRIS9zZ/V0MKwIHpC7eojUmI53HcXenb/vgJUSHumxUJKQZJPDj3
wg//rP7UjK6TkHo9cVin5w5uudvW//QGCQluXV1/+dob9xxcm992J6Fop9Z/
Hh5eeDn2BEepLwl5FU7VxrB4YlHrUlOlaBKSPG6p4uJ5E8sydl9KjiMhWzU/
nw9fXPEp8rb7ShIJvW4dN85IdsZmQijh41MSkri+KHIr0Anbt9i/4HxBQpcO
zh0eeOSArwcHFLpnk9BHn/ojge8u48DxipYj+SREvFy6TRS8gKPTBgZjPpKQ
z/P8e2PjdjjFgHJp5jMJhXu7Zt0utsH5Bepc7yp2+U/MIt4vN8cllx1EmapI
aFq68E7Qpgn+yR2i4FxLQrPUp08Z2hjhXp+f5lItJORodvqTJ4UmnpQZuxLW
RkKFGvYHvj9SwavddLdHO0nIk1b6VPrXU5gyVipYs4+EZEn+SaF/5TGLqm5S
1hAJ/Tsv1bvULYX3Ll3PohonoZWU5ksdW3uw2KvIosvTJNRidjRjbCCcrMzw
q1VohYScTlZS8ZmJg07p9HDAxm6+uh9oZUAWzt5gWend2Y1v6310z1cFuCgo
S4MoKdC9xLyW0qMnwOW3Ec9TWgokkFNyRcxEGbwf3hLfZqRAwQcyP2swnYGg
43HHbdkoELekf96jnyoQM1agWcJFgT4/FktcO6cGaam/LfbtpUB68bn3AuvU
IVt/0dHnAAXqFqqn2bNHEwp3OL3bhSjQ97K5kRQ1LSjLVwhVFKdAJ85Lfv9t
pA21l84mP5amQD5vM7x8QQdaubyylw9ToBItq+cn2HWhv+pxsbk8Bep0O2by
X40uTN8p/lmoSIGYPjlGH7ymB+vS7W0cpynQ5p60Ept5PaDuXht1O0OBBHt+
N2Ze1ge2mL1rTeoU6OSvgQG3Cn3gUzlJd0SHArWVy9YeZjIAiUWbPTEGFCjM
UmLvIQ0DkM/ylZwxoUB7SxuD810NAFmmKxlYUCC2iTTKyRAD0KMna+faUKAO
aa/bW3EGYFHSbcVov4tnsH3PYowB/Ex+zFNzmQL5GZqc5ggwgBOeRn9Cru7u
X/7hyHfZAHKM6eLVXSlQ/tOa0oMnDeDAoQojCncKJPtoOeAGjQHE0N9lLvei
QNtX64msNfpAGjla5+dLgQx5CZFKQfrgUTkZdiqAAlUfStnHeFwfhp++1Fx/
SIHcn4vcezKgB5a+dlTF4RToKY/MmYFwPaix5Kn0fESBrrix1rUf1IN3bGHK
c8kUiDqVTl3xmi7cfuCsMPqWAknKmjgxNWvD6HnRhZd5FOjH72+xBBdtsD7V
nXfpIwWyq2bUm6DTBuUlQ5ke8i5eE2rvCD0tyGuiHU+rpEAXuuZRwoImCL0r
f2X9kwJVFPMEKz3VBGrHo8KtTRSInfE1tzO1JnirTvbGt1IgLdvfjFMVGjDO
/zLDuIMCKT2T86IO1oBzm7bnWHop0BgKfqZkpAG/2rj31g9SoF+FxjskIQ1A
Hxv+ho/t1sdAbd26oQ4FsaGJWtMUiCr8gi5f965+dj1jSr1AgcxrNYJlq9Uh
SWed9dsKBVpKHC23L1UHWvEPvwI2d+8v1QrT5Bd18KFwjgQiJapk+HWDVKEO
kz0iOltUlEie3Cz7vVkd7Eq6aL7SUyKB5PpvulPq0Jic9N2bhRId4WJtesGm
ASqehg+OcVKijzrFHb9BAwqNac8s8lKiRzZanxq8NEDsUPl2/n5KRNVKehDw
WQOS6X1KbghRohC2Y5LfKDWBfkTO56A4JTJck5K9bKW5q78mjk9IU6IOG55a
/k+aMP30xVK2LCUq9dvH8mq/Ftj72n5wUKBEqjIMD9MitaDZkvuWyAlKdOiS
868ECm34yBY6+VSVErW1iDjeodEBsWn0xlaLEtVmAp90vA4k16w57tOnRBYd
c65uIrrg++D6QNJZSvRnwqDkh5keqC0Z/Iu6uru/daX0ZqsBFDXRJOu6UiJr
neullHcMQeJdmTmdOyUKkyYPn2cyAkZHuaYg312+VLd0Rt8agZ/qRLRKACXK
1Q07+GTVCGb5X+gRgilRkJ+V5qyKMbS0cf28+4gSafd4R9X/MgZBWdfs0XhK
ZEOGPjMGE3AN+RFqnkyJCvljcm6qmUBJ94GrFWmU6AHTjcHeOyZAd8xL+/Az
SnRWtu/g9bcmcDaqQTLtJSVK4T2R1txmAi8Gxenp3uzWp63q2k40hbmT/uOe
7yiRjHiUtLqYKSjHt9X0F1CieX734D51U4gYl31r+IkS3Qh1NA60N4W2M2ER
JV8p0cVTh75R3jYFsSd91yXLKFG9Qcdpo2BTcJ9V0kv6RomeOTi/PBtrCmWa
cTIU1bvxFM76cj42Bean44w36ylRHpv8p5hd22ZZZaqziRJJJRB4O+NMd/tj
ar12KyWS+MniSR9mCksvFnKL/lGieCK/xiEfU1DZ1I0W7qFEA4Ljr2wcTCHG
9IVrzAAl6pSTKHujbwpdbzYNtkYoERc16z4lWVOQIpkfvjZJiejz+82kmE3B
2yqX5e8sJVK/0AjZIybwPY9qVnWJEhWV9+T2l5gAO61dY97aLh6FNGqWaBM4
f74ob//2Lj+tnW8cbUwgp4g5NpxEhXoLj2tJi5qAxhVsfJmBCu0PdX4/984Y
4kt45JpYqBCfiNXtqzeMoZfjJrsyJxVSUnOdPX7QGO5WCPzm2U+FguROceY8
M4Kfe+58CBKkQuqpt158tjQC7ltN8XOiVEiwarJiavf+5PEHmtUeokLyHqtE
oREDGPQd+OOHqJDiEYHl9xf0wOB4VtvQJSokXMnj6iaw219ypLs/vNn1X37z
MdlHEVoP8jnff0+FVmbkH5pPH4Ow94zrOoVUKFihykTITgFmC6a4+kup0MSv
oOPLsnJA/vxen7WJCp3omXbUPC4OVlVHS51XqJB3pFXFDyYqzKgtoqu4SYWe
tqozcNOw47IaznYKIjU6/52jeThld/7+WlpMoadGe68To/bdE8GLLZ9kqvdT
o0CS1NYijxyO6T+ZJqpGjVrLnDviRhFWuywjNadFjRJEzGoiOs/glSG+4hJ9
amRyRHxxf70Kthvb+m1qQY2Gn+w//vmZGma/Pn2B/xw14t666p8apI6/T3bP
jNtTI6GN0ZHaCxpYZhYzBF6jRuu0yxdnaLVw7628J/o3qFFzokf2nyYtHL/w
n/geD2qUIvrk4FCcNtbwjP046E2NwmyF1KN0dfD6coBq3j1qZKTskH96Qwe/
83ZruhtIjS4taTtffaaLL6xfPK8ZQo0Y0OHk0NN6mNPXdIo9khq5jJr27WnQ
wz+3VO92x1Aj0YBvvs/N9bHvfXm6N4nUaMlbvfVDoz4+TBR97JlCjTw8w+j7
wQD3B3KJnnlKjZT07V78yjTASZTUHxhfUKNr484ZwmsGWCd4GbVlU6MqgpJp
gooh3qIZ+fU8lxp16lHVdvkZ4rywv+duFFCjmYTjOz9yDfFlhp/jJz5RoytB
GQKCDYaYN6rYm7qEGm1mt1VV9RviWubX1M1lu/z0rrA+GzXEfjFPEtK/U6Or
2orZ6b2GWI49XOhqDTV6frrse3GNIR6K98mTb6BGVB5rjKtZhjiZ67oyoYUa
vf77L9jF0xDrPbapq22jRk3kuM/KxwzxDq+e9eMuanTEk9f+xZgBZjcKitbr
3+Vv/Y5UVqwBFgkpqSCOUKOKFYU+vYMG+Bh5cbloghq9xQsicyX6WGtJRtp5
lhqlenNeW0D62FrmynnBJWpUvcDV9OWzHna5lB7furZrSwafKhTXw3FNTJuI
ggapZl1Iph3SwS9oNWSXaXYl3JIxtlDQwZ/A7/JbRhrkGdw/0uCrjTtzp+u4
uGmQ18NI6R8Lmlg0vCF9XIIGGe5/f6ckQQ0rltM0Pz1IgyTSmy0G8lSxzipQ
m8vRoB4s1BVQrYJdHfJc8Uka9LfhVn36PMLFKrGQYECD3lUVn7zicgLX3Kl2
1zalQUdN3ThtYxVxVx4xe9uCBqX8ufo+rfgYJvG7sV69QIMEL1XRn+c6inU3
TPpOe9Ag0Xwq2Ro1CWwnF8G14E2D3ERau6RXRfDNq5Xa2fdoUJAYt353mSBO
+Hu0gD2EBpE5L78xl+XBWczOw1URNAiVqdaSTdjwZ/UXe+/F0KCIWzNhZmY0
uPsD54ORJzRIcXv/s8HOBvLsuN6ntAwatOz8WdCVclaZQujhhPFzGtR0qzn8
SBQRuK1K+WmyaZCx441f+5/Rg0TMkmlJDg06183FzJ3BBieqDobeyqdBRe7G
b53fcYHe9pUSsSIaNL3/+sSW/x645dwqEotpEIMm/+FCBQEIes5spfGNBmW/
Onrev1wQkv5pRG38pEFd8zvJYoeEIZvtfnlePQ3yKYxXrL4rAl+0Pi1dad49
zys2BhlvRKHu/ozkvr80aOmO28GxL2LQUyRu19hBgyKrkmM2c8Rhfup83MNe
GuTyrNb5eIAEUIom/zgxRIOsj3o0kBQlgftc4/rMGA3yF95eb2iSBMl42sMv
p2nQxTKZQm5DKThVgy5ZL9CgY5LLdaZ5UmBAvPOYZZUGbWia/KZZlgJ7xfza
b5s06EoMceajgDS43RjbuUOkRYJ5uR/6ZaUhKEtQ/jA1LfqU9Qpzi0vD4y4r
p0F6WvT1+GzUHMWu/9ERrMVCi37lMDbO1UmB2xk67lwOWjTxooJSMmA3/kKv
MxsvLeI8k/cRCe7mf1lc6clHi1KNrTMHciXhlEXM3n8CtCjnyCWKr+K7+Omc
bimL0qIYYdM3zo8kgPsr/MyUpEWhhmrtT4bEgdKFh5/mEC0SfsgT3y21y8+B
Gc/rcrv79VU1m86LQW/jj7qGY7TIzoazmvRQFL7K3/ZJBlrUP1KJ3mTunsew
ftOmKi1SfPoyNzdNCJKSRSUuaNGiwuSay8thguC22fJH0pgWJfGKFfx8cADs
3+XIRJvTIvqTGofj+fhA3z7owbwVLdJ6+o6nK3MPSHw7euTrRVr0Xahs3tyP
E3oi4iL1PGiRBkmYxv0YBejtM1K98XgXT237XsYpOnyiXjzldyot+jd0Y2Dy
OgsWv78ze/w/WvTbjzn/1nV2TBp4l0F4TYv4EoPn1PN58GxC8NLl3N3z4DRv
zjm9F3dr2OlV59Oi0aFy+4vFfPjzG6b12C+0yL1ja/pWsQDOOjdktEymRXuy
ntHf/bP7PzGXvrKupEX7VJwLl4aEcGBZwja5ihaZ0djOcYwJ45tuzubCdbSI
ncNLirtbBNuJqOWENNKiggIqVt1voli3dR/FZAstSglpmaZLFcOKoQtWRu20
KCr7HWRdEMdiJ2rzCrto0V3e10wePBKYczKTZk8/LRoo1HGs/yqBiRk+dveG
adH0TBYtt4EknjY0+dg3Totm77L8K62XxJ1EKUaNGVrE6FD0UOWEFK75QLz0
ZoEWIadhH9l4KVx8pf0z8yot2ikTjBRuk8JZPPms7pu0iGX4/dEqWmkcXx3q
+JdAh5Iubfm2ikhj/7v25JNUdEhmYfIBn4w0dj2oyPUfHR36tUYj4nlAGp/r
YXGmZKZDA0yrcr82pLBO7EiFEzsdmjI2vC72TQorquI99dx0SODU1mSElxQW
XUq6eWQfHXpmGxK9j1sKs79yrUrkp0N1PCN/dp5KYoKVxoF1YTr0zj5Y8yaX
JDZTKBIqlaBDr2KyCFedJHA2m5i4/0E69FT5cgTjC3G8OZUorSpHh9oyHqQ2
/BTDRjVUstTH6dCqC/GH/F9R/CLLU776JB36KC4S2togglcDhxQjER3y0HL9
fueDMH568vsZdh06pAENbj4giOd5FDT+GNChmJWXlNW/+bHG4gudZFM6lMUp
Nlz0P4arPJ7KLgjbl7u5+2LLVraSbCHdmUSLIgkpFCqKQlIoyZ60qEilhU8S
SUlSqVySRJSEUCmShJIlJOl7/3x/57xnZp555pkZGRXRjxvx61Q95XGtrpLY
EwWeSKhqs00vWB6N9BtSDrdLik5P3dnxPVQem2lh5Jinv8t7WzUDiyLkccH7
VRVaJl/LT6RIhpnFyeOeBfzLGTAs/CBWlWSdLo9Sa/UebhtlguEHo+PSF+Rx
Gz/N4es5LsQ/yD71PJPwr/CrY6a5IswNic1wyJfHQp0rzU9vqkHk5yU3Nj6S
R+XT5F/HIrWhUXS7SKVSHpM1pFydeLqgdVH97qdqedxQFp+0MVcP6p3Fy31f
EfaOjSxed3keqC3Y/US3WR6XR4/50GXmQyi169lgmzz2G5A5FfMNQelZxauQ
bnks/8DeGBCyAAKzDZtNv8qj0olaMZGsETyJymqbHJBH2UD1t3fSjIDrTv/w
8Kc8Zui+WEMXGIP/wuiuqF/yuNNw06uracZQzvr5ZcmUPPI675Q4ypoA8+fm
fql/8rj0+nqZyWAT8K1/9aNGkoSc5M5nx16bQFkejCbLkfDDE3lDaV1ToCXc
mrCnknCxzz0PlzBT8PGeNU1nknCb+VbP3Y9MoXRxilgzl0T0U9OhNZOmQFL8
J3VWiYSeR5OnB/TMYNN4oPxGNRLKLWl2tHU2g+KmTqrKbBJ+8o2u9Qo1A5lb
DsxPuiQcfXl4/oqjZrDhaDn3igEJv76w7ZE/bwY3/AyUfI1JWOEX63n/khmI
2VyepWtOwtgIw7YdxLmzGk1r0IqEpHYJivkxM8ibPqhzawkJU56O1+I+M5hu
+z43ZBkJnTZ7fstZbwaOdz0XmK4iobabOR42NIOcUw2mk2tIeGAo/DtZ3Awm
dy22fOhMwm9xPwvW15qCdvVq73kbSLhay+a1/AlTcFX2SMr0JOFknvi/l6tM
IWFPwC2GDwl/RChlP5UwhZK6/a1xviTc874rTPaOCXxWT/77y5+Ewdbf/t7x
IPCPOK+1PYiEQ6fnvuz/Zwy7te+HrA4nIfI0M7ONjSErquZ8eSQJDbnchPin
RtDY0lphGENC76iUsMI1RmAQ/4vGSSbhq8DcdRkuC6D/k1HBhwsk/HKqZOmj
lQYgMLduWpNFQoukbSslFefBipS1vytzSNg2+9HgtS59yF0cvDy3kISVEe+Z
lA26sCWj8HOgiITqR37I5U9owvt1Ospin0l4hH/5xrGXdCAXLFwa8pWEmbuT
fD7dJoOlxHL/ngHCX61Xc+7WSMO5om33n4+R8OzQAe1AiTGhC/WK8ykZMrZw
HNwk1abK47cWH5Akk/H909LHCwolRCUPK7P3KpDxF03QdcNUTsT0//RzA5+M
e9QbLsdEMUQvn6kc19Ajo7Ryq4PFUSXRX5V5JWkGZDwd1bhx7KOKaO5eq3cy
xmRc57IGehXUREc13XUHFpHxWHeeyRYDDVHZfn9HT2L6bx0eOfJdX1PU/zoi
7JUNGS/GPnAeU9YSrYg+V33HnozTAbLJPoRehb29NjjbiYzWnjX8xsw5olyD
e6xzrmS079rxqXaDtqgl4ZklyZ3wr/3D4n4pHZHUhxbvyM1kLF9/VLM1S0dk
bPIl6ccWMkaFn1i9eJ6uyOfo2C2v7WR80xw8pyNfV3S6W/Jt004yeuGKxSGE
/lZasGZsdpMxgdewozlET+S4zP9F1l7i/uErh+Ie64k6nSrPTUeQcaPztgb3
ST3Rzs18X7coMh5/Z/Vhpaa+aCogyLgklox3F6ySWCrUFyWFPxOjHybjnBaB
uu1KfRE3QeVlwFEyRiyTC3e10RflnAq9UJNCRnDW3pYwX19kdPnFds00Ao+T
Icp9JH1RxXUNs0PnyKi85aXHxVY9kcO9CMl3F8nIfX/797PTeqL3VY2NZv+R
8UNa6MRZ0BP5N2pfPn2VjHrLNBKdPuiKJt9HBfzIJ+PX8mvDdjt1RYnfWszt
bhLnvsJ3XYNEPx2fK5NbTMZDNIX26M06omyJ+Dfi98hYlfFg+uxTbZGhwrss
z4dkPJD4afqCsraoXMko8IGIjEeUwrukts8RdZh8ktv9nIw1wdkTQx1aou1L
FrbW15PxIN0l3F9SSzRuf+KKzmsykmJUYyzUNUVMPyvhp3YyfmJdTacS/SVr
TyrZqpOMgy/GzbxQTWQQ3d92tpuM/P7c7zp7VEV258/tWTNARnr0xFXWPEVR
3IuxvPJpMto8KXL6oswQMdtW7VMUp6BPpKuCcTJVlNWTvXSfNAVl6AanSl/J
iR79deycR6NgfKJ/1nTSTPnY/ELWpVkUYj6Mdwt/2SmMtZLqmtSkoPONhe19
WsNC+kr3m846FNw85OnXdWhKONdHfiVlAQXbZ+8Z2x4sA1vTtkUdsKbgi/fb
T+tMsmAk69Gqt8so6CWseT5E4kJ0IUtgvIqC90/PXTKhwIeLzyrv9K+j4Jb4
ROHUoBLoveHHLHOjYNvgIXWsUoH7H4Mcsj0oGFLLS9+UNAuaJ1W+bdhGwZ4M
b1vXQHXwkd5bencHBb+p+2CAqQb8ZNTHMQIpmKF6aHb3iAZEqWqu3RVCwam0
rEWxuZpA0d+vWruPgpGLx/4xHLUgY+HrAa0DFHw79e3mxiEt0LHReRB9iPAv
uviYXvxsKHU8lPg+joLu81ZyXWlzwNazdZ15EgV3lDnV3T8+ByzTql+OHKNg
r8rJE+lkbTB4UbKy8BQFN3ZVTcQT/VVDIuepXzoFE1dda939SRu4FqmgcYGC
jksKvq5bqAOk4Niy95kUnNDWOalH7Bf/cnebns2hYPbceMs/j3Vg7INX0dp8
Ci6Ss1vz+rsO9LEd9Sk3KXj8wLpnj+m68H4V5D4rJuI37njYOkcXGmMN1GPu
UfDALO1/Zoa68PSBysVFj4h8Bpcn/J2rCw9+UnjjFRS8dI3/a7WKLtzUnj5V
VE3BE5ZC5VXiupC9aYASUEfBO9ezEtTadSD9TMfh2a8oOGfdu9yJHB1Irq+V
+PSGgh92X7UW26YDUZIPDma0UbBo8KJxmEAHQizzJp0/UFDrQbTXtSfa4Lv7
7B6FbgqSei/mfvbSBve8xB+1vRQc2moyETs2Bxw/7t0RP0BBwdx/jz8cnAM2
3G09wp8UTOhR0Vz9dzbMjV/acec3BZ1WV5Y8+qgFag+NXAJnCP/SbhduW6oF
nBH1Rh1JKqaebjQIuqwJM5vFnl2iUPFOgkS6rJUGvFr0+PbhWVQsZS74o2mr
Ck9Dbsy11qJiWc5uR50LynA//8K1aR0qfk4QmR34qghZvP2XdhtR0fnh0hiR
Lw9CRs2OuNtSsabHy5wpoIOv3hwprh0VH6/tmWUQToGN3pxDjQ5UlGs+UXv4
oRwsfTUaautGxbjdFpqjS8WBXVDkNT+Aiv81bJXub2wWynVnvvsWRMWdM/FO
Nk/Ly6f5Ka45oVTUGkoQVnd2lX9J3LVaEEXFwSfhOkbJ4+Udjz1q3sRS8ayl
c7Ql/2/5y7FV1icOU/H5a/nhvjJxUamPnrnkKeI9vwvDK2pkRdfPC+48PkPF
vqlFPaNZJFFmo5xBeAYVZ66cuJi+kSpKk53MM8qkYjIEKlwaURAlCb9qfr9C
xRW/bxjeN2aIIve2Xr6WR/xvtt6x2J0pCr5RLfAppGLatekE32CWaOvnkjTl
YiqefGm6VWY3W7RBMUfhbSkVa1UCUhs9OCKdeqNCfEjF+ztN3ofM5oomD1ba
XRdRsfIzd3tzB1f0fL5jH+spFWMWf9SOjeSJznV1Jhx8TkVSKqufR+KLtqfu
0vxaT8U8DckKiOOLFtpOVzi+puKub65xd77yRTITyZvKWqi4WELgYrFQIGrN
E0xrdlAxoC8pJXu3QJS7Me/88U4qFridP16fLhDtpSxcONFNRf1065KsXIHI
pry62esrFdd/Wryd/Z9AxA52DqkboKLb3dpRnUSBqEf9s4LJTyqeEmrxB1wE
ojtvdhdeGqPiGmnH9BC6QBSbILZK9jcVGUUtkt13+SKnhSl9wX+pqC0l7eC7
jC/S+KaS2CFOw41iuTMmT3ii4YwbmjYyNFSJN7lwSpcnqli9qLKQREP1LZ4m
LZFc0cmZ2k08BRpKnR+w3/OII/IqcpuOZtFQ9e4X3kgfW2To8/V8P4+GeEfM
u0eCLXpVLdXyWI2GRmEROzPEmaLLYakh2rNpCDn5X3O/0kWBuhr0U7o0XNlv
Fr/jgIKIdhxWbTWioaHlw/o/4STRauf9lSQbGroZbXz4xHumXFlGfnPoChr+
U2K8qrGbLB+4d3b6w2oafrinIZdHHSlPVrq78LYLDW31w2Nqq5rLn3cPFa73
o6GXwYbtlnm/hOfSolZVBtCwI0rcmJo4LfRbRv2mF0zD9oKZqj2l4iBzXU9r
JpyGzz3GT/3IlgPb3dsycpJpqFkvv/LkXBawNccW0lJo6LKk0Eipgw09zbEt
Yak0nKmEgxBL7DPmWfRVF2nYHTdps0skAOd+g5slWTRccWhv++x1SqB58fEq
1as0fInf7Uo6leHJv47E4UIatqo/yLXtmAWnb+/Qci+mYaEDf8o7Rw28t0xW
Pi2lIT9H4SnVVR3Eajh/z4poePBJ26st1zSgMTwnQ/wp4d/XWErUMk3I1DM2
D3hOw9zuxR5fOjVBeMJxj/A1DevUrAJbprQg1D+sXKaVhoe+l54sTpoN15dd
ln/VQcOJEwpab6lz4JNGtfPZjzRUpu6eI588Bzj/BjI399BwOsKDwvw7B+ze
MQe0v9Fwc5SjYqWvNkTfszD7+Z2G8isKiwafaUNpqlfM/REaui5nfQhR0YHB
oMP10RM01N3ZHGPhrwMaq2/yVk7T8E+DqrFBoQ646bT4MMQVkM/ueGzbqwMn
pKYL26UVcP83pW8HOEQ/+KTx+z+SAtLgU3OjpS5MPVpp46+ggJvb355c4aoL
hueDU4zYChiRf9xqwE8XfPee7ZjiK2D+6HaJ6iBduLC2fHaVigIaaKlOfdlF
9Jt5X4KPaijg1vdqvd4+uiBDojxap62Asz+Uv11jrwtWvUayynMV8PqnjO5a
A10IebLBqcdQAZU+mIoGZXQh73L0pRumCmhMIjm9bdGBzv3X+kItFfCegdWF
Gxd0gL3+pfFiUMB47+zS8246YGf8K0raRgFbwzWbWig6EK2gXNewQgGDJd/S
Lt8n8Bqw5qTbK6DslQsVRh7aMFizw2uTkwKO7Go40jIxB9RzThbMWa+AXj/F
lZ8fnQOu0ffGf7gr4A61836r+HPgmEfnknteCvji+wtu5qXZMMme27bcXwG9
Y1umC1O1wGDYSZMepICzhhVZX6W0YGtDRGDbHgXUqX/1diZIE14l1EjtOKiA
fXYRDXbEPJI77rMg+aQCWnH8Wbm0WeDSdj65vlQBVdW2HdZfyILkkoqWtIcK
OK3tmSJ/mwEVJ7+qeVYooNtzyfpgfTrMXWl673utAlZoKZ1aYUcCqbLGz7QP
Chjp0ZAaL/VXaJk+YfC2SwGVI/JPWLpMCINDVPdn9ipgpdGFJtsnw8J3ejvp
hj8V0J+2j/347zthe0Pc5TxxOuavsFx51PZbeQ530VlxKTqO25b/uSkxXB64
eSRlowwdebIZVxQW/Co3z8tPuiNHx1UfR7QD9X+XSwx7xVDIdFzPKbuzfmi6
vN6Cv38blY7aTkm/LBeLic7GvgopV6Bjjf6Yhv0XcZHPi8QAHpOO85vakz8H
SormsoVbg9l0dL2lUy1olxKNe/zyqOXSsTDGdHiOpoyo8uoNFw0BHc1jzOo9
V8uKjv3Y4nBAiY60sqhkfWc5ketCpeXNKnQkb4p6z7WUF6lFN8E8NTreVSo2
uvNXXtT//Ih5ogYdneKMJq5eJolKGEsWfNSi41lX5z/XlMmiQxsndc216ThU
xS9IDCOL7K7c0jilS/h/wSJM6xZZxB70VerXp6OHeOWt8CqyqNNElb3UgI52
ki+UU0rIoryDLZSLhnTcN3nT9nAsWRTy7Jj0LyM6+uf5XU2dRxYtVrCZsTel
46sFV/dO3iWJ5Nz+jOcupGPkiOMCvjJJ1JRVPPTPgo4L+bO1Y7zkRRe/7ehz
s6Ljz86DjV/i5ER+Rupdt4V0VKp7s4Z5WFZkdKCtnbSEjmH+56N7/GVE01Up
TVuW0lG2J1B/uaG06Bll+YtHtnQUa3pz2KBNUnTSZaaKs4KOz3r3N6RtkRDN
/rrzbs1qOlqOmn4rWTtT/nO+1k21NQTe9Bd3DtROlZeFv8uNWEvHW2kbfh+m
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
PnrvWJ5HRHD1/rbB378pHtDIWOM4RgT/B4MRL7U=
         "]]},
       Annotation[#, "Charting`Private`Tag$8190#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"xot [m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"xot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
roPfv39fP+/rxuF9FDCUkzi1Hr2jZGmcvBsF9Jfr7TdAfwo42GzhQYFQzfqm
f7/upvyUc9QLx7PaOeTfz/9onXXK9KHA/vsfpXLRR8+vv/3WjwIamx1IUvj+
GZMLA38CKDD815p7Gh0+0rhiySEKqFpTH0nh+OXucI7YHKFA8KF16/59jzJp
197i08cwv3ZSzHxw/otksmazj1PgsdohJvHvewFlP0x5Jyggkn+Uqorx0zys
Ey0STAEZwdlIFYzvf0tOvtMMoYC4ok+JAcYfPr6iOZ6lwIn1VgPOtXxi61rr
tMfhuH5Xn/B66/iEYOzKl8+R+D5j3VYzXE+Xe+1qsucpcDc+bUshrvdBkneh
Wyzml3NmS2kDnl/leZOX4ikg+ufDmF0Tnzh7bMLkRQL++q65d2cxfxI+hb1m
JlHAoVv3jh/mW+GD9E816RjfeQ+dH2N+jpu3SCzNp8DcC40Xvw3xieCp+ZY7
CymQepyfV4/9jVjuvoTQIgoc27zi271RPsFkDsu3FeN4ft7bYfWbT6TX6u2T
KKEAY+GYN2OST6gGB2etekGB78T9fU3/vn/4VWrlhXLcL+t/iGvhfa0saVvg
00oKsE4O1NXjeWi++VrJ12oKPDj57bYj3tfsClTMTeooMMhX59jg/azTzfeC
11sKmKmcl36C56UHp7DhynsKtH1KLJPE+9rxM2sch5oooDRo5R2M9+NVG20n
N7ZSgL16f3ChJN6XKO6X7/Ap8KwmgtKE97nsj8e15rRhPchO3t8mLSDcbsXU
O36iwCrVfWV1MgJC0TfN82knBd7otITcwn6xXSdflN5NgTD7baR9WF+SZioy
Ar5SQEe5vk8cz2vb6tbVdb0Y3y+/Ey6h5eIG+EsGKCCx2j17Dt4Pa+2mj4R+
o4BWdgRvJzpcgUTp+EGBdd13m+LRawYUcwyHKUCJIHvmoqfydTZeGcX4HzTx
L0D/d8K8Z3iMAiVno94now+Z2p/dMkGBy+qLw93Qy2X8Ftz7Q4Es7/nXGP/+
/KA5pFhkmgIHvPQUs3E8t1MTdjjPUiCc3WGhjHZ2vzPyTJgKdlKa5mdxPvM1
n15kilAhMWCPZyXOt3XijfohMSoEmufP+4HxuPTyU9VbCSqIz6tNmMJ4WUYP
u6hLUcHthVnIMMZzno3IbJgMFZzEFm6vx3hXcJkpn+Wo8Ju17Hbcv/9e44ua
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
         "]]},
       Annotation[#, "Charting`Private`Tag$8238#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"yot [m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"yot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwUV3c8lu8X9r7W+yKhkiYySklmRuXcNhHZW8hIRtkzSZSVvRKSlayEqIzH
+lqhyM5eyZ7Z/Pz+ej7n89z3dZ1xf865DqvpIzVzPAkJSSKBhOT/33c6OaUB
3M/FSaJPptz+3nYzfZvRNy3WBNSEzhpvS3mK3wkm53oSaw88v/Rk66ejxeVf
H4RnmXhAjztGQx//Tjz1l9euVewzCIx1rCR9kSme0u9ecLDjD+/OH0cVHe/F
k0ZdzGJMguAqY1Pi36J08YRpR6YrDaHgyElmcj/jtXiLq4iFcWwE+Ky9MK2v
EBJX3LmOrjRFQWrYEPQR3lU2ewud/rcTA5xWJXcC+Isq5fGCa1U88ZAbdkci
6hNW2eDP3xZskgADWZqGHH31lbJEviyt6ESY/lD1+aRdW2VdyDVf1oZkWGEY
jlgU+FU5qsD4Rj/2HfynG/2e4d7vypTgE4Tqj6kg8+/PHXqd4Urj1uPOnE1p
kD2ae/9zyGgl89HjY8Fj6fC6Ijk5VGq8cujuMZXlnQxImxAPeFQzUZkcyVCu
deI9PDnz6+75nclKw056rnKeLKjyDr2qOzxVeZaRPpZV/gNsP5n6O2r8p3JA
m470pUk2sN5/1vvS/k9l4uujj+c8cmDy7vUZd9I/lfq/aQdVo3Oh8syUWxtx
qvL0OdrbpXl5UPMsL+aJ20Rlv9GR0rMN+TBvpc7BJz1W+TqFht135CNwD6zR
qNUNVXIv+zeuehXAdvbrXuXwnkqaSPKnmcRP4PD0Q2nMp9bKOX5/Id3YT6BB
HVVzj7uwsuUX2Rw1WyHwbU3m+WZXiOc6+aVWfiwErX/GIqanusRDTpDp2t8s
Arur2vv58mPi1iXPj7I3FcH65KmdpaUZ8dvapPXdmsWQ/rmhhCi7In5509cr
cKwYrr6hdI8K2xCneo0XuPnoM1z3UC9c19oTnxH1/buw8xkUDcsW6tpw0NyP
S3kXUALXtPXrTvOTwwfPZ1oaJ0ohfav3bGUXAR5U+NR+5fkCC+6l00ce0YG8
EYmHTdkX6FNv9JJ9xwCXDp7yMst/hcAeGZV7q8fhD3qa5GfyDSpH/jy48u8U
1I/uqwsvfAMVr6Yn9JlnIdPXm2rGowzwyxzb552YwaLuiatKdDkM8dIuxBVd
gAk5L9XTDZXgPpc3IyPDBXXTO5St6hgkKYRX0lNegfRAz8qnIxi49mcFi/3i
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
i+1v+zxM4exiUcDA16+AZtA1tzGZs/8BW8WCfg==
         "]]},
       Annotation[#, "Charting`Private`Tag$8286#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]ot [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]ot ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
UYYUKBVyVj/exkmimmRWkaNYD6eAw1iWkzxqrrOrMMH+ZZlml7+Hk7SZbokL
w/y78ajvqRPhJMpmgh++WmE9r1lbJ63JSZzlhhrrbLB+qAVDqAEnyY9KD7nh
SMG3a2WOukac5M4p8kfIBftPGj1p4Rgnie+47eflhvnfq/wn4xQnaWq93Zbj
ifvFGodlF89ykujZIuOiGxSsOPpSY7UlJ4kdcLoRewvzNaDD9Zc1J2k8WxOh
dgf1LxZL9bvMSfTKutIz/P79fvpw+14nTlLn8CJ/2J8CU9l7QqOunOT6jXpq
5D4FVy4W6SZ5chKpg+zp+YG4Xz2Z9TztzUnkRL7FHcF+GVonly7oy0m2Xy9x
fxtMwfOltj2l9zjJoXn6rlrcr95rJop5BnESq/f8Xz5jPfvh8cdANoyTjKX1
HncJpaAlY8Wt3ihOIqCavH4MmerXfxcbx0m+nB3sUwyjgHX97QHDBE5ynleE
poYsfOLTGs4kTrLvTbrMcuTNQeNGuSnoj5tt51LwfpXSbX72bznJw2UxuUuR
9Rcscjdm4/k3Pbffg/JNFeKopg+cpLg2v0oO9bO3rZUKzkf/uv1Snsbz+CQs
PaFVzEnUDkyIBjygILxRK2D2KyfREeDvoP697xS4XphWzkl4zpstbkD7fNB5
N25RzUnOHVTZI4P2+3GdIS1ex0nWWpncZEP7tmZvMq1q4iRGK7cUpt2mgG1D
ZIlKNycJdTSSD0B/CZ+qmmH85SSnN1beKER/Sj/k2vFsmJN4h6ZTP9HfBvRr
EfxTnCRsQ+3VB07Yb5tPXOji4SK7JsVSX1uivg925evwcxHvxnt8ihhvDqrc
wqnLuUiva2NTCu6/Bs9yiq5KcBFWsRsPLuA8xHZJZA3ndi7Cc+7QJ2Nd/Pxc
zW9pQy4yfcdVwxfz48zrFJlAYy5SuUboe/5GCg6c8bk1coKLfFh/9gaLJNq7
WG7Xx3NcZOPJYd1UcTzfvZD7+k5cRGSufu0XzL8fe60701y5SH3wLVZPHrQP
Q1VFyJOL3OvzXKGP9T7ciNnbfJuL7OmPeqhAR/3Zy/ap+XOROv5lt5/NMcD+
3ZOw54FcJLAhRXvlJAP0xQ+pX47gIpfT1pZlDzJApXxT9K8YLuL1fpNVdy8D
Nl1fpBSfcJGOsK6Dx7EfrNhVpx2byEUeZf2aEWhlAEvn6zhaMhdZ4QUWK5oY
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
FDfHhbu+vE+k0dmPfaYWFrhgwZd6Qxz9P625Il4=
         "]]},
       Annotation[#, "Charting`Private`Tag$8334#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]1 [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
DmsKmqI62J/s6gct3mZ0WOpL0noM7Kfd0Vx7JRc6vH724tHPkO/jPCreFLrT
4Q+tKcnlO/HS3FIs+pgORzee3ByG/C/is8jI5k+HbZ/IKJyB/D/WJ/apO4oO
27vyn6aD+OOSvNSgEkeHG741+8tBfMoHqa2WxNPhNP674zv/Hj3h/L0rCWnw
Pm8uCVJBP2QcmTZoWwTjL46mEyDeQ2fz6fpL6bDpkf5oaeinfsjXntSopMOL
9b7YjpqIDyyPPZKop8Or6V3yDXBeujSOcRMG6TB1q3q1FtwX6D9JyNiP0OEa
q5w3ZlBfpElXLIfGYf3Feqbuwv3hdYZpbuUCHXaqDzlsyULEFdSOvdKrdNiZ
N45eF87rkoEPOW2TDiMBsaeYlYi1dn3QDCHT44l8kuQ09IM+JpluFPT0+NM/
/2c57ESc/V/Je0cmevzBovSnPZz/QZb6qpE99FjzQW78IU7oLy37ZnQ46bGO
kGF/JfhiyTRHLTc93qjXlr4N+eMe5/aFCwfhcydT+2lw7F1Gswx+euxxPkX1
HuSbunKeAD5BeizRlh83BN7kOZ4dJkKP7c6/EVOCeijseK6TfIoe7wt525EA
1qtVJLlKwHy9LgovgJ8fuikwfpYeD8TYVZ2Cepn3wFJVH9PjKGHjbFPwWL2r
829ZesxFHF54BuYSePb24lV6rOyu9ToOLO/5+mfWNXocyPD6SzLYuTVxgl+d
HvM86rixU38TRL7teX2dHqvky356CW5+Ui5Nd5MeB3iGV98HU3Y333I3pMe3
yjK75MGnTg/7TRnT48uamH43+PbzhXQjC3qs+5j/XjXMN3SAorXBmh4vrb7I
dgaXSO3ZkrWjx61eVmROsKqcZU2cIz2+EvdpNQ3Wo0e95PWGKz2Wtzx0WBJs
bchpdsODHhv2jg3kwHquWd09le1Fj9Ojr70WBPu5lBN2+9JjpaXBlJewH+xP
eOqsntNj6/sFPnOwf2JvaywOhf3f0Z3H1fS0AQBH+373NWlBpbQRIvWgRaSi
JEurpbRLFKUdlZI2JRQJkaKiSNGiEhVKRRIlUfKL0ibyPvP++f3ce889Z+aZ
mTNnmUcCmvOerEvG+q28qbgsNF0CjrUvFW3H+rcoPSLw7oIEeC2Tlqeg3V8q
ZyZdlQDdYeNyd4yf7DlRrbNLJUDllnDcU4w/LZl3l+wfSkCKt6PqK4zPR3wd
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
PzPEABdxzkcN0h9nj5s/+w/jXXmBLfHhaX8XwZ8MOPD+UrEa2tBmNMBglAEX
p/b9W0jyV+UfiA8cY8DRufJr5NEtQj+yiyYYUBKqGc4m8zsH7/tDUwwovJjx
lMwH95UONS38w4CuulH5WWT8pnh8cprB8mYZpfzE4/3tNjCZMYsJHRfvqfWg
n1S5SrfNYULOx6n3zeh4Xr+SjBATxtcoFpahbQ/u0TMTYYK5+px7OeR5u8Ze
i0gxJvTQjv+OQ9899uHIhBQTrI0qkuzQIe32CdoUJsQGrpQg48N6za4cDxoT
GmkZFDn0u49vXnxgMWHjizvUboyXOUYtC57OY8Inzf0PLNFBAf7SEwpMGNKq
XrkI/esma2LBfCa8X5jxQQD9hbrzaaQKE1bsFvhxF+O18cMnd0NtJnw3T79P
8q0Y009Yey9hQjCzrbsf4/+RiYr+RV0mLNm2t53kH7mT7yk1rceEz0uMjrih
U4PGbpesZcKT2LFfldi+pG+npX82YoLCXbd2ki8kulcvnGHKhHkCAdo+6KNm
IVv8NjJB8XlA7jz0aLD8qsubmHA+5enQJLZfzzvVSi8tmaA2VTTRgnZgi4wt
tkFv7M8i66F2bLjxfpctE88nxuz3oa1CNtadsmNCdayEkhF63eeEtIFdTNgr
GTWbXH8o5+iEcRyZcOS2qV4f9h/LzF+7mTozIcyo6G4dWqWYs/LqXiYcUE6/
lYC+3F+m+NqVCSZKEUaHyXjFs5cQcGfCvtGH2x3QKZv+jWp74u/d1/wyJeu/
hl/ucvJmwnUpLp+st3vi7rraBF8m7OjvfT2PrNf79XP+Iz8mxM0pVybnt0f4
0We/+zMhqnIRdwb7wxGLRaGyAUwQW80tGEZ7RDS6bjzChD03WwfJ+rp997yt
jgYx4X6yeGsH2n6AonfjGBMk/uvY34xuly1WeBPKhKXGtYVkfV1Lq63iIhFY
X5az71Win0ZOjOhGMaF0W8WxctJfl557t+cEE8TvS4qVoR8OrnqSHM0Ew2EN
6wckP5Fc963qWCZ87SvcRj4v2ByW+jOOCXmvAqgVaOXjiiHyCUxwd6s9Ssbr
S/ef7LNMZIL3Hqv4erKe79A+y5BkJmw1t1pL1v9Nmie2Ij+VCapNCUlkfWAJ
6zz5rjQmNDgfO/wJHXVik5hEBhOYV4b6yfH/fTD8U+8CtoeoRTg9wvb9PbHT
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
WbM2f3iMbgtK6rEb40B/a/hVkn98Q+YDz64ZDjzY+8yO5Cv7si/ScvVsLly7
/rnZEh2luUknU4ALW/4z7VxD8pNVfpxwFOXC4YrV/89fuyvmZmelOBcyf3Mf
kvOz35v9KxSkuGB/v3g7hdxv/yQS+YnKhQmHH/emSX7bvFd7jRhckNpx/hjJ
r+Pjf379VRYXhOlUkUG05Oq9asJcLqje9bXtRd8U0pR25XPhNTv9AMmvY9o8
+aN+LhfiJ6cd29B9Z6tbVeS5MHa9XfEl6R8d40piFLlQvbW17Dl6nortucH5
XPhEM1F5il5U4COlpMyFOevYybXopUtjwneqcoFeeL60huT/LMseS1bjwun3
hqnVpP+G8v2Ni7ngwddRI95a1/ZeUIsL2lKugcRO5sObV+twQWVHVhD5vUeL
aN2hpVywfcnXJds/bKe4smAZF2Jn19yoJ+Nf96qC/hVceJewqYP0n3F7tirO
W8WFwh2zy5rRaYPeZ7et5sLNiJebWkm+It9o8TOGXKi97nj6DTp//HLI0zVc
kHkiHdCNvh/8cGSWEW4vdbbAZ3TNnLZ9eiZcbPtai4fQzdH/dR5Yz4WX1Qd/
kOfn3kqLWt7cwIUXw6dN/5DyS1Go6TXnglG33mIhUn+XbPKsN3NBfMGWK+T6
i5Cy97w4a/z92Bs1JTQl/2Tyk61ccM/jL9VAL3hQFqS7gwup6kuuGZP82Yav
h712cWHf3cJZW9Ara7/vvubAhWUXd5eT+LJ6JW/O3s0Fxfkjy4+ggwdOyE55
cCGikx5WSPKl+lw6o+3NhZ74TEVyfTRp7IGguy8XmqUOD5P8eLmzvw91+mP9
+8Z+HkK3cq0ryo9xgdJktVkV20N3lqf2WCj+Pils6wr01wUnri6O4MI3H8u1
5PnCGe0H8ZknuKCpl/V4D8m/umGeQ1gCF6o2qh0l+dl0X65ouZ/IBf2QU0J5
aLDdYvIzmQtfVQ3W3Cf511yOa7ikc6FS372AzM+dv2ZmZ2Rg/c0qaHmP9vS+
z2q9wIWRoYG4ATKeHP02s+4yF2pYA7f/oeNnCR0MvsKFZwp2MuLYX6SfkPty
9yrG67TACLn/eEVyxc7v17kw/visNTn/K0ja/GLBTS4MfxvWJPmzH3A81jnc
4oK1gEokydf6JDOq9GwBF3IqksxIPu7m+ZlqL+5wIXltVSjJ3/r2ZmmWSDEX
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
         "]]},
       Annotation[#, "Charting`Private`Tag$8382#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Theta]2 [rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, Automatic},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Theta]2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
OKZNCkolJw9Nfc7FjV3Kc0Y7pOC9oPHnswpiXjd5UlrRKwVrkwafH1iVi/TR
XEnFfimImGl3O/79Is7KOr03ZFAKhtpi1qRdv4g9s/TkrMekIMHD+GGG8kXk
NMZ6vBCThv7XP5Lji7IxPHj/PdO50jD/hGvShx9Z6L14FSNHWhqKCqfDJiAL
bVM/PvCkSsP3bS7Gn5syUWyn9fxfmtJQHXTrpKgxHbeuqNS4qyMNtu+O+8ZN
EXqaoqUdvlga1Dc7qOpoCtGhaa6BhLE0LMrSri08xcds00cWVFtpyPblyCrr
cHCctcK6014ajsSZqy3ek4bWk5dthU7SsNH9bL0dNxW/FEc7zXeRBv3a1R0m
1BQ0n2/lrucrDdFf+Xe+JcZj2q8bhz8HSEOCw8MTy63jcLBL07s0SBqytJWH
T8jHoskNjp9/qDTc6Q+R13l/DpOS55xaGSUN74xcn1Y0ncX+I/7BP2OkIXNi
/tvQ+9G40mYgrCZBGk4ae//tfRyFvWJ1sZZ8aSiTMN4ULBOJBr2GiXMzpKFx
8ueSOKsIjK7KTX2cLQ3ubfF/fiaHYzePyj9/WRoCSrS++PeG4SK/SJF9oTTU
ubit/o6hGG4/nkW5Jg1SXxcNSzSFYIee66WOcmmIv54GDtNnUEey/YrgFrEu
lZ8dtfEMnhmwKN5VIw3m++KXO9cFY1ttWanKfSK+oaLnp/cF44JM9ZtvH0nD
j6wH0tmqwRgYmFp1qUkahqd8cw/PCcbmrbPuHWqVhmJ78tFXpGBUW3b8gW6H
NNjkqdIrLYMxQP5d/Wi3NIwxl2zfJQrGx0MOT673EueFS69YTz+DyvXY6tdP
4L1ZssDo+hn0zjXoWPFRGqh2g+9me4Xgg9Cc7ukRaeg1lxRcXxuKzN3k3jtf
pcHwc8aMvWkYehmHvwv9TpzfxM+doxOO92hfP1j8kgaz2ctfncNwpH7dNyz+
TxpKpDP2th+KwEPNrV8a5sgAa/FmqSWakVhdsGYiXkoGksfedoi+RCLp7PUf
m+RlION2z6b2R1HoekB1hkyVgWN/OZ3vr0SjjNI/cYGyDJzu2FjsEncOd56/
x7y0RAZUtt+Xsbgej8UeS5QPLZeBavcCo+qm8yhmlaWqu0oGvuAR0sepBCyY
CdG5biED2hZplp93J+P0sf9M7myVgTA1Ep+lkYbaj+wOLN4pA4Ffniz5dzMN
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
B9fvX/58IIkCjxh3A52KiPcZLFGxNpUC1t0/duhHcDC2vPjEHD4F2GaKGuPL
ODjREubsJiTquUXfYkaOg3uHthjXiShw8pHJ7MihNGwU12JrXiD8r/EyetiQ
hkZqP6cjs4l6qVy5wLAgDbNNm1/2X6SAxyK7hS3xaSizPbva8jKBn6TBY6FP
Gp7088vIzadAmXeBMN05Dd8lrjszu5DwJ61nX8eaNLQrZLu4FhH11TQnZ5N+
Gt5+OPLfgxIi/lv61tKKaaj59t58jVIKLPNnhslIp2HS79R/EeUEXrv8M51+
p+JPpvvbdxUUqI8PyJ/9NRUPGq66b3GLyJdjgs3Kj6nYukk292IVBbq1klte
vk1Fk8N9kbNqKGDqeT2qrycVaZazvq+6R4Ew1Yehlq9TcVRpgYcvEvVVUbHl
CmE/nLB+eeUBBQbm17Ml+lLxQvPhjW8eUqD96/qEHf2peDIv4S6zgQIH3uc+
EX5KRfvQ60vtGykQzF9leJ/wR3t7+8WzTyjw9YTbmuZfRL80+E6720LwQ35A
9jzJNHwpxT432UqBDPk1/LeMNCx/ZzKt306Bl6oc/yCtNIyvdvFy66CAibJJ
ceuqNHTjhPeIuijwpMSm5qldGpodvWTf3k3gX/54+0HXNKSvq0fp1xR4dnmH
THhQGtZPyeYFvqGA0SxDpkIxka/WJazSdxTwiZ0125PIZ2CBY9zHAQrs2xz5
hfI+DXV3CY45f6LAt28u5H0aHEy4q7HS6BsFinPOfLx/jYPu/HUFRyYoMKpM
+jvxnIPmPp5Kl75TQCZa9LnjJwfH1K79pfyiwIrj6XL713NxS/TqhrHZVPg+
Yn339xAX9V32rNaeS4XF6YVn19F5KL4yrGivJBW89x205pvz8ObHh8ktslTo
3BLt9iuNh+yNDjuK6FR4vW54e8cqPn7T9G/qZ1KhKLjJeNsBPjbN8MyUFKng
VXAqfVccH4OvvVaLU6HCyv0z3dUv+dhH8Rg6pEUFXXpD32lfAd4ajtudpUMF
vz2NeoUcAabUFbd06lHhpiCWdu+mAC1OjJdZLaXCVt/mn75TAlSyZyw4s4wK
qzsj5s7QhTiutYp/YzkV3s0mW/oYCvFyd8hpjVVU+OPzOkfCi+CDspzRnSZU
WFWlfSwuSojO8XV7U82osIh0pjoyQ4hL3QbbHptT4YNV++YvZUKUMpNeK2ZB
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
         "]]},
       Annotation[#, "Charting`Private`Tag$8430#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Lambda]1\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Lambda]1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
pRBr2zUe/nMFPd+r1tV4vRTm2rNfqzeuoLLm21+fapWCEvbgYexcQRG88hrJ
BI5IuPcuf3AFhQgEzLneLoVJNnHZZxPEd50+932XSkHBZLNq/+IK2jZ+ihIn
Xgq0+gat+s0VxHUkdEOJsxRGTyVOubOtIvmG/J9XBr7Cf2H2brLbV9EdWm1/
a+5XCNxQ4xvfvYoOZGVInnv1FQZ0D6ZEH1pFSwndsun4K8hWzp7VOLaKNBof
wvM1AL9jlTUsMqtIgl+wHLIBpOdM5kwuraI9S/FmF9kBbqWb93VdW0X/0m4M
rl0uASsD6zr1e6soKHzpLbPpF8htcUyTNF5FAjXfOncHF0FjkHNYnNUq8gtv
vZMaVghzKu5eO16tIvLVXYsd5M8gU+yrPx+4ihYPxBjVG32EWzZvbxqEraL4
4S+HVK8UgNVJMm6OX0Vrgc2rAXz5kBsbtu9T/iqKHbg6FRWVAzJvUhodO1aR
rMJdQ+7eNLiF0kv/Da6iNB/JM5zyqWC1lJWlPbmKdpWcZil+mwS5zz76YYY1
5OT4IU7/TBzIqFdeZBJZQyKNSqLGdgFwi+2nlLXkGkrS5rv0mccdrL7WHByS
X0Obnxmm+aItIVe6aa3y6hp6F5MwdFnPCsvwD+b6Wq4hf66Nmb7CYHyrfiRu
zXENeUlw8klxRmArn/FAkzdrKAxHPb65MwZTFKdedb1dQ0qKR+WX2eJw7trs
c/XQNSSsumYV0RWPG/MWNSFuDR36L2qMmfIOz5muKkmmrSEp1QorxaNJmFdk
83RcHuG/V5lgFi0Zy/QyCO8oWUPpYb/71npS8K0wlh3u39fQPOPe72eY32Mr
DQ76+fo1dEk9JcaEMQ1TOLknn7SvoTMfZdT/dabh3G/bO5sG1lDhbnmz25R0
3Phq588rE2vIfJ4v2fVIBp47s/vTx8U1dOXKmSODlAzMO70vSZR+HY1Y/pg2
7MnAMqkHqWEc66iIneOoJkcmvqV32G0L7zpaHXOtvc+bia32iZg77l9HV/51
/UV0mZjy59ijf0fWkfHddOCqy8C5ASevakusIyPz65ntHhm48Yr02Vq5daQW
uPI49wBhn+6MKFZcRzXaYQO8cemY97P8rmy1dfT7XYSQOW86lrE8z3zozjq6
sKCTnWWbhm+JK8ySHq0jRl7dM59/EfEPXuplNFpHQuP5lo/43+Pcu1eLB1+u
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
xpad31++ZcK5D6R1rgo6g6CEafIImQnfuzGRIZdgD6aeFV63Q5gw6+sKB+o5
S2A/bat8MpYJUw6jixkBD+COf61oxDsmvGfjYnhwgQQkDBzlYE9lwl8w5+1a
8Zv4PLmlqu8DE9ZryTmq890E+45KvFcvYMKZ4yp7d8ZY4pYL3r5FhUz4j7JQ
9ysuO3wktNdYFJhwXO7d6RdijthySk6NVs6EQ84/Tbw1/xrDFZI44w8mzNmB
e5zyXTB39Cin2S8mfPaChAW3kht+sKDwr6OeCcfy9qmLZ7nj5Kvhv5SbmPBa
fKgI3bQHnk+YTc9vY8Khx2ldTeyeWGFNNUComwn7ehjo3yf0cKBGgmlgPxMm
Dadx25d64c7UtWvrw0z4jePDLB1dbyzGcPvks3EmrMJ1UMqozRvb3U/f2jxF
+HePIW7bMR/8LYt5SnGeCW/v/BI9c8sH87Bp12UtE/F8qP1Yes8HP3qUn7V/
g+DDaeveK2d8cFo+d5APAzPOPLdfs33MGy9zGZovsjDjhrWQFpWX3vjyk5Ib
+lsIfF07lX7MC5OLdknVb2XGBxqPJTefJerzDjOe87zMWFfpjOg3U098wvj7
TCo/M9714zTHH/c3+GXpwd+79jPjcYNzJntee+Dvu+1z3AWZsfSXoyhFm+j/
5vXkaWFmbPziT37gYTes913USluMGT8t4LjcXO+CswRcb/08QazffybF1tAZ
r9u0ychKM+PsEzJcLtVOWKVGaue7M8yYPuLWWr2xAx5w7P/zCjNjCzdQNlC0
xJKNZ/PHLjLjdKkrnrpML/CrYxTaPWVmbOmoMrz1miHe3XbxrtRNZpz7YZmR
w+QqvnYmsWVQjxkbvkAybUeeQXjAxsebT5nxucX+P/m25jAyeCe05DkzPrjx
qXLvhjW4UVg1Q62Z8aL6sZsv+F/Dx+mn7WqexPpPlfIuUV5wKO1YV04qM/Z/
/XhbzVFC3x7f9/x1JjMW4Hid/f0aDbwzOVdUcplxgdYLXbsXwTD14d/OvmKC
Tzf16UMRoZAg0xWfXsqMYyaEi58khcHd/BpJ+0pmLPF2O/1wajh8+ZR5dVs9
M07SuaKwIzYSLM7GtLf/YcbuGyGv6ahRIFwcaJTUxowHgvS6TJ2jwQ/MPc4P
EPyKLYQ5RsYAUtDdwfGXGR9S+cPjwhQLM2U3Y//8Y8Y7W3XCxAxi4X6ldPHz
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
i3g0FWZu5yb/0BWg6UxqpHkMFaoi6lr1jAW4L/xnud95KoQyriRvthBggui2
7rx4KoxNcxw2EfrtVkK1xJsEKsz2xVuoWAuwh7LQWDyZCtfXOb5q2ijABemh
XuapVGixvHvWxo7A30V9aX5sKuhOLvJPJ+zthesxj0uFza/p/vdsCb2ndXms
nU+FuMmDdyttBFh8Q0xBPIMKTWqF9d4bBNhmdNjG/CIV2mDr8iwQ4N97z4/7
ZVOheto15ZmpANUsdfPzcqmQUTKaM6EvQMemtJfteVRI6nJMpy0XYLDTr79i
hVR4xV7ZtGqxAC+92aZlfoUKbzpz9bYR+0DTrho3v6tU+DE1YBQuI8Af/Qtj
8oqpYLrkTETlfAEuPBh2s72UCnua4PXULz4ePW4pY15B5GtZZ9qjt3zk/7ls
5ldJBfklwm+6n/IRI8QP5lVRwS8udPerO3ykJL2oF6ulwpErhncFHD5WXXY7
1V5PBZFf53RbLPn4YXntZbHHVJCsHaxOWsFHsZuKbWZPiHnZtf7cOzk+7rjf
r5PXTAU7i/euhmM8nOvwHTzaTgXDn4J/qQk8XLa7hZzXQYUtQxRtkSAeOg3q
rWl/S8x/4NFCP4JP8r79TjfroYLSvr0vdmry0Eo8wlHsIxUuSm6MPfGUi37J
A2fNPlPB/6vdz8nrXBTQra4dHaXCWfbo6fsE34yoSIq0j1PBampjzcGDXEw0
5dZcmqLC35onVrdIxHl7vYXwHyo8sl9P2TzDQatjEw+9/xL9kyHrd2uQg3NX
HJ9pzacB94nox5O1HNyxPtQxSZgGWYXWux9f4WBVT8nrb6I0IO1hJPzmcPAo
XaLrliQNpDJD880CONh03diDJUODxkUelgc9Oahm7zN4mkSD3a2n1Yq3cjDy
I/dAN4UGsZLnWsWsONgT+ejLGjoNfH7WHj1vwkFTpR/+eUzifAd7QkeHg7xq
lV/C8jS4eqHzxt/FHJxwdjrls5AGR3bltr+V56DDt9C/T5VoMFv+1OkZhYPX
LpRGLFehwa6DA11dkoTeW9YlkryYBl2JZoN0UQ56PpSI/76UBr/ipU+cmcfB
OncTGWd1Gjj/vddNmmOj/LRPWpUmDa5oWNI6/7DxBIfHkNOmgfHmJzKtM2xs
XdGQcWYFDfwkNWfmCHvFsx9KPXo0aG+b2b97ltjnvVXzYRUNZLXlNir9Y+On
eZuX5RvSID7R6s+K/zhomRVWLGJCg3Jd5UoHMQJvjctWHDCjAXnFOdVTMhyc
fd11s2k1DVqmJTeW0An+9pM01gYatHLZ9EFFDlZKmN5NXkeDGOvWFwoEXpMu
H4AJSxrw/0V4OOhx0Hct/5GzNQ0q7C4knjDn4JOuBpvbG2ngMsMjJdtwcEnw
z2Y5exp8uSKoSXPhYDh18eazDkR8PrLpQvsJPVy2ub3HiQau2blPjgQS+4Zt
+Pa1W2kg/dzuDyeKg9/Du/eKutGgqVp4aLCQyP9CqeEDO2iwXXhhy+RtIv+3
TQ8920UDs7jQyPQmIt9f+QEpe2lgPmxM2fed4I+dW6LkD9NguPDKYPMGLupM
hi8IOUKD20sOv2Ts4mJ8WvmFD340mL/m2MT5AC6ueyrFKQiigcjmAz+u5XCx
wrCxQCeUBh4lk0PJ01yUaf2lnhpOgz4zUftRWR4eOrKk9EckDeyIhaBKjYeq
BRG37sTSYMkmuy1RW3nIJps/XpdK9Jfex3R6EQ93Hap5f5ZNA7XajcqCGh6q
1Rt/r+LSoGMp63haMw9rggwWamUQ+VdoiP35lYfRz2/qeV2kgf+28xG3/vFw
k9pK65xsot6i7p/6ZPnY26ETQM2nwU7F7mArHT5e0y2N3VRIg+S74o4HzfkY
FKeVFXuFBh8NjZ8/28hHi/6rFQ+u0uBo5is5H4KvFpipP/lTTNT3+uEjBp58
fMm+3G1QRgM3SfV+PYK/Mr4s+eF3nQYXG1Md3U7ycf+GfLFrFTSIIl2xKQzn
o062itJgJQ1emt9dqx7Hx6nfOfpKt2nQrOO8+mMKHx86Km10q6ZB9OGtFm+I
/Tih6OLutFoaeAmZGnzN4qPLPIWg5ns0+B3cOKSRz0elHelxokj491445twV
Pn6qYObAQxqEGCh5zF3jY4Ukr/L0Ixq8lXvDSSvl49n9tKbKxzQQKOwahXI+
Wt1L+/D1CYEnBmo3xK7zkcQg/1J/RuQvZUXGZ+L83dFkiX3PabDtNti9KONj
fqO0clYLEf/6PfvzCD72VU4w6HhFA0vpO/1Xr/LR8JSEHbmNBk9qmJsGCT0p
1Hrew+4NDc59+he15RIfmzQXnDjXSfRn/jfX35l85ESdu3D/HQ3OH7Ja1srl
4+6u/y5Nd9EgM8Cv4lMSH9UNIqv0P9Cg0H52yjyWj98ThZqP9NGAI5El3xrK
x5rh0L4rAzQ4NHISio/zMXrN3999Q0R/NGukPTvMRwfBGamFn2hAs7/Z/PD/
/9/q+7SK6wgNvOOqp6ac+di/Mdgo5QsNiiSjatJt+FiS99u+6SsNvqqdci0x
4+Ma5x8nLX7QINBwTbilMh+9b395rjZLA8aVACfhQWL/IR0e8JijgXzC2ejJ
1zycOfB5KkOIDvsK6EZ76nmYKD+8WFaEDhM11PXWuTysDPlwalKaDqywWSsp
Nx7Ot2xd+mQRHTQc4xOeNHDxzMkgmUkVOoxx1v6VrOTiz2uMyaVL6HDcc1SF
k8fFj+SdT6LU6XBe78FHQTgXmz8MHFqjRwe2cQbdbi0XN1Bjth7Vp8Nl01zt
uJVcrLNSN88yoMNIrppa72IuXi/1lf5jQgczzenfswu4qNEn81vDnA6SGbHK
bwm+yaPd6HGzoEOR5zxz268c5J75VV61jg43N5aninZwUKacLxiypEPDmNXI
rmYOnu83iaBZ0+HqX42bux9ycB6j6+D6jXQ4GnkgRraag6c3hm4JsKNDa6ui
T8B1Dv44q2x2aRPxXm5sT3gRgYfXHy5+6UgHnXSr+RqXODg0sF/q32Y6FG6R
sTmdwcHdzAW/tJ3pcMn/U+gZgs86bK9273KlQ0TEzjK9ZA46hdo9vuBGh9dH
vnBz4wl+uzFWVrODDnsNLo41xXBw/VAy//MuOhgun8ytIPDxLmtlOGsPHSSW
fBfaHsFBQ/u2A9Z76WCP6n11YRwsDzux+cQ+OpTEri8eDCX03U2WaaEXHcbf
iAY1Efal4RrVNh86LNa9sIZLfC8v7y753yGiHtrfBpWJ+zib/v3Q86WDo3y3
9TbiPemIS10eR+nQXFCfa0z4E1O5viHZnw759x6seEToQaFPQ6V1AXTwsPsX
NZVI6DuF87yxIDqxL1TcfJ1G8KmDZtjCk3QoONR7fquAg4cjm33sTtHhx1+j
rOPZHBy8ddTp9Bk6xMiPHzQi8N79M8nkaggdZIyNdvJKOPhm4U2VzjA6bHry
sC+5koOOTi4SCyLpEF+YG5J0j+CfqMkJg2iifn7OYfKNHKwdMXvEPk+H5DUf
ygrec3CVUk/Jw3jCn2cHE/jDHCzbHM79nkCHNULnKn8TfJF755G3YyqRT9UG
6qA4F6NjNolLZtChesPMZlkLLv6tHv9ucpEOll4qWr72XDwxlvruQDYdGIfT
OPN3cvGg85vix3lEvg+HXLhF6G8H1T0OkcV0kN1265z9LS7OHHqe2FtKB9tG
zelWYj4u3zR7bnGdDuEjxqdd3nDxnyXL/k8lHR7XqguVTBL97fNqY1AdHfSK
t7LtTAn+uL4mrhXpoCoRd9zVlofi06VPdOvpcGq+kqbMDh56xsdbjzXSwauj
59L+YB5SS9dv8H5FB8W6P4E913mIv25EP3pNh27WspuydTz0tVB+pPqGDhVv
9v++08RDVmzSfxGddFh1o+71yzc8fNQyu+7DO6Kfv3b7Ofbz0J91OHJ1Nx2+
ij7V1SH2TcW9bx9kfqCDq6NVpM8kD09M3AK3QTqYpre2d4jzUdVsSXjVMB12
D33+I0Hh44uotPu0zwSeRGlzS4j99XSz0L+AUTr0N2vMXiHwaBndz+LVGB3q
5eZV/VTjY5t7d8iKb3T4e/dwaMJyPoZftruXOEEHzaknlYf0+Lh8vHp29Ccd
XjVtH71gQOgvI3Vz20ki/u/fcseMCfwM550pmqbDmQ3lC5II/NN9KlwrOksH
m+7ZT4dX87GLHDizf44Ob7Kbo2MIPRe3o8+kXogBL66Qxp4RtmG+4ymV/xiw
+MeRSBPC7h+9dydMhAE39quwpgh+TVq1fKp7AQMyhryjRIn7TUMyjMwlGDBt
5TGxn3h/uEHsZIYUA3BTyREa4R9b5mTVlAwDLnpTeQzCf9g29MuVzADyu3rf
I0R8X3K2GtyiMuBsU98KhWV8FHx6EERlMKDr/q81qiqE3tPTrTzGIvzp+S11
Tp6P305l/2iRJ+77FxIhReVj1kMpfR1FBtCDFS83S/DRVvJMQMIiBkwNvqgS
mc/H31s/3xhRYcCOgudr7k3x0GGoQfeKGgP6ycck7hP4P6O9yl9EgwGjVXum
ae94eOVEXvk+LQaoyX8JEmrhoZBYmI6yLgMO+3nbld7mYYnT2JHQlQy49jiH
HVzMQ7f0naVdqwh/Q5Tq4rJ5eEPTeHm6CQOa6p+IXYgi+nPTdw3KegbI/2nL
CbPj4dmt5TPWGxiwbb6kg4EFD3nbjzwLsWbAquPBLf26PGzy+uz72Y4BtfoW
+iYMHq4M7StHZwbEjDgG53/gon10TvhvVwbo7VjNWN3KRe94983LtzPgZZaj
lSgxXxm8txN8d+I+S/kX64q5OK/8lYGfNwPSxf2/zp7movytZNHCAwwQP/qa
tNOPi6tqN3W8O8SAZJXi5+L7uXig8WmwlR8DzBZEioY5cDHyeezGs8cYMJje
zHG25OLF1xvkKwIZkDk1np5uysWXHx7UKgYzgEv5bXJOndA/Q2EJW08zQOSv
2F19ZS4Kf1ntHneWAaJqZXf2srioNPFH+34oA+wGxlvIZC4aT1XP/QxngOWP
2y6mElzcMneyRTOKAa8jDhx68R8XfYUNcz3OEf1VGTr94S+BvxI//XmxRH0K
JB8ETRH4RapY2xzHgJYb0otSf3CwhuFPmZ/AgBR9wyPG4xxsW6gzYJTEgCV7
L+kfGeXgV9UvN4+kMODZa183vU8cFNO4Fp2fxoCg0wEQM8RB1RUHXN5yGCDZ
X/7Jd4CD5gZqarJ8BtzJMv091MdBV7PB35bpRD+6BDV87+Wg/9q8xtOZDFDd
uPlgMWHHW3sIrmcx4M1In8YYYRdsUjo4nMMAMStUuUn8vm5rl8nCPAYwBkwk
5vo52Lk9Q2JLAQO2jl3oeE7ow4k9bu9jLzMgVaZ9ROUjB6W8GSX3ioj+/HQT
pj8Tes+37eyPawzYFTyavGWMg2sC0jZplDLg3Uf9vcsJPHcLdlLaU84AF5U2
5XO/OBgQKjPOucGAnhOPl+4k9oOE6Ob7TTcZ8E97tcujfxy8HB+fIlTFgGNc
HvWDCBcxxWav4R0GJD7viPaU4uI7nuhK3xoG5D8cU7CjEnogP/J1Rx0Dkqw1
D5qrclH9KhRIP2DAGQum5WpNQk+UzwWtr2eA8tagh2xifzlRe5pR3sgA19Bt
31YS/dPzOmB7zEsGfF0odCz1MBe1xmfDR1uJ/IYs/KBykovBErFFTu0MsLd4
3j8QyUXK2sxJ+XcMcKgcPNCVwUWrsnpu+QADyocHdnx4xkX20033aMPE/E1L
3DXq5GLvYMfgqU8MeDRTmT81yMXTCl/0LccIvMob7jo5x8Xy87TWzt9EP6yN
9mxfwcPZ/Ozp1dMMMBjYxC8y46HtfXWV/D8MuLBk9zNTax4O/jL3PyLEhKed
B+oF7jzUIzfyW+czYYv3We2iAzwMXb75vpEIExTSpbYdDCT4ZJ+XzHwJJmR8
6TnaGctDr9BxAx8pJlg8rXY/kcrDivRT7s0yTNCHauvCDB7+q/zvnB6ZCV9+
/vy9J5+H9i8TS3hUJtCKKiYvEfiSPsps+0NnQnaMdrTPTR4Oi+b98WAxwd3G
4ngpoafCV1fZaikywfVTgvrnRh4+d4OAlEVMuN/483Lbcx7KBzWl/1JhQt2v
1S7mxH7rk+z8YMcSJni567sodBL77LWeT/fVmNBvdWH8SBcP5z0+QFqqwQS1
jcu26PUSeNk3YRSvxYR5Fyk79g3wMHP27J5xbSYUbp30nz/Mw0/MBbHOukT8
6m0B0p94aKCfWla9kgnnWsP4UZ95GOmg8EbJgAl+D0R1HEd42HKw8G+UERMc
UoNfJxH2wnMrln42YcJhsWJZa8I+mFtt72DOhKlffx+fIH5fVbs+6KYFE5Tn
LFoUifuFO55nstYyQbCYUWhOvL95Ylt9yHomzB17q9dG+Jct3T/Sv4EJvwWZ
V4cI/7+o+1JsbJjAsrM5EtDNQxPL3yaltkxYYLbz35m3PIzZE76XsokJXze1
Fc+08fD1aYm4k45MOGB/ebyawH9lHud612YmUMvnd0gQ+0JNc9G/y65MoNdZ
5/rd4+GCTyuXSW1nAqng9rYLVTx0/u+ew7GdTJCs3/WfTTkPv5q8yjLzYMKI
wGz2Zg4PzVx2NuR6MqGvMrLlEJ+H5/2Hvoh4MYF/WP/iqyRCT1+ZNnt5kAnl
MlbfNM/yUCnriqGmLxNShU/mJwTwUIHtohd9lAlKc+Zn64j+o4XdUDMOZMKZ
i1LrSp15KLrtIDn3LBO+2QQ0u2kR+mQTU2omlAnrFiaU9SoT/bauQdQ5gglu
byyvahD8MqWjMrsghgnHd1x8ekiIhyOib4f9kplwgq1b96udi8OzMX1PU5mw
aq2r8W1i3gYmVnUt5jDh1kS1w9UHXOzqSXnVIWCCht4Vum4ZFzvbLJr1Monz
5z2y6QVcbG/68vhCFjEP4dKLl2Zy8UWVzd01eUzYcE3vg3QcF5tKflelFzDB
XitY5hShhxrzCm78uEz0q+bQejNin8QkoStXiplguGG5XscBLt6NLrs0r4wJ
K9x2nb2zl4vVp3dd3HmdCUdW1akKEftohfedVNlbTKgour39JsFfZbu8Ew7e
ZsJaMbk7lI1cLN5Ci62vZsKi/B0R79ZzscjmYYTiXWJ+Nn+pll3DxQIL/7Mn
65gw8XhsXRXBb7mrlE6+QiYMaVgpvDLkYpZm8zGteibUGyoleeoTfKt82vdc
AzEvqqLbfHW5yGOo+3xoJN6/GvNoXJuLaVJv9po0MaFmbUzDmBYXk+dH72I3
M4Gt0jvnTeBlwpTetrEXTHibVbHtkAYXz3/9sNn6FdGvMpeiegg+jR5MtL/0
mgnPOpzO1RN2xDsz6z/txPsBs8fkie9DX35e69LJhEdv9fMHCPv0Y755+Tti
vv5MDSsR7524u8FIvJsJdluNS54t52JgxQ+9fR+I7wM7VD7rcNG/6NLye32E
/4qw9oQewbfZjsuYg0zwSbv369gqYh/g/FU5NswEm1QJ4y4jLnrFFy989okJ
+ydk88fMuOgZvp25dJQJn+2+R+wCLu4+sYASNsaEfP7842obuLjD95bU23HC
3w79UhtbLm7z3LdAf4IJYkPJyujIRSeH+7PDv4n7HgsZ5xH122R5ZBKmmRBS
5VAu6slFW1OFiYw/TKi8R1GtJOq/Xu3kRwchFlRNG+0eOUHU921QYPh8Fizf
HrtdJ5SLrMSAfzeEWRAo2OWTe46LX34cYdLFWeDSHub2h8NFzoP91u/JLNjy
swaphD4Z3rXlis9iFsQbtrmoTRP+kJz005eyYMPOkEW35hHzXr/pftMyFhy3
252vLcHDJM2NHdrLWVBPCV7RLM9Do6k1C36uYkF/gdCqDEKv5BWvZi81YsHJ
2Y5293U8lNpjtmibCQsULkn8ndjIw94GQ6Oa1SyY/+rO/LNuBN+cWlU/uoYF
JXV33njvIfB4+UpHxXWEvzsSP5C8CXxga/uEW7Fg0ZesQB4x/xNWWj9u2LBg
8e6XX3wJvbNrRj1swJYFbd4T+6ZCePi4VE2SvokF0XM7tEyJ/VN37xK+lSML
SscmP288z8MMmuri4M0sWHlaYpSUSODpk0XlV7eywIM+czye4KejZxTN3ruw
4Jyc/bcKLg/f6ig0Srmx4FPG3gOx6Ty07GdttdjBgp0alckiWTws4zI++O1i
QY7KsfNauQT/baQdvrSbBUWajzsn8wj8nyVPtnqwIGWO7XqwkMDjctko4X0s
OJHpTAu7wkPXfdKyhl4seLJT09v4KqHXGJKZPj4seLqKp5l0jYeaTWLL0g8S
8Yu8z4sh+JATInqz6TALfi3n1GmW8HBOV3jN7BEW7BEzmQ0m7AOD855p+7Og
Q9aE7U/Yr/n/XPcEsOC1xIQOmbAt7P72pwSxYMfS4pc7iPuK5maOPjzBghdt
JrWbiPcoFVMzP4JZwLk66T5SROzrXr9jlp5hwcBTjp0e4e8w6ydlWwgLnpEn
tBcT8Tg1f88+H8aC3n2+iES8NWHjmjURLFhv+2TpEIH3S/THqkajWBBQdiHm
1kWif4ZH1inGsCAjaLGDBZHPqfRPLxzOs8DzzKB2BJHv50KDwzcSWLDrncik
OVGfQ09Ln1KSWXDxWNJ9F6J+YmknSwJTWZCYKS6iRtR33WLJAAMeUZ/eCo3J
k0R/jbY58wQsMFxa/Hr2GA9DKrONJjNYMHLq7gv+YR7e2bDy750cFoj4PL35
jdhnXGRmP8jlsUDtu/eld65Ef71peHi6gAXbvXzqsx15qH1g+3nzqyyQYsrn
NwLR3/Hh1P//a9PKbb2rxFV5uGar7W/lWyz4Lea6+pccD7sUaG8jbhP1jyvR
aibzkFl6JXv9XRakZ183jiLmKaHlhUZjA1GPpfu+V/ZxUUMgkFJ/QvRHaGi8
8DsuPvbwHD/fxAL9kDu6Jwh9M2/iV6VtCwum+kAvvp7AM5oivOhkwUSa1xuP
K1ykdg+rrnjPAhNVDcmPuVy8XnhdJKWbqP9l3f3lxL44amj5bHM/Cx4+USyi
JBP4+k+6rGKQBX3Ri9kVBP+oPelIoX5kwdCFaGl+NBc9th92bR9lwfeCDc60
M1z8q2JgYviVBY8otrcfE3iTMTKnwP9G+LfiVOazAEK/3HwyNzlBzK9B9/BS
Qk+1n0nrc/vFggv65kMdxH4bYLnrUfUkC5SWWx8YIPCLJK12RX6GBTKUm283
enOxtH087swsMc8KOk5ShP6yza727ZpjwUt1zywtAv8+ekc5rp4nBy/3azeW
eBB8sGLTyuz/5ODYKevq2D1cVJ1i0P+JyAGzqWX5nd1cvI+9k3vE5OD2q8ed
awh7V9y1dyghB/vuDWcvIuyZzUH3VKTlIIj9YHAbYfPlLXIjZeUgdYFi+SfC
XjWwIGqALAfOb4NrXhH3txa/8rKkyYG06m42heBbv6BMm0KGHNhpl+RfI/yT
Wu2lJSonB+WS383TCf+viayQ8VGQg40b3L/PEvFZv5j61qgoB+Nh+ua3D3Jx
kPfwtbqyHIQ5iC2s9SX05Z6EqjhVOagrWzAm6s/FRequ6SNL5MAiuq9BEMhF
zTI/6cXL5IC7Ls9Ji9AHq1bFRezUkAPhf0G7Jgk9awt3DzZry8Hgnwwlgygu
ujxu7xbWlYN2tdCQ/Fiinvbjm1evlAPbBe/vWCYQ/eOmalpmKAfpK0hOATyC
T3vMyv5X0ZXG5fR1Uf2TkspM9xxpppGiKKGtSBNKo6ISMpQGIhIy1SNFqXsV
kRIikqk0OpTKUCQZktCLNKC5lOHdPu7fs59791l7n7XW/nS/GHHQXC7fV43+
JHqtk4qiCQeuHx9lOabyLC1QJB1rysHxKR/scq6gfxF9rwuy5IDjqySTSnn2
Rk5q2WVrDvad1nxV/AjPl6Bc0mjLQWjJqPruZ4j3WcdMB3sO3G2T2/vf8Uw9
L3+XoRsHv83en+7v41lYc8Skn74cBAZuOeqnKbDIgLOx+v4cOJj+NVyE+8nx
nryhmwI5SA+Tv9ZngHwl9q2tLpiD5YXN1+pNBXYzctjqsSEc7O6R4IcvElix
rFKtzU4OUqdqNw+1Rv7jHIoKd3PwJliP83QQWEOKn37PXg589+67ne+C/l09
4rzufg4GlT919LsLrCszhfM5yEHAdg2RuBfyq35ezJkIDpZp7JF+uUZgw+88
F3sl4sDsR5zx5vXoP+e3bRt5hANbc93Ysk0CUyyVaFkcg/3wsul7vxn521rR
I/wYB0rq/XdzA3E/eGb0/E4cBx37pkbZ4r4EzsstOuI5sNPOMj29TWA29b75
mgIH5dE1fRnIZ87eh6Z5JyJ+iYpiATsFtvrrmbSTJzmo3qcs2xYqMD//OxNq
kjloPMKpqKNfDumujhqRwiEf1n5TQD3cH9r6xzwV+yEe3P4C45ghElvDznGg
nphmaLVHYIkRk5tunedA+fLWmaEYn5Mxcv92kYM6Dd1r6zHOOm7/VP0yB22D
NWdHY5wn72vucYWDOX9va+zA55WeOZgrZHGwweGQ6BS+v0rtjPbTbA609w7K
h+1C/bycmyJ5k4P8Da3mBOtNGNHzxeA2BzGfRlz2Rv1e6jdjmncuB5oj6lMD
tyO/VwZsO5aH87h/2e3FwQK7r3u1sLAA8ZSveP0V+TzsaIt4SxEHc3vC9J0C
0H/8mGozkXFwtNld7KifwK5kp70JKuXg4N4vNpvQP/iM/qCUUsZB0YTGTaOw
f8pbFDY8qeCA6r0wFaHfEGYm9k6p5KDXcENkM86DXULtPMenOJ8rHWyv4rxI
94w5tK+agyFVkqlLUA/25sSMra/lAHIPfppmIbA5Ex+7DX/NgWewzoRtCwTW
HSKVNquOgzz/viVpc1GPjQ/oxTVw8HP2o4H8GQJbXrhjiUUTB1niXvclJwtM
/f6ayOx+xCPX671OJ+7vKqlV7wY4SDy/7MbLNuTbAw3jR/zmQMwo6GRsE8/k
Fq1IXydGQNQb66GI96nivNB6XJxATHW755dXPDsw7MUMJkHA8/uwM6WoH/3l
S+8RaQK32/r42grcDzSipSxlCOyWmewlh/d38+GHy7bJEegYMbNq012eNVov
bHg6hoDb2yXiJ3J49rjSePAgJZCoQjRqL/AsYlqI2Q0FAv7t+Yqm53gGx24d
fq9IQMGpaM7LFLzvPzqeyagQ0JomM/10Ms9u2U2Xn6NGwCD1s5qQxDP/636e
66cQ6PIJ+nIf+UdzzOULCRoESpLCW9XQn37a0vTtnhaB0RaF64rieHamRs3w
hw4BMxqxNAb1y9XAO2zSdALZZT8C+RjUPz6lxEqfwL4sncCXR5CfeuqlQ2YS
CO9NAfso1DtnsjzdkMDGLUZHhqLemeW6JFXPJrA8T3VaG/Ljr4n8hz/GBC4P
6NwZjnHOjudTdeYS+N/scToeETwLejMyYMV8Aq9PyBm2oJ/2WMbJ5gCBZ9Z2
dzIxtn2gkjnGnMATo8/u1zA2NtGxCliEz3tWod6D8ZTrhk2PFxMY/O9RRxg+
b9xU00Ma1gRSi10OWOD7xE5bqh6yJbD4peEBexHPvo9Zfu/jUgLWn67W3cZ6
60XunvPtCTgwy0pnPN+jP2t/n3QgYJTvp6qH588N9j/V50QgcHpEFyA+6S0h
xo6uBDyGXpogQvyOe+17le1G4Ne5VrOhiG/4y6htsqsIPD8TqHAL8d9smzB2
kycBZbWdi//1x9Lo4jLVtQTuPdRXa8N+zsrK/rbXB/EPazb2xH6rquUfqd9A
oKDQulMD/cefkZXl/GYCxrtuhGldw343dZpKhRA4Evr1/EmG+rHq17u1Owlo
vF1pa/AA978aibB7uwi4OscZND7k2aa78ndCwwn43fuSubuGZ0on5ut9O0zA
pjvXse3fvMtaVllFExgS7+Up841ng/vt/S4cJTBvdMu+qXhfXvqvzfCMJyA+
cYbbwl+oXxZRSs+TCTSNTbOcOEpgoYXxxdNSMP9tkeqvcQJbP+P0yiOpBI6P
tPOsQL9mNjk7ceEFAlMux5RLqaIf7akdlXuNwM472iHvZqLf9X2fNfYGgZqH
6YFXZ6OefPxqG3iLwIJrbn2rTNCvu3S2PMkhsCnr7Zv2+ciXlYMizTwCaoF2
Yq64/ySbS0yNKCDgKBk1KRb16XCe3IPGIgIZPj6JgqXA1p5XFku+T4Bl5pwY
thT5gWqn9JcSGPb4epefHfrLOIN5TuUEvuYGm59aLjAdyflvrz8kIL02LynW
UWBk9+Kdck8IrM9zM7ZF/yrVZTfRt4rA+MH/qiqRz3o2uN0uf0ZAe9GNfm6F
wBob1jio1RDwsTEpm+4msGeOmzvCawlcmfu3Shb1T1tUpnT7FYHP1LjuEsYR
BYp2zW8IVN7aNmzcSoF9/L5jr0I9gdKRdsNtMZ6r8jzLvoFAlMjknj3GJ5y0
Gw59IKDnUaCljnGn6KBsfiPOV/NJlzJ83tLCd3O/f0I8Ltv5G2J86ccsP5Um
Al62Vea+WM9Q1dhTzs0EuNcZkWuxXi/n5kdRrTgPWdlKM3BfLDhsNlD8jcDZ
LJNVL/C8E4pOaXb9IOBupFNt4ySwoPZu16mdBEY0M/0k5O8nqktF7t3IF1/F
bIvsUQ+jhjSV9BO4lHhfOWaJwN4VrZjQP4D19Yecm2MjMKOOG4t0fhMYtdDW
+z7257vLuvQEMQqiv1V1VuYCszpSXFMhTkEv0qllIe4D6cUTxX9LUFg9v0BS
dZ7A3NUfrV4nTaE2l2rFzhJYjqtqXJIMhRlZrEEF52lMdBirlKNwcKW4+Fn0
NxWd0xRnjaUQUrFGwUtDYAYsvn7YJArNHjbtnfICO9bVNsJkMgXXRLNZ9Ti/
LVMsTAKUKHQma8rfxfk+G9Of9EqNQniE194wKYHJuq9yydDF+tKbisb282zD
0ZyI+ukUPvuumS/dzbPSeyNzRs2g4ObduF26nWehGvfH7ZxFYZzLgvE/8b59
6Zny3MqUwq4HT4K2vubZAs1wsT0LKOx9/ORXxQueJa98o3fDnIL4RodAo2qe
LS85coxYUrC6Wsz5ov+72vupeKk1hUt6xz7qlfNMSmv+9/22FBRdgorGo97c
jW23bbWj0Nt6yW9iMc9IqVWYogOFl1u2R1oUoD/tS8t0cKIwZ02Ve+IdnlVr
/aqLdKFglmadK4d6pOPhJF24goJPx6hJmTd5FhmXZdzuTqG6sbjC/zrqV6nk
RjUPChernB+4IR/N6/dKdPWiMDusuTXgKs8StfPLo70prHg8rz0rk2evm4MT
/ltHoWvX08bWSzyTz5i+esd6CttNJBxWZaDe+LToft9Iob5sjeFf1L8ktfMD
a/woZMlul6o5/+97357lb/wpTMhQD61Lx/OkkoRlQRR0qmQyJ2Ds5lnr9WAr
hWA9aWcR8udJhVhdk+0Y9874Nh3jurfWA9k7KOwv2XlVFmNyUqJ8yi4Ko4Sn
l5QxdnNl8cm7KTzOU6r99/3pkxN2eY0Jp5Ae8/tm27//vzDUFe1HPFcMVNz6
9/749p+/D1KY/PiX6xWsz80+s2xrJAUlIzn9Gqz/1Eif+ObDeJ78BXkaeL76
SiUvz2jsZ4Xm1Ct4/knRb3Vqj1LwvlQStxLxWWkt/LSOo2Dg6PPHCPFLlrIv
Y/EUojUDfQHxrS8bET9LQLy6M14FIf6TDpV5XkmkMC9czvIJ9idZbO7PE6cp
2KtpX9PMw/y7vQ9kz1Lgdc3GjyrE/D3Xjx9Io2DksGPbOPQfpwem6ARcpKDs
bCkZgHpxpmu0p8V1Cr4jSyVnoz40XH+iXXiTQphzAHx8ybPJgZH9+jkU5P+z
983D/Tml7VecQgHWP2QwTtTIs7Ofm0q7S/F3fZn4Jf/81bm0uE3lFJIvdMQa
9aLeeK/y+PCQwu7PzhMVBjC/4Xnf4yoK673+mDbjvp76qkjr3GsKZQnBNnq4
zzfyO/rk31IwuXM3uxLvo4rjzNKj7ygsW9hoYI/3Ne1ZxqrQRgrDLFo0xBUx
/+garfZPFPpLtoROU8H8JZP71jVRkFQ1TzFWx/yH8bH2bYiPzFirVi3Mj1y6
qvw71r9vknasLuZbDNea14HzZE6Oj9YTmPfQ0t4bXYi/ywuJAPST5+7vKdHo
pbAk9oF6Bu5Hn8KNY8/0U/BUF79RiPyjZtq9ctwghXXNAdFXjFBvfmdpRv2m
UFLVmRgyB/mrYGPv378UnoWd+KiAfvX/0L2A+w==
         "]]},
       Annotation[#, "Charting`Private`Tag$8478#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"\[Lambda]2\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"\[Lambda]2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
NYgwum+rsh65/eoYrwo8czEJTNxAcoPojrbTyiAa1H5lVgrr3eaYFpWg8k7/
KMgL4/15V3FJEZgfH+CTU0LdyOMY+fNvPzilc14F6wN85oUUYVSYPdpJE/O3
Kuy0VQBtWlJJNRWZexv7hDycsRd7LaGNecn28Zfk4cXBW8uROqi/Op3EkAfx
cxpyY3qYp7a3f1EODmZV29kbos7C9K1KDu7XmgfdNcb+QYo/w+WA5c2zqyKm
yMPtS3ZysHlqe1OYOfp5lllk5OAGz9DXIQvU48O+MsnBuKIvv7U1cuRA5Igs
6DHm9IptsV+Rema3LER5ROzm34S6Mj9bmyx0n+SKPe6AvHryapMsSKallvVu
Rn/3ZP1jWThcLvHW1An1i6r3X8pCTUfB3zxn7J+7cHlYFthHqQrcO9C/xX7X
X1lwWlln/58b+mcqR6Tk4KaE1bHX7shyMuzk/N/1Xl438MT6vpALYXJgsM2t
JcsL9elHuvflICbg8zjrPtRbaZ2zctBzwV/QZz/q+7QEDOVBOn/BoPMg9hO7
3xYjDxLX8+nKvqiblqm9lwexlG2Us37Ig2n7KAogeKpcXvcI5t0pDPqpAHxH
PaSSj+L1yX7Zu10ReHx4xMePo39DiEGzIrBtP7gmKxT5GvfKQiVYsUmYezEc
2eIEs5wy/DVrYXM6jbzrp1SOMsyrSy2xR2F+fG/3bRX4yvZuxD8B86E2plsN
RpaiBp8koa79Xt5LHT5NafXKpCLXuK+ZUofe/sSXby4ji5/N4tKE5/etHxLZ
WF8T0q9BgfaiuftXckkeCFVuO06B1uzc8uk8krMc4h/WU6Ahnik/vxDrl+sC
bahQ4V2VtPoe1tN7qJtpULLTO+7gA/TPB/Qn0KBwi2B0UzXu30eTpA4a5BoH
hB6vR/9qGS5CC7K0JI6/bED/osPFIC24rtzxn0oTrlf3eWS+FqQJKe7/2Ir9
nr/qZNWGZO7Xu/XaUfc31KVoQ8KKsztTOjBPVpTiqg1x85TtE8+F8d/rJj2K
0IaY7x83W71E/YVIFvm8OTt80e5mN87DVH+yRRtOvzew+t2Dev5/sp+0Ibxz
zHTbW+ynahO9TH4/PU43LH2Pfs/31wXpcOyhhQ5nH+a3zxwmz7MjFdOUPR+x
XqKORY88nwpuqtYN4nwf9YIsye+rGw4KwsNYv7v0pSMdDqQuS/038u/+267l
Qod95wvFn46iPvD9zk46eEXsEJb7hvuv8HX1LvJ77Bg7/6kJ5BulJqTu6nuP
+92Pf/fzF43tdNjutYedNoXzlA3029PByWXNioszOI/lZRdzOjjaw9LIHOb/
USvRosMmxuFfJgtY/+nTjDQdbPXFpjJ+I1/3YfDSwVLzyfjMMs7nVXZvThvM
5Y9/sWcSIetDDb16taHkXdCRiBUkR7zNOvhIG0QuBv4tZyF5QDxPkdzf8enD
wms50S92hnWPNjjn++RYrkLdXIRBaEOD60GNYB7UTx07ST7vUx/ttfqwhmSm
bDGRNi34E+TVzS2I+XTm3GtacEDR08NYCPnVUIC/FhgluB2/KYr1jVsE+bRg
ZOeW/P0yqCs/NzWlgSOfI+2KHLKli+gqGtQ0bYJ2BczPOKb6igrxyjZv1FSx
nlXLbC8VdOYJ9hktnO9eT1YYBWJS1PZHWGJ9oMATbw2YslSZLrdG7gi7vaAO
OxcVT32yFcHrvfDrojpo7pZNt3RAvpW6slYNMgSlZYI3o1+PP9pJDVjaNpTe
3oq67+43P1XhnbpYK7cLzkP80aKpAmNIZKuxK7Jo8c13KlBySeij/06cL/rk
7UgVOLO05leXJ+rbHBKHlGG8dHUkyx7Mb530SFcG5z08q+n7UD/EUuagDMrt
HApXDiI/6utsV4LUMLa77T7oN1jjGa8EfzRZiKXDyIv+Ec5KcGCY+alaAPr3
Gx+UUYLu9L/OHoGoKxRozyqC8cblocQgnGfs1MRTRSj4s+jXeAz9/bvP5ysC
f8X84nQwMrPnUrQihO6bi5ILwfXG8agdVoQRkRn+7WGYd2QHM/n8c+yYvBFz
Cv2Xj7lZKELNqR/KNacx31FASlcRZGkT979Foj7RGqKhCPEjX83WRyG7ORep
KML8ldHn9jHIlgPdqork+/aIa8R5ZA6+JaoiPGMaHimPwzwnXwljRTj0pPgJ
fwL2f2P70EEROJKPFx1JQvbJ+uutCLdcTRNepSA/7HkUqQhmMqsCtdOQmxhv
bynCwLdXTmmXkcu3Cj1ThLDKGzq/Mv7N4+qwoAiiYQdEXa7jevO09ykrQZUF
dbkqE/0LkVaeSrCNd+njumycxznqQ4YSTL1uaTyZ++9+5WB6rwRqB3bEGN7G
vHfNnvuUoV1Txud6IeoSs7blynBgYXzTn2Ks12SRZVaB7PMRAg0V6G+tWixU
AWKr7ZzkPeT7JdlsqtArJvju9AP0s9S67FUF4eL8G+YPkROvOSioQdyL50qt
LTgvMWDarA7HBNebPH+L9V1PPwiT39d9I9IaH7B/86+WTRQou1XGmtiH9Q3D
fJEU+EZnPN08hHqpVO438uflL09JxTDWy6QPSVBBvu1NosAX9NOSfTdTwXOH
j3PPN+z3i7fiLhWWpbT16N/RnzTWPkSFjK9/xNJ/ot5TzeCjQU9I8qDLLPJJ
TlZvGgQydjZX/0K/3lb9eBrw8cjniy6K4P8321VQSQPbG9W+vX9wnj2Vlks0
+OId6WDEvI7UfT5Er9eCsxqbqDdWksykdWvWUAuk54XW/mVFFtxg4aoF0DDw
y4OD5KwYMcZRLdgZe+d9A9c6/P1Z4ruLWrC4OahOigfzFu8u5mhBuqhx1pnV
JDekaeU/0AKtT+yRn9aQbGKtMkI+v7oKX+5jCGL+sl7TGy3wD7pqfUuIZE+e
abthLeA22qfCtg714taU71pwh1WDd78Y5tWU5M1pgdXz+Z+t6//lRR1e0oLh
tMZuRUmSB0zimv5qwRmPuPux0ujnE01n0oYNis5Xvsqi/wbb8B8tUC7x55FR
QN1eZNVvcj6t2NNuSthvKIJ7VguImuzZFBX0zwrNjGuBrcnDgx1qyMe6Xgxp
wbbHPX0smsis3KWvtcDT7sdmIyrmnWu/Sa7Pp4vj8VEt1Jd/PqjSgmMu0vol
dNwfytbFPC043W9QMqKL+6cT6JOiBXF7t0lvMMD+USz84eT+ffVL226E+712
4pe3FmQHxHAlEpgfs1bJXguK526Gt5miXt5YQdOCqtDaKSYGcpFAjrAWPI/5
/v4/a/RflJ58T4N3vBwOd2xxHqtsnxoaDKdKNQ3ZYb8HjKjLNFjMcircuhn9
1fVTjjSQq64J0XbFvKpb0vepEDoWJb7gg34u+6DdFIj2z0qk+KFfKOGENgWS
Z6tZDgUgh9rncVKggHli/H0Q9jsh3lqhCd3rttY9DEOuiWZwakJ/pi9l9hTm
nShoBA0YlYu6pXYGeZtx32EN+EOpvngjCvfHSyf1uToo227YFZGA/G195h01
0O7U7apKwn7HHfv2q4GJ8xbLyRSsL4nIIX9+nb3OqXtdRi6wKSpRhd2jN7Iz
MpBX6bw/qgq+flVC3df+7WdJJqEKZ05++2N+E/M1x672qsBFJtYjoTnoTz66
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
         "]]},
       Annotation[#, "Charting`Private`Tag$8526#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[rad]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox[
     "\"Pi - ( \[Theta]1 ( t ) + \[Theta]2 ( t ) )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$8574#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"h1 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
6KGVV7kDDms4L4jFJapDD135sFL8ahPrx8zf9OzSR6y92oEcFIxEhNCxFTFl
fVQweVc5kIaRIIVo3H9E1kciP9dZOukxrz0klNP1Uf2WwfAJJsylR8J+VOgj
LYbix9dZGYkGl2d0he/0US/7v6Apdsz8A5GuX/WRE4+pmuJBnK91wVB9SB+t
nCzdk3uEkSDax2/qDOijqNPUY2s8WP9YNRT/WR+xaFqWGQtg/cN3zSMN+ijP
5FlIuTDuxyl9/NADfSTsQK/JKIb181HrBdf0UZ2XHbuLJOam8Md1NvpII6R6
okkW8+edVSYn9VFPDNPTIwq4vpBSpmRND11IcwwPUcK6mIsY9Qs9tFxQr/1V
DfO788/uBuqhiNI9B05p43ki05++F9JDTHVu0zf1Me/wnn7Rr4tymhsr5s7i
vJ9dd55e0UXHv+yPVDPD9dMNRWN8uqhmxFvvrhXWe2IoQ97ooK61Q9/MHfE+
Ws76hy1qIweagKrnrjhPNoHaM0wbLe1uu7LbC+s9NmXHd2gjRqFLh98F/u/f
GF3cpYVUrXvOysRiZnvIqflDHcmlvf24HI/z39S94jdURyIfKjVLk3F/CZeI
68/UELtsKnDfxn4B3oRAsiqaZTMQYizDemuNmvyUEhrUhqLmZ7heLmTgvaIS
6ogSORpZjfViRsbmPEVUu8S4708DrkftFKJWBIpre0c5+gXPe6LCWP6HPAqn
qg3L7sX1FiravO1yyFeueM14CPOuYz+XK2WRZfG1hXfTmOP8hmpzpZHBSIBr
9DzmNulvs/lSSIXdcVJhCectZXw3KZFEwtHK/RXrWM8v6M+fOYW4XoibeG1j
XklcDNx/Cu1dPtohQLWLiCh0aNQ/J44YBHdrT+zYhb+f2MU0C8XQti2pOZcR
M49svv0/UbScvkiY7cZ+6+rqZy6iaLp9+AUrO9a3I2W6G06ifuqPUu0cmMMN
xZPbRdAn+ZdPY45g/nM5SWLtBHrjWyKsdAzzjx4KH8UTqObh7QebAv/7S93o
HgmjktE47uoTmI3K3zaLC6OCfZdyfcQxD7TvDB0UQml6rvuFpTEL9e33eSCE
rl81S52Wx3zwoMHuVCEUXq/OdIfAfMfumn6+EPL9JXXdUhWz4tgT7jYh5HSc
j5pdCzOZ5n7QAWFkYb/3coce5v5rTaIxwkgvk3oj7uz/PBa6d+8JpPzpl7+q
GWZm46Ce1yeQDO3E4j8rzGnimZRJIkj4TKdbnT3msqPVFKEnEZd/45S/E95P
b0A9rbIoYntcbnfSHet0Qz56PaKIbjx/4Jv3//vzeZB3UQxt7k80LfTHPMgp
d4BfHC3ph3+2Ccb+3Yte9yfF0dQ1T50D4VjXjhz88+QU6n9p1fIlCrM0yTY9
VgJ9XNFWuhmDWf7552+ekqjK4bgMVTLm5cWSt5bS6FHWgYqXt3DeTe66CgcZ
lN9BJxKUjXVu313CfrIoVmGG58c9rGvEVYuWyiNzjkLmr1VYbyk7/YEgkECb
eCnxYhdBvKYbne4l0FpYo9YjhP0K1PcU/BRR5tjw1bDWXUTDBNf14RIl1FN8
YJOnH/ujH2fzCqiiIovirIRhzOImwdktqiiAUVp6dRzXn0anDjqrITayse/7
eVx/iy1D8L46MpJOnCVvYbYeOfiQVQtxfzt0rZ+CCX+PmVlZF2uhn9klPCq0
TETEgOIwrbw2Stp+Z7OPmYkgInOM1M7pILtys82IPZg1DA++HNVBog4zWXP7
sF/pV82Uky769Ja6+yUXzkMfSqxc9FDexVRffl4mosEr8fO+CT3kJcjNkiyI
9bX9UefN9RFTAmhfEMf1b2eS7x40QMMKH2fbpZgIrsnzemL6Bqh0yeqatDwT
MWrIHSwZYYB0jC81MqgwEXaVkCTcb4A4aelt/TXwPOsa+6YpDdF8dcbmkA72
89FmFgkYojpXvmx1Qyai4NTPE+bahiju4HPppya4H2ePxYKbIbJoV+7msMB6
1D136xhDJHi50zfaBud3sT+8X2CI1kTtWRYcMCv9evSpyhC1ji+WnnPGzP8g
7Mc7Q5SZFq7d6I7r4bLiTJ8hclbb9e04Gc//minuwbQhklq7fS3NH88nCaeF
lgwR7aPjx7aD/s+PrvD5Y4h6LGsbncOw7pARH7puiIp2adh+jsT1r1R19TEH
op5NuWv4PNuaexZ/GyJVH8fswjg8f26WosOiIWLjWZFmSsT7rGISKZ8yRJNd
Ud0XU/G+Z0s/jvYaospru/3GMrAu5um02WqIomUKWLRzsL7j8RobPo/xnEhZ
ZQGen4nGUReflyfnpfbh+1hvXbHKw/tY1tX5FvMQcxN3O42HIXr9r//az1I8
D1N0epyuIUp56nrM8hnO35FoIi9siOzPrzW+qcLnMeSUPUFniEgte7cyEJ73
2/ZTpRoD1BFUmE3xBudJuD4vijdA+cdPybi3Yr3xsNd7GwOkcNPAT+Ezrr/P
8WZwXR/5u118RduDWcQ25dp1ffRILY/+Uz/2hyhIfmDTR3v/zefbTuI8v9qa
/MN66Lt3TFvEKmbVo18o6HTQbcNXvE2HmIkI79BjwTfUUceJKfINbsxbmnxo
XQ3RMjDWn+VnJhrqdHc9dVFDvq/NjSZFsV56xv++lirSOvU7nEYF6/6ZNUt8
yiiCmfN9uwYzQfKqN3hQqISq5pX2puti3WRFbJBXCR0tTHrMdw7rUz7HmCQU
kWlE9Z8FS2aCOKq3N6yRQPFWw4rVdjj/i1C5yln8984m3KvuhvlEkd6LHYDf
V4x4WLxxvdqI+UF1BXShPdir1w/rFYlX+pLOoOyHBbUFQZhr9hjvmTqNPl1t
oXYNw/4fq0LryqcRtcOCvlgU5j8Xzn3Azxs5hb23169hppfY/5VbHpE5Tk83
3sD1dJSNfvfkUNEfB7G4JKwrTVb9OymHBjuvhxrdwrpq9o2hVlnE+qS8hSMb
c/kNF28vWaRx4yvrRB72M50Sq+SSReHO29aP7/0/r1x4xogMqlTmfehXjDm2
u0fosQyaO6KzIl+KObiDM+iKDOLa9AXqZzjP7Ex6kIsMMunNimurwjrb40ku
CxkUV9nQnfYCM42tio2ZDGpImuGybsB+3fyOfedl0B8PJg/et5gVtRLFLskg
YU3J6h/vMAu1JibkyiAHXivKqo+YP+2WZWuXQZkUV3TDv2A+9SKxm04WfRx6
mKnWi3nBtCnMQBZR13VMMA1h9p14UnhPFsmlr4p8HcP9yc0zExRyiOx7+FL+
NNb7RR163fC+9FTfOs9jvT6N49iwHBo47sEiuoT1TaFX3pbyiGVHquXaCuZB
ZSOPcXmkNlFb1LCO/SYX+rt8T6O+9it5xRQsRES+S2pZ2RlUyC6fQUHNQpBU
vSmNTRSQl+1yogUt5rKURlMqQJQ/7SIZd2L/KyQTIUcgYTaFC2Q2zNMZHG6f
FdFlizVBGX7MVwooLxni+/XeE+5kQRaC6KJPKWtSRWzfnQ7OCeE8sYouE0k1
VBzWzZgjivVpqTdW7Oqos+DZ4j9ZFqKBt/7ClfcaKOeb66zZaZzn8Dh7/ylN
5Cx+dOypAvZzOIQVZ2mizabEzvPKOG93X+qErRZqZlT/UK+Kdb4+TTqkhZJM
tpv2amDujj/AdVAb8c54PG/RwXkunMn9rfh98eSxMi593E/aSnb+gA6qCxoo
CjbEfrcyahpnHRTdmJLfeRbrMW193OU6SI9BK1PIFNeHszyQ+q2D9p+lSI42
w9yV1HFcShdN3K65PmSB57l9wnbCVxeVTXpHSVljfhwjDI91UdAJ/pBEW5y/
TGY6MKKLlAKH/Wbt/9//818aTHpoF7rloXgB6+7v2O/L6KHeHbqO2U64nmYi
gcpGD901oLb55YLncRu+eCFcD3lkvTDVccf+kJXrX7L0kNS4r/59T5yXGp6g
Vv5fxeYdjuUfhXFlZmWFrDKSjIyyIl6843lfWyUpERUyQyUakqzIzGoYFaVI
VKJ0FBFRIqKMSFb6ycz2O/78XPd97nOex/N+x3WVBTApKRLLPsgy8l0lbyzg
g38vab8f1is7guBHC0h5laZbFIBsbxV8pNUCnFitNNadQeZ1Srz51QIULdiV
nM9i/wn+/roveP9JeS37Mhh1+rrPUw0W8LrnlITQBdS3a55Rq7SAKAWVDV4h
qDteLk8vtIC9J/t5akJR19d9eTjNAqTKb7BtuoLzppiyB5+3gKG1e1bOROB8
049z+x0soMSUc7YpCuvzmo9l61rAheQ3f7fFYH2sSl81nwUQXYHDoddQP3fJ
2vunOQjIq/V9j0cW1bGseWIOnd6D33YmIZ8ffLwYbA4nmWwbBlKx/tH7/76x
mEM+m4OtSMZqfyUP9/dm0Md99AftJvYvOef+OdIMbDb6Td3PwvpPqlWvmMxA
Q+OahMcDZLhxNKyFASd0rufeeLjK4qp2lxmQY3BTraEA82NGD0SoM0DANJ+s
Uoz5jCAuahQdJlxqPMfKMT/Lvvm8EgGKJxpnNlVg/fh2kV3NNHD2/YKnCOTC
heUTgfj9n+tLflKFfuXLrP9VUaH4+vIr/wbMc72eHn+YAiM3WGl3P6L/EKXg
DjsFZHK4P39pWv19sd0WKCZDYqHYL83W1edbnzzHSQa/Wi2e2S7014Q99vpk
DPmNu1MVfuC8PtngfMUY+lrI0gf6UG/6/PDZbmOw+WGjWT6AHDIZfvy5EUQP
HICRIZzn8ROJ0dNG8HbUiS7+G/XfDdk7dxmBxpy3w7kx1J/97CmrI8GJlVOD
j8ZRHxY8QaSQIIf1/MmuSey3piRb9zgJvnGFLfDM4HyBf6XzdUkgIHD1isEs
6uLaZwv5SMAQTVzvM488+LE9p80QQqXS0zMXkWs3+sklGUK5XJZs0zLyd7ei
d7aGMKGYV8C0hp/EJLr8+Ii0ISiqF2qrM/OTQiK+dbpOGoCz9rM3R1hRD1qT
u9RgABm7X5kmsiOnyckrFRpAs0lV69t16N+yt3EqxQA4GfWOk1yov8sJPhhh
AMZWn4dleVGXMpByuGgAQbbt/nv5kEvcdKYvGEDxoZ6lMAH0U86ekAw3gBHn
gYhnQshhPP81JhuAjPsf/gFh9DeQJZbzDcDeZ+qG8EbU179auPveABJPLWyh
iSPb+55++8cA6oPXFp2RRM5LtbYSw/U2dN2u+5uwXtg+TtzCEHZF8lW3S6Pu
NMAyHmkIftdELNbJIQ9FedyuN4SuByPb3eX5SZVGK9YF3CQg3lWsr1PA+tan
Lm3aJCj5Ef9XQQm56vzTAvx7SC26fI5UQb9a2GnRdBJEiWgXD6mi7jG7Y/kj
CaY0OJMIDeQu0lY6hxF8cC/ay6GN/bR2qSuEGYHWlcuabrrIx9pWHGuMICfL
Vvi9HuZd4vPx4TKGwK+LXyNIqB+OfZt/yxjkKPSD7Ax+Eikxr6in0wTinCT0
Xc3Q/69NpUSNDPPBYxK1Fug3ODl9+QoZmoqvd4fvwf5yE8pP1ClwfnPfETYH
5DW5E1cTqdC2EOTG6ov+qUNOHyl0MBKxoB/zQ33XCe7PKXR4pCGt+C4A89lz
s7t/0SHUvfZ32Fn0/32p4nSeAX/CMhr6g3GeI2aJGe8YYJflVUC+gPzY8Jgf
lymofhX0YbmMnHS4qCTOFDImBiyPXsG825puoY2mwMZbrlYdgTz0SfIgnu9O
bovll4vG/pmZt9VIZtBJdpq4HIP1fBYSYwFmQHPa0fLzGuobzLzO55pBcTDb
U5MEZMidr/hiBpKpHcl3kjDPWTc7bsUMIosfnWJOQT7AzfJJ3hwmGy/auqRh
3l7So/0Mczg8bKNdlYHPo5MiyHPCHOpY5EVlbyF3/Ne4csUcdm6emw3NxPzI
1m+Kt80hU6+hoy8b85iMui4VmwPn/sxy47uot50qmHtrDqf9/G7k5GL+l7V6
UZ/MoTeWcm7tA2QFwwbFdnMweyDq4PwQ61/0sHd1msOL6t+73xYgRzyautNl
DrI/XkvJFGEeZfve6G/mcG0hYeVSMdan3szOaTGHOeFjP3qfoj/pZxZHnTkc
1dB5Y1SK8/p4jL4rx/uaOVdOdhnqom88Pt03h13u3aFrXqG+9nWBXJI5CBqv
mdZ5jXkbnFNu4Po+Kibn6luJ/a6JWI05mUP1JLUj7y3ywwnhnSbmcKvB3bSn
Gv3O5OhQGXy+ezEVwrXIhqMXZ5ZxP7/wWNWiDvtRJhmF7WbApDYtWNGI/Vif
8XqEmUEHh2j41CfMs7808dYW/169u2aVmrE+b8bko7wZuCSFdGa0ob7ip8dZ
aQo1M1z3Answb1tT6J0OBmR+2i5S1It+wWu55TcYEHjfOmrwJ7I2d92ZQwzY
Zp/qZTuE/ixR3/BvdIipkNHaOY48Z0YfxfOPTZhu7dhaARITs5X1yxwqKDkc
0t3KKoDn32ie045UYNG6+PAwO+ovWD7PSVDh2WB1XCOXAKlygb6QkkGBa5WD
a1h5kec2a/fbU+B4OmeAPh8y6wM9RwkKiJpa2T0UwvpOuVPRd8gwLutf3yeM
erPqizR3MtQvXtcX24j9GDZs19TJEFz4fXOUJPrfy+4wqzWBvRHLiZWbUNcx
3C513QSUnaRZZ6VRV1G8LnzMBLr5XYePywuQSGFjaUzcJlA6EnXwtgL61x67
qfTTGOKrHjW2KmK/Gz/Z/7wyBrebnwx5VNDPmZlgnW4MRqcmnpBVUZf8tNYh
0BjELDbInVNH7vz4isPeGCbkdVJKdmAe19NeEwNj+LBiz/FbE/mL9j1NvP/c
bT8fJKOD/rq1t2d5jeH8k6zRA7swv2RaMX4B70PRVYcT9JHPHnVeGTECVZeB
pvcG6JcdKyC6jIBDf50JkxHmTRav9242gl4h5WfaJujfAOtP1htB+R+LrT4U
1JnXDNm8M4LEmpPpuTR8/oLO60JVRuCRmczVTUd/c/joc+Qpm+9WnGaYH+ff
Jl1rBOfYZFK0LJDvnrtNNBrh+d/tu7MV1s9vE9zQZgQxXo83x9lgfpp279Ve
IxCSnjn2ci/6H7VEFY4Zwc0v+g8HbZFf+DUGMuH6Gnn5r+AB5HY19V5BY3ik
V69JOoh5d+/1d2wzhp1jfMGeDph3sS3M2tgYXuXsr0xzRP0h768dDsZAtr3N
+u4I1nO+7jgRZAyN634xxl2QoYCpB/8ethVK8ZLHkYc/RQW+NIZuX79WuhvW
L2p17uwxhv++rjjmeOLzhgsuMqmYwOmr1HsfvdGfUUj+YGsCywaxI/O+2P+8
wIN9oSawPlfs1J5TqOsv3VHpNgG1AM1olgur319O9a5cPL/weTw9Hod5I3a3
Z1yoMF/1ZC4xAfsFcsLW21QIPTNrAEnIljyk4HYqJHVfqRNJw/xDTOWtZjR4
+iir+30Wcv+phXPqBOg7DcpO52D+VostNu4EVAtud5e+h/lvK2stswhoDXo5
efYB5nHVWO/iosMM0cahVIz1LVkdHs10uLAoYbH/KfIDLva1axjAVuSSdPk5
+ukVHosqDBARGZfsLMe89kH9f6EMyKrXduGoQP30erHRfAYoXLhwfydg//Id
ddKfGaDzi2tHbBXqt5jZ1ouaQmWaTWDZO8w33PYxU8cUCLP0il+16C9Vl9yy
3xSaVnrWCtQjRw13RPibgl2JPGHQsPr3ZA4pijWFH8e9Yk98xLy6OyXX7pmC
m9jT5pQmZCHdji0v8b7TOC9S1Yz+uEn/gI+mcPaSkcPYF2Tz2yyBPaawk7F3
jvEV59/NLrZnDP0CrtdzO1Z/v2tSAxZN4eH3s+prO7F/Q41EB5sZHL8b0+jQ
jXrlfup5XjOQ8cp0L/uBedcLHzgImkGXZjHrhp+r7/Nux+kNZpC2XJ3t+wv1
xlG3d0JmsLf26+6GQdR9SrdS+c1gffxIx9aR1e/PMWmJ0wzq7ZZOXR5FHuIe
nl1jBuHSfAI9/yH3/TdAmTEFoxGZwl3jWG+UYT0xaAqLxZqMlEmch/VfM9dX
U3gRTAyMTyPbn1XMqjIFf/LBUPNZ5Hx35YoCU9jO4y31YB7z5veX+l43hZHW
kHKWJcwj2sveB5nCvdtJtk4rOK+ck1aLgylIqJVdE2ERJIXYHlmIkjSFr7Mf
FP3ZBEmkW/ndh+YZkPimu+YjhyCup5f9lVsZsG4Py8oVHtSHnW6uvcKAanGR
G73rUf/W2LjbngEh/du0dwsg77H5/h2/n5lTlj5TwsjsQt69TXToT8vocd6M
9SqlAu7r6JB1pCD4tQwyhywbrZWAg4qVImJbcB6dB1PJ+P02v/xl+XmbIKmy
a/CErBYB0K1WabgD/WPFX5mdaBCUZ3LohibqaYq+ZYo00PK1nZ3RRn3nb8k/
01R4tOacWqE+9lebjmmOpUKGXG2WBBXze59YNb2jwL4/HfqBBOpbV+rMUijA
93y0vYWB/MPKXdKNAhE0Af6rlphn98jKmY8CxnxbCgasUV9TsXV2gAzL7dp0
473YXzaUWQPIEHDC4dKcHfKPUymlAWRQ2+Erue8g+r0k/snYkOH3QmhZkQP2
T6gZ8sH9J7f6+j5uJ8znYuMtFSCDc+z9cVdnrE9XmReYMQFJ25exVUexXqV3
X+Z3E2iX+rhtkytyXabXqSoTSB788S7IHettXQSjC0zAsmjySJsH5lfan+9J
N4FALdu4dd7oDzr5NT3KBLJevXil74v5lwcKHYNNoM5YfMTHD/ljULuujwlM
vD8vcicA/X2zTqq434lb/iC3ncb8+we6yQ4mQG419lt3FvNDn3cH7zcBr4P3
MvWDUT93i9G8xwRSetkbfc5j3uimKiMbEwDXE/M5F1HfLbgWkIf+NGxtu4S6
hMXZ3ftMgD9Add+6MOQ1GUXvDpjArvmEUP1w9Lc82nrQyQRcQqYe+0Riv1Zm
jWU3E4hh29+VE41czk9/6G8Cz2LKONtikFcCIw6G4P4sIKGzLg75UL0ya5wJ
sKdfOKafgM9jHKNzMxPX4029iT5JyJtvDAgUm8CBeyaVOdexX/C0rn2NCYQq
5f5pTUX9JX+sM57nHz7hEF+Xsfp+fkZLTJnAF20PQv8m+sGxJp6HDPJktTs5
Wdhv+NwBDwoZLOsTm1pz0J8zsTXLhQyBVtNLHPfQr3WdbddlPH8cKrfzeYD6
7eu5lBoyeJ8i8+oXI//pi/t1gAKpC7l6Pk/Rn6aUbXuJApWX1rnnPMd5hKiH
zz+ggMC1j1UcL5ELT+7+uUCB57l2Z1ursL59+/axPCr0KL/M5ahBvm/R9LeF
Chwlkl/03uN8knbWYkw0sIe+7TkNqMdsSrazo8HyV89+71bsJ3Vr/wtWArYe
/sSf8xX9brlXDdQIsOpXN2ztwH7vFOP32xOQ83cmXa8b9YngtoFHBHw4faDW
+wfm6fKPyePvd2rx5VR2H+bVS1rGLRJAXXfJkmMQ/ayp8g4EHXzifp7TG0b9
r+jcU086pG2g5nv/Rt2LnLgcR4cRaS7W1jHkK7KvWVvoIHjfS4NjAvMpzi+T
J+igv73JUW8K51m3x72cjwGxu66XZ89inuWjyasEA9e7KgOWBeQ7GbK6RxlA
PTnx9vgS5jnuaRe4wIAcbmla3QrWx86JyqQwYDnP8oPSWiHcn+3cDzxigL3J
BctrLEIkUsG/woRKBjzvftTyl02IxMQdWfO+mQECQd/371mHeuuviIU+Bnhv
4Ox8xoW65l6a/DgD6ot0nER5kZslHpCXGCBv5tofxIf5+Sf6rNlNIXTwuluX
AOq8ko3EelPoDq0eNdwgRAr579ec7AZT2CU16Zsjgvrp1i9duH+mlElPs4ih
/l7qq6+YKUzstTrrKoF8ucG3a6MpWPy9sFQnhfM0Le9XEjGF/KsFl5SlsV+i
7EFnAbzPbe1kjZNdnXcrKRrvf85vOaPHt2D9mWLmh2tN4bWDLu9eBfTzt042
/GOA2Jxr4nNF1J1y382OMOB0corwRhVk580l2p0MaFZ9lxGsinmP2FKTPjBA
9cOkVLc68snf7CJlDIg5LnOHtBPzWldONN9lwNAa6613tPB5ziarDV3D84NO
oaqbHvKfhsIthxmw2NJZUr8b/fQDn/aZ4H3Vh0tHhYSsoRA/K88Avlw30gQZ
+7+6Gjs6TAdPo9TqvTTU333g8q+jw/vOd0QpHfsTyoe+5NEhRFDW+pwF6nUf
zuQfocN4SNcRNjvsd+hobNUH3E8O2lwW80D/NlbbwigabP8Xwn7eC3n2aL7V
ERpEJz6+2uODbLnniIkuDYzruJPvBmD/P7dyskaoUKxVe3f7Bcw7sX3n931U
4G2eVkgIQX/6EOWBBhVOeMkVTIai3zhP4QIfFWTuXnr2IgJ57tTzyE8UuGBY
pCsejfPVlEzXFFHg27fuivMxyKI2LrpJFEji168xTkDed+jz4kEKHDpR/v1c
EvLaE//EyBSQr9IZf34d+/FdXRulQoG/4qVs46nIxwrl7UUpUB6gKaGUgVwR
LZvFQoGwxhL1YzeR3c722kyQwVxeg5Z5G+f37mcL6CWD8MWiQx1ZON/MPVee
ZjL8+LrdT/AO9lNJJW+rJkO+WkGE+T3UD/+831SK+1uU0q2IPNTdrDW4Cshg
0Peg+M0DzDP65dON9y12PYX3Cw/Rv+bsMfObZGhKyu3SLMT+H0i/9qeQIWNU
btKnCP3h3gLzCWQ4SrnDkV+M/PVnl1IcGbbflpbqf4r1hP9MfywZZmcyd0iV
rs7DpKp6jQxvLaXodmWoT3Nc54knQ8z9m4cTX6K+QWcoJIkM+9aIBzRUoL7p
4LaINDJI2adHsVWivveSvEQmGYaKRTJJb1d/L94fdfPIUMyV8jSoGvsHCUa3
F5Hh3FGh+qc1qK89mDH2kgzUisSe/96jbhfgf+o9GfiE+acVPiD7m4o7tZHh
m3ccp0sjcoB13Z1fZLhTy7P51ifs97LxkdIMGTw3x2h+/Yx5KXIwzU4BrbOc
pvxf0P9ceJxZnAL1iuynr7SjHsUx14F/3+TLV67CN6x3fhMQi3//w53M2XOd
yNkPChz8KTAey9Tg1Yv1rIQQZy7ed8fnpG1HsL591/i1DVToowdqx48ix6iK
792B55+cGbP6//B9+Cf9fWpNBcO9k2cMJjEvpqV0OI4Kx0tHG+UX0b+rNGll
PQ3U+Dx+Oi2vrjfOzSFqNJh3G57NYNpAInVsfKNoTYNYsQHZ9awbSJU+5FZG
It5Hzvec/cezgcT03yWzXgECLrQ5xKnzof9hmLaHBgGEauddDwHkDUI58dYE
fP/R/qlHeAOud8HLFtcIWEtu3vJ+E+rayl8erxAQfCaA95805kUxqFkb6TCV
L/xvixzqE9kbnmrQYZD/4PvLClh/PfUAqzMdnChLRcWKqIc6NikE0uFbYGZ6
rzLO98mVeXcsHRp6fp4wVMe8yPAklad0oAiG7/HegfW5t+UEaujwmqqgf0sT
/bclLra10UE7qF6uQRv984FcbgN0KCrw5FnQRX29ftO7KTps6+Wd2aaPfPVD
xR+8L+UIPem2M8D+h1o5u3gYIEHsqY0gISe1mseLMuB68PTj58bYj08xj1mG
AbyPU9N+kTFfXqFeQ5EBkX26l4RoyPdcxTaqM2CNcKe7CR39l33qnmgxIIh+
wcbPFHU+lj//djFg8txmvWxz1CM+Jw7tZoBn0VvZJkvkCpbv0YYM+PXzKPeK
NfaXGhbsQT4swj6tshfrdxm1/DRgwFfGg65Dtjh/9vfgdH0GWF0wrblqh+ya
ZrxWF/evJ38Ky+2Rvz2rkt7JAJNfcanDh7Cerf3T6n3wlahGiKgj8sLWTem4
PmuZfXGjHUHusdu1JMmAxxdPW592wf79L7erCeH9sER0171jyMQPAd11DMge
KJf54ooskuUsvkQHMTEHLuYT2M/0U1zLGB2SzVcm1T1R9w3k9u6lA8+l7E4n
b+Tsec3Zz3QIf2ryLs4Xn1fOQfXiGzowDf0qeO2HupBa7PoiOkxYKF6UOIP6
WpPSoGg6eIQ2uJqeRb2c1Ox+Gu8fz7ytgoKRf530jsb9oU2iRLr9InKB4uRp
TTq8HNGrTorE+jyuZ/fxPLNTqvvR22h8vo8++81fEVBoHXJ9PAb5KdO/kzkE
ZL2oPm6ZgPUzo7NnvAgICzdfx5WBnNdtm8xEgIWMo0XoQ/TPBsZ5bsXf04nG
2B8F+LzG2VZ2XDTILdFrNChCPYnLpmqMCitkUbOFp8heb3Vly/H3Gxt+9UAp
zrPgJLcviwp2bVP1pWWr+eN2JhFUKHL9TA94jUy+23B8PxUOFRlGNVdiPT//
rkISFdbNFbxXq8J+Tzo9WxWp8NxIgiPuHeZZ3jYZxfXCOTqa9qcW60GCxLIW
97OW2XDTevRLqf1SHcP9RNy15kED6ncKWEK7KCBYYEI5/hnzhTV5X1fg+XT6
SVh1C3Kv96/7jyngabC5WqYN/ZumhupycH2KuMZ8qR377T4QJ5dKgepPi8Y9
35DNG2gVMRTwFfUI3d2FfpVeo/TLFJA80vHmRg9y21bN18G4Pj6grZnvxXl4
pnZrnKLA6YlnJLt+7MeV9WLBhwIyenIhzwdW9TC1zZ4U+Hg5EYSGsf71vrws
dwoENTCt+P1G3cmVFIj3ua0bfAw+/0EeeP3yLvIXh67zqn9xnjc5DbInKBCS
a1oRO7H6e3vxdwLzlMfKFn9PoZ+et2P9SQq0ayvoM/6tri/tKwGncX8NSQm+
P4d+f92ZTecpoFbH8pJtEbniTwPnFQp08vvPH13GfBsjKdVrFIiy79WtYhIm
MQ346ISl4X5wx/KsNDOydf2Bf3co0Pe74sVFVmH8ff4ajMDzwa7zGdr6nMjW
r2uZGikw8I7jTAY3stqLiK5OPC/wnnk+yytMImkEiL79Q4HRzD2azwQxj33I
1l2ACmlDbwIEhZEXDSY55alAVld7elIU6+M6kvx3UeHWW+4d2yWFSSEnT/wJ
OkYFBlewX8wmzDue+p7/HBVm9gw/GZFG3fSUITmJCha/3qnlySO7dXgoVFGB
iePi9s1qmO+mVC+K37ez+fg2ARPk6b6/76ZocG7P43kaBdm81MSBm4CUA14f
ztOw/6OJ0ceyBNQfG/YcNkX+r95rN+4P/R55uzdZYD73/vV7XAlYPnmMd5/V
qh5R+vMcARoXeh9X7kVWzPt1KpcAs7DMkBlbZPDMPVlOwPFoB2vlA9hP20yo
s5GAjJSOiVQHfB5/tbCvEwQ8vZla1eiI/FNowpqFDh9z9iUzO6N/eaiMdwMd
1jz+rOlzHHmtWefGnbg+PYtju+eGHCgdftCYDjtfmn/9dgLn0+rpqrWkg8Ub
rvt8Xtj/IGzYf4gObrV1gVQf1K33zDG50SG0MYJ+7iT2U9Njf+1Hh5stFLFi
f/S3vU+POEeH5x3MvwdPIe+PtrO7QoemnjcvJQOR77MmKOP+NfLrYsyeIORC
/5trk+nAMrrbIeoczpPf4v49nQ5SEwsqcAH1vrC75bfpoDNbtjwVgrrs6dP3
cuhgs3zmk+JlZJJzS/I9PD+zaGU5XUH/y5veYXheDuec8k2JwHmv7KL636dD
Fl+xUUMUzsuIO3kEuVzYV2BtDOpD9lut0P9FYvtP7WtYf/7kKSPM+09mtMQr
Hv2iOTI62I9jW37YnURkq/OR2jiPjKrbvo5k9J9+426C8+prysuvT0WdaWO9
YxIdbPX6Z8jpyKSLNfExdPA1yqkNuoHzyrWktYXRIZrmlFZ0C/t/u9elju/r
rrmU+0Am5gWkPHyI7/P1nk5diRys59OTNcf33X4gg9PmLvLZh9RNDrgfONp9
j8hFliovUbSmA/dx4UcV97F+MOfyGTIdDP0SzbcVYD97TbUJBTrYBVpJOT5G
fm9joixGB78LvGPJT7D/LfM24KRDbnR0PJ7dSKR/x33ERwjgvRPa8vU15j3T
567E/aC7xe9AeBMy228JDWYClMYWQ343I4sQMDtKg0DOiPtWrZg3Hpf1tI0G
AkY3/ol9w7w9L3mU82lALay6/vjn6vcsoF5mQ4OkOvMKoQH0/4i0zNlNgx/9
X/vPDuF8x1SqphRoECQ+uoP8B7ndw7EN7/ePI4Wa22eQWXWfO5dSYfHO7bnd
c1gv9MQVcvH3DQrSdxaQexeUO1OokPqtmOBYRnZ6a1iG+0n/tL6vF5MIKYRf
qd/6LBXU+WtTm9eKkJjUv1m+9KDCBWVr0GZFveXBF2ZHKoi6HONdy4m6e4KA
NkGFYxfGNF25RUiV0jE8CgZ4X0o/69DAK4LnUe9HzJq4vz1lvqLOj3xvyfST
MhXMmmIfpQgiP/Gojt9ChfTfIl8WNmD9xz3WFpuoMMCWs+AkinrORi9eMSrs
kFGWrRFDvYu7txX3r5DdzxlKkqirkuuzcb1rtCP5xW/CeW4c3nIS719iAfXp
09I4b8L9qybrqeAat/eNvRz64weKRZGf5ncPgTwyiAyOIa+pcePbsg15xnW4
lh/Xu94J7WglrD/o+eq2EBVuLJ5zHFNBXTM54KQoFYZE2CP2qoms/ns2Tn1J
KmjuSCgs00C2UVCak6FCqIV4m5QmzvPTSDRzGxU+ud9buqyNnPVvRF6dChJX
VLcM62Le+YW1SbpUcM8qM7PQR/1Ti12fMe7XL00CSgxQ3/oE+MypYD2xv+q8
CerULzf/uFDhNk/fSB8FdSkIj/SlwqiCpwBBoF6h4Np5ngrhjiFHBMxRF3/B
dS6DCuUN91dybZG38Xzy+UYF9iGNrdwH0H9uxvblbyrsZa6wOHkQ9e/OpueW
qPCf7udbek74vsWvdm+RoYFM3pxekzs+n12jtpM3DaRu5WkpeiL3XJcPukQD
8aR96mHemGdzUO1uMg2ELj6R1/HHeiWlyoFyGrDtd+fPOof+pWz216x4/jcX
4Z6/gP2a+LL/4m9kxfgd295L6E8U4Brahr+Z7dKL7OHIydV1r80IGGHrGPCJ
Q3/dX4m8WAIGFsN76xKwXzy34oubBPyc2Nkpm4zcnJ+n/5CAzu74z1/TkF9u
+OxZQ0D7F4MG9RvYf8M5M5YWAlrrR2uu3kL+FH51qpuAj8+JV4Y5q9/vi5TK
KdyfHs08T7+L9UaLa2KWCajNuftkMhf9R1i0E9jpUJ1m88j8AerRfRfr19Oh
8hpTXt7D1e/VrXWHCB1ehRVmrylEjrvr/EGSDmVBh24eLEJ+mDOTIIvrvy9n
6rNizBuUCr2K60/x8RcJ659hXk27V5kyHQoPHY9xL0X/nJ4bvxodHtoIRVSV
of9wpkgi3ofuE28vSb7Cedv9mPRwv7pr4HvuzGv0S5i5cuN5Nmun1JnPlahH
a5uwI99SbDipVIV6ch6bCvozNgd5XnmH/PtN7EXMSxFWcO2pRb/2qUkm7JfI
3XZEtx71yMTEEpwnbm3YoaQG1L/ZL6bjvDGz6vv/fETdUvfeS3yeyP96rGmf
Uf+Tc1VSig5h/bFm2S2oD2dzv8b3cembHm2hFXUepv9u8dHhQtOw0b521Jd5
PCo56BBUk6r/+Bs+X7VppSITHU6/omiv60KOmPj8c4YA/+JJdZce9CsINE2O
EuB523KrSD9yPf/N3V8JcEtekj45gH7jYY6rHwg4Fv1Q4sPQ6vNUu5sCAYdP
swtc/IN+mqK/1j0C7D2fcXeMof/sxGxQKgH7nV3Yd0ysvh/14QNRBFhZwOLA
DNbrlZ0S8CTARP7MoAWTKClkZTzeaDveBzoC/EPWIgst7T28iQDRWL+VJyyi
JCbaotVxPgJGJ71ENqxDvV7rrPYEDZLfHKV95xclkV6MCng+o8FygHMLt5Ao
qbJ2InBfLg3cFJwcDYRRv58V45RKg91xB89ki2FeWV7MuiAaDByyyXOVxTxD
3U/zRjSw4rPakb4F/ZA3VrKTBuVV5lC/FfNY7TZ+wPPYNUX6VxVlrL93Inw7
3u9nu6gujtuRJy5EXGbG81oCeSxeDesHc/bSZqmgPWvIPrUT85eSHm/8SYWc
h7uTtmhj3tPiPwYdVOB21Nu0XxfrORKmBj9R4bSA7sNIPaz/MvNjQy0VfrzT
0i7fjf5hz/z617jfnN1Z9dsQ/R6+fzlwP3qqrGEpaYz+G89XWh5TQeqH6ncL
Mvb7e/ie6gMqRCapuIZQUR//xbv5DhUmqEqTTwjUw/iKHtzC+828wsWfDMw/
ZqvwOY0KNQXyXBvMMT9Uh+9GMhXUjsilUi1Rb8i5y5ZAhQwhGdlAa8yTKJES
vEYFlvebHj/Yg35TK403V6ngHSyp930f5gseP8ofTYWO7eK13HbIJeQM5ig8
L/eJ7jGwx7zpV2dTI6lQeF24x+cQ1gvE6jYgi9KFPLIPY7678VAW+kMX+f81
OyHTdtkJYf7o4/WXWVwwr9fNeEssFWxdeNZrHUMOGCA3x1GhUpjrhqsr5tsU
CYnh+VqxnmNrujsypdF3Gffn5PNsJfUe6Ff9zBR8gwrLaiyGi16YXyy9EI33
Qbf+NR9UfNE/n1u6Dff3ltQVW0c/9J/9lG3ziAoGpkt98QHI0XHWa0qocH95
3vvtaeQva3PU8X557thM+JZgzCvoUuOox/1WdEpg/3nkePHpvGYqWDWM3468
iM/bIhD06jsV5Hb8ef77MuoJ6UJSeF9tZOofeBKDeRlvrjuI0eBEXUGdQBz6
mbWPrMPvjyPxzCP/BPRPG7py4/dpLMvlp5mC/kBnjRELGrygaCy9yMT5bzve
mQunwT7exZ6NOehnWQzdd50GE23v3gbdRWZVF6+4QwMVtwOR+g8wP8Y991Il
DXKiQwQri1GXkcpeN0cDwz2Mmc3PkO1a6r6z4fovLtRxqRTzTbb4nRQiQKQg
77bJK9RVJ01+4e/36amTl+6+xryThESFHgE2BnpHWd/gfKPUr6YEATGfPm6r
fYf1WxdEvJwI2JaWxq3wHrnupPeoBwE1Ts5jkfVYrzGxsniagDUT008ZnzD/
44bf+VcJuF0OqQ8/Y97p8BLD6wToX44K4v6C9VePZdncJuC0kCTpYzvWnzid
O1JIgGDXgIzqd/TnUk67Pyeg6F4Ra3wX6s3KLPYVBFh4Bw397UHO+hxSWkXA
by3yB+s+zMs5+OZcHQGRKzyFxf2ox987evcjAfLvv8YLDq6uF2Z523C/q4rP
9g8YRv2q02ceXC+dDnjYtv5GFlG4Yv2NgCVpTV2t/3D+y1fdJzvx/jSyLJ76
F/Nj47QncH/UKXm//G8C/T0v/pj9wP0zOLHXbhrzw+vn1/YS4Ec+VF32D/3h
dwOEkPl45PPE5pEXo7RD0V/QOhYVvIg8eJHfoocAxu0yz85l5N+do0FdBAwe
v2y5e81G3C8ZKzzfCQhTNde4zYx86mzaunYCZGaFN6ywbiSFPFsa8vxCAFT+
+OfIsZFUuSm3Q7uJgENR+d8qOVFPqlzwwPV/3jqgQpoH63/JnuHG/T9VzCAr
dD3qGXLPJSsJ2PmT/fJPftS7zMTvlRHQ/PDzMbIQ5vWNVd0vJsAn4AZxT3gj
ien8Ck0VzxP5rKq8ruKozz1m78wggPZx9m+tJOobX+9lTsT7a8rbFoXNqJvM
q72OJGCTgm36iBzymXwfwVMEKBb68Mhuxf4TM9In8fvZuTPq0sFtqB97kBV7
BN8H6ZV7gwrmhVyRFTHH78NOZlehFvJHvbtt0ng+ifzv20kC2TfnakMNDTp4
OSzzGcjTdx75vKRBf7J0VZ8Zcl50s1oRDeaz9j7cY43P1x13WDGDBlvKyoM1
7ZElKRWivjRQM/wy5nUI/YeU+/mO02DXuz8uuYeReSr3UA/h/vJ5s5mIC/Jo
pnw4nQYH9++qtDy26j80nUmiwfGuPTsjXTHvawqvoA7e94fDJeY88PnW3+Nb
xN9/hE9WvLo36jeENwVvpkHidBnLCV/ki6/GHDbS4FZwS2COH/Juz0sPBGhw
f82f0W8ByCJnRJ25aVASwXZE8AzymcdiV9lo8Jpnc6vpWey/obZWfg0N3ifp
0sOCUU8RW9BcxPVv456KV+exf9uj8dJ/VOjO9FSfvoj88LxY/iSe17eE31MJ
Rf+mtG+8f6kw+TBz4/EwZKeaotFRXF/Vy2JvhyNviQkmj1Bh3YvmNV8jkWu5
/ISHqCBkMHpq/VXkR/FTzgNU2FTNOkKLRQ5J5lP8hes3Y9PhkDjkyctVHv14
H2jSaX6RsPo95nZuRSbZ2lDHk1C/TNt2GNm006N8Wwo+T5b/YV6st3W+st05
DdlBwVAH848M3c7JyMD6HZbrvg9SwdP7hXDLTeQY5/5/w1Q4M/U5misTvx/9
j5+u4vyhQb+XTbKRj96sTML1OZaJ1f/cHczLL7/Pjc+fFi41+PQe6nK/Iidn
qHCHW+fgnzycR+9rOGUB97dE609b8lHvce1cWaFCmaiHyeFH2K80tX8TKw2q
b4eVphSi/8NX+Tuc+P3ll2aylyDPHgisF8bzDdf0wM5n6LdZ020sSQMLT43t
zqWY919XJIccDd6qFLx69RLn6d1bdkGDBo+KcjpOVqO+YeLMF7zvHuf/sTmz
BustR++GHaSBtJ+kW8N79Lu/JY4fpUHKjrQZ+UbUWwQSs0/T4OLzWMHOVqyX
qpT1uInfr8gH+3XtqLNb1YvheWrqDEeO1jec7xlvSOdjPF/pXlZL6EZd/Yvf
xSoa2LwKNKcOIlePjF0coQG35PNk/2HMe7HrruAUDWrPT37P+o26C+ehhCUa
6Bt6n1gYQ4ajp1TxfLflrUtE0Szmi899o+8g4IdM9seueayv8d4XhvtJxuXu
DVxLq+vVREqoCQG8lAN3j60RI1UmVHh9sCHg/b2U34nMYiSmw9cOsdsTcJnt
i0YlqxgpZOueiX+438zWWrwR40TmTM2d8iKgWCGGg+AWI5F0FWhL/gR4RdVZ
nuJFXWfe+ulZAhRG2FJz+JDH3/8SvkhAH4Pc/UkA+Vv6O+kwAm4+vLRlSQj7
71w48xnXJ1tu8FQUwbzxF84yeJ/i81os2b8R/W1tXXwJBHxo1F0IE0d91yf5
m8kEhG8/Y1wsifMG6DLX4HmZFPc0qmcT6j76m2NxPZwfG2/ilkG9Yoj0F+9j
T61URXfJYT/WCMH/cL/zfuLp6CqPHF1480oW7qcC+bnJCsh6VI3n2bh++g3+
eaO4+n72RV7Mwf2zRU5zTBnnkY9u6kW22+l8TkIVeYrnSxey4PXMKro6srQG
5ynkj9OdnGd2ICcMXc7HvEhbMZu7msga1X0XsJ9x6f70z9rIF5dIEzjPosj1
H8u6OH/a80HmWwQ8D2zeqqyPnHB1qQSf52THep8DBjjPL7FLzGl4f7DcyPOc
hHpoPK0A34fZO5mHAibIfyxoI/EE6Oop030oyAc42V/H4P77RHPwAw3fR6VG
qDK+b6GthlcUGMi535Z0L+N54RYhe8UM55G93z9yHs8rkQcdDayRrQLELPzw
/rl8dCljD/Zvsvu4Fu8fpQHeN/7tW30/w2uPHSMg0enS1yJ79Atv1jHYTwCh
k2cpexT1p4ePf9cmQKuw6M/F4zhPRDg9XJUAWbnyq51u6N8Ytsy6lYDl9Y21
172QN2VfiNuAf6/BCUOOM8jLlsx54zTYnGqg9icK5/10c0tGPg14eYiP9BjM
yzLbvDmHBguh1p6517BfH1tZXToN2ryP3ndMQt34X1lmFK4X/V7UV9exnvvH
i45LNHhif6ZfNA11TbXNNnifiaFGb26+if1CBd7weNIg6FXS6+2ZqG+XvGN1
jAauGrcOXc1GPeTGtq7DNNh7P3d+8A4yC3PdCzs8T0oVpZFz0b/e58gQrh9q
yWVa2feRr02x+prTQJKz6stSPvbnOtplQ+D9Z7qVr/QxzktyP6JmiPcpj55C
wWLUq4W1FPVo0NI7ZOb7FHXmIpaL2jSo3D8x0vAc+UfLVi08vxY2LkRuK8P+
cveqrdVpcNOEdWv4S2SJ8s3N22kQVcb7rq8C/R+2fSlVpsFpVVEXw0rUnUTs
mZVocPSe9Jqbb7FfXojEs224/ogrZc5Wr84/GdaogOfXhJ2799Ui9zQtmSEr
sxt8f1KHvLL37w5ksfO0s7wNmCeVXhmKzDFpJeLxEfVT7J46mDftZv+stgn7
5w33WCvSoK/bZY9cC7K00c9P2L9pr9d4SCuy5S3/YhUaKEXWbH72FetZzPM+
qtIg/OUmq+EOZB0tCxKuz73/BV6U7MR+4u/jWTVx/ZNpLrTuXv37kTUkcL9P
3afUfeUH6kXt+Zfw/U1EhvGU96G+M3jXDny/D8a0PGUGV9efuX0+NBqwyMbf
sB3G/gpJJ+ZMaeBkO1wf/Rv9Jjdk66xoIFxxY9vkGLKoC10B1//QaKbBqlms
z+fnOe1Hg66KA8Kz8/j+1GRqXgfSQGe8mKK8hPp19Wn1izT4b/+xu8lrxEmV
9b3n4mLwvLKl/sgxTnFSiGZ4buZ9GuysTOpkk0Cdz4py8ScN4iZHufSkxElM
jVq3GnD9H5Gn6vlsRr9sRQgX3tezYmfTv8qhPiV9lc5EAM9Bh/33VbC+uSef
Jk6A27Xn4Z2qyOaPAnPxfFb9Zv1zPg30K/+Q6MLfV5DCW6GzWuIkUl/oUA3u
D60HxckFOujfNnDDS5cAtbgA/95d2O9SiXmPAQED0/LNdEPkk5l7pOgEGG0L
WXPBCLme9ecgngdvHupQKzbB/BcHxwNw//gXp+E0QMG8d4YP39ri/aXqapwY
gTrHd9aPuJ8UzPS/tmBg/5qzbUmHCeBQNPgv1Az1d0H9fM4EHHVIlSy1QF0r
U88E1xOI/2v22wr72duqKLkRIFZNP7dpD+bne4a+P4Hn0X85D/fsQ92vbV4M
96PPiovfIvZjnoaRnIwPAcqH93G+OoB5m4dudPkSEJFQqPv3IPrzxMbNcD3r
q2Z3lzuMeRSlXB/cv3bPOqXZOaHOO6JFCSAgTam8NsYZ9bkS8Ubk9uGA5LXH
kNUljnPg+Vn0vuqRQFfM5+6J6UXd7viIyn/uWL+/T/YAcrrcvXkXT/S7C7T5
Yv63PsfaDm/0D8ocVMT+YtliyZYn0V/p4hWB89k7tjq980f9F6k+yhv3a8l4
Fb3TqKe66u3A9fbbd8Z8USA+39f29CvuWJ/BWisfjOxi2BR6HOvtKpNunsf6
ssRuZResFw52EgjB+okvc1ccsf6LpkpkKDJlIz35INYn/Z1bCkPuztWwx/X6
xvrjScNRWB8uZM9jget/42YnxxjUY95IL+P9UyLmu3LrNdQ7eIIK8Pxwk8O6
pjIJ++8vjbfXQV6jP5d6C59X1iXh3CbcLyf5HalPUOcWsY0fokH3kwalVyWo
1/gXxPbSQMo3Ylb9OeY5HGlM+kaDzNHFBMmX2O9Ndl1dA37vvwarp6qxvvXV
MH8xDX7cyUk4UYu63Xazhw9xP3B2OPyjDtlRcJ3XPfR3N//78FF89f9Pzofg
+v/jZmy10WfUuVlCvyah/yCRUNqCedtFR12u0SD7a4XinXbs3377p0IYrk/X
A/+Jfl9933u2u+LvV2bvjuprXavfu/ihAdwfnAX+i2f5sfq9LWo8wPNeTtN9
h6A+7LfZ+mIxrgd911wU//ajfriVm9UH682l/h0bRFZSuHPHA+u5Oqq+D2O/
Si3OBDesr0uKtx7F+itHuZpwf+mLsHCo/Q/nE+L1dXHBeuo6xd3jqKv5Mlsc
wXqW6pniSdTjuq4lOtLgztsLVQozmL9duXUH7kf9Ibrxt2fRX3rt5k4HGsgZ
Th0SWkDdif1xKt6fji4Vbotewnp76y+OyHdfus+srKCe49Mch/w/NTgwKg==

         "]]},
       Annotation[#, "Charting`Private`Tag$8622#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t [s]\"", TraditionalForm], 
      FormBox["\"[m]\"", TraditionalForm]},
    AxesOrigin->{Automatic, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    LabelStyle->"Subsubsection",
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"h2 ( t )\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.80521599329208*^9, {3.805216066160443*^9, 3.805216090615945*^9}, {
   3.8052164481980634`*^9, 3.8052164657984095`*^9}, 3.805550291322591*^9, {
   3.805562067570878*^9, 3.805562086803538*^9}, 3.805562267480094*^9, {
   3.8055623151784153`*^9, 3.805562355633095*^9}, {3.8055624305975046`*^9, 
   3.8055624459555397`*^9}, 3.8055730433524218`*^9, 3.8055731229017315`*^9, 
   3.805573385402233*^9, 3.8055737736917677`*^9, 3.8072784140394754`*^9, 
   3.807278768755184*^9, {3.807279285086131*^9, 3.807279340784091*^9}, 
   3.80727993798181*^9, 3.8072800115949097`*^9, 3.8072802257072988`*^9, 
   3.807280972331641*^9, 3.8072810244682107`*^9, 3.807281101105256*^9, 
   3.8072825455553317`*^9, 3.807283532789716*^9, 3.8072835804213457`*^9, {
   3.8072838623333693`*^9, 3.8072838796171775`*^9}, 3.8072839583795424`*^9, 
   3.8075449381103334`*^9, 3.8075450330433407`*^9, 3.8075452006988373`*^9, 
   3.8075454818404713`*^9, 3.807545556817956*^9, 3.8075470228279033`*^9, 
   3.8075471899659176`*^9, {3.807547259030216*^9, 3.807547273904437*^9}, 
   3.80754827533591*^9, 3.807548320919005*^9, 3.8075484375082073`*^9, 
   3.807548565101469*^9, 3.8075488002182527`*^9, 3.8075492846223016`*^9, 
   3.807549415649858*^9, 3.8075496092401295`*^9, 3.807549698898352*^9, 
   3.807549736719207*^9, 3.8075509943903913`*^9, 3.8075510476998234`*^9, 
   3.807551175411313*^9, 3.8075525963770347`*^9, 3.8075526684891825`*^9, 
   3.807552950539425*^9, {3.80755312058267*^9, 3.8075531464275513`*^9}, 
   3.8075531816443715`*^9, {3.8075536400723705`*^9, 3.8075536476670623`*^9}, 
   3.807556375127366*^9, 3.807556638094196*^9, 3.8075567049697795`*^9, 
   3.8075573266416407`*^9, 3.807557792508291*^9, 3.8075591350774145`*^9, 
   3.8075591818993263`*^9, 3.807559488047118*^9, 3.807560874454029*^9, 
   3.8075614660292907`*^9, 3.8075615618572474`*^9, 3.8075618443064194`*^9, 
   3.8075618851660604`*^9, 3.807561981287692*^9, 3.8075621069527397`*^9, 
   3.807562291117811*^9, {3.80756249419567*^9, 3.8075625218965874`*^9}, 
   3.8075627306749167`*^9, 3.8242115428701963`*^9, 3.8242120451146016`*^9, 
   3.82421209694893*^9, 3.824214721358412*^9, 3.8242149495818105`*^9, 
   3.8242155608192215`*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"c6792315-8432-447f-b307-086857b680f0"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 72730, 2109, 4758, "Input",ExpressionUUID->"c5d04a80-3926-43d6-8e27-ed38abb5f8d4",
 InitializationCell->True],
Cell[73313, 2133, 98206, 1647, 565, "Output",ExpressionUUID->"83e74f64-0ac9-4c0c-8adc-303c6be77c46"],
Cell[171522, 3782, 102927, 1725, 523, "Output",ExpressionUUID->"1a884786-c7ee-4a22-a21a-4051ff466035"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274486, 5512, 12851, 323, 1182, "Input",ExpressionUUID->"46531b23-8898-4625-8c24-005ead5ef8e6",
 InitializationCell->True],
Cell[287340, 5837, 7552, 209, 204, "Output",ExpressionUUID->"cb6eb787-0695-44fb-b6d9-d7d4a9a4576c"]
}, Open  ]],
Cell[294907, 6049, 149, 3, 55, "Input",ExpressionUUID->"1dcee5cb-537d-40d6-a9d6-cd562d630c13"],
Cell[CellGroupData[{
Cell[295081, 6056, 27261, 627, 1553, "Input",ExpressionUUID->"58440a08-1239-47e6-86c3-bbe4465df837",
 InitializationCell->True],
Cell[322345, 6685, 1527, 22, 36, "Output",ExpressionUUID->"6af21107-762d-449e-949b-24c80e262e23"],
Cell[323875, 6709, 1527, 22, 36, "Output",ExpressionUUID->"e8f3391a-c54e-4b1e-b532-b8a85e5230fb"]
}, Open  ]],
Cell[325417, 6734, 7647, 169, 214, "Input",ExpressionUUID->"94c95cbb-ae66-48e1-bc2a-c1accdff1c6e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[333089, 6907, 2789, 71, 163, "Input",ExpressionUUID->"7b841b07-b8ce-4a4b-8b42-0c93944af92a",
 InitializationCell->True],
Cell[335881, 6980, 218786, 4954, 219, "Output",ExpressionUUID->"79c79a12-f34f-4360-8d29-b1ffc0cd0783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554704, 11939, 29764, 572, 1601, "Input",ExpressionUUID->"87574f49-9512-4c1b-9dd6-3e489fe520e5",
 InitializationCell->True],
Cell[584471, 12513, 2564, 40, 23, "Message",ExpressionUUID->"b3667f3f-75af-4d13-ba91-2c9764ca37d4"],
Cell[587038, 12555, 470725, 7913, 2278, "Output",ExpressionUUID->"c6792315-8432-447f-b307-086857b680f0"]
}, Open  ]]
}
]
*)

